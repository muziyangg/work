[{"content":"仪器配置图片 ​​\n​​\n​​\n​​\n​​\n仪器接口程序名称: MI.MIFAU680 /// 描述: AU 680仪器接口 /// 通讯方式：双向 /// 编写者:liuzf /// 编写日期: 20150827 /// MIFAU680(mi) s mi=$g(mi) i \u0026#39;$l(mi) q s ^TMPMACHDATA1(mi,11)=mi s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),17) //端口号 //控制字符 SET $ZTRAP=\u0026#34;ErrHandler\u0026#34; s stx=$c(2),etx=$c(3),ack=$c(6),nak=$c(15),etb=$c(23),end=$c(5) s (epis,result,date,time,QC)=\u0026#34;\u0026#34; s ^TMPMACHDATA1(mi,10)=mi i $$Start^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q s ^TMPMACH10(mi,50)=$h c Port q Main s record=$$Read^MI.MIF000(mi,stx,etb_\u0026#34;,\u0026#34;_etx) q:\u0026#39;$l(record) d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) ;d ACK //上传项目 //R 00002803 0169 1003007\u0026#34; //R 00000201 0059□□□□□□□□□□A010001815 //D 00000107 E207 E0970137.1r 098002.39r 0990105.3r \u0026#34; //S 003001 0173 1002947 E001002003004015\u0026#34; //S□000201□0059□□□□□□□□□□A010001815□□□□E027 //S□001101□0001□□□□□□□□□□1000000028□□□□E097098 //S□000801□0059□□□□□□□□□□A010009152□□□□E0270 //S□001101□0001□□□□□□□□□□1000000028□□□□E097098 //D□000508□0048□□□□□□□□□□□□A0139941□□□□E018009.56r□ //R□00000801□0059□□□□□□□□□□A010009152 //S 0000105 0007 A0060359 E002010013014015016045049054058092097098099 s texttype=$e(record,1,2) i texttype=\u0026#34;RH\u0026#34; d q .s epis=$tr($e(record,16,39),\u0026#34; \u0026#34;) .;s Pos=$e(record,5,41) .s Pos=$e(record,5,39) .s RackNo=$e(Pos,1,6) .d ReRequest i texttype=\u0026#34;R \u0026#34; d q .s epis=$tr($e(record,14,39),\u0026#34; \u0026#34;) .s Pos=$e(record,3,41) .s RackNo=$e(Pos,1,6) .///标本核收 .;s retVal=$$ReceiveLabno^MI.MIF000(mi,epis,RackNo) .;i retVal\u0026#39;=1 Quit .d SendTestItem //采集结果 i texttype=\u0026#34;D \u0026#34;!(texttype=\u0026#34;d \u0026#34;)!(texttype=\u0026#34;DQ\u0026#34;)!(texttype=\u0026#34;DH\u0026#34;)!(texttype=\u0026#34;dH\u0026#34;) d q .s block=$e(record,40) .s temstr=record .f temi=1:1:$l(temstr,etb) d ..s record=$p(temstr,etb,temi) ..i $e(record,1)=$c(2) s record=$p(record,$c(2),2) ..i \u0026#39;$l(record) q ..///D 00000101 E003 E15 288.5 ..///D 00003007 0153 1003005 E0010007.1r 0020016.8r 0030135.1r 0040017.6r 015006.21r \u0026#34; ..// D□00□□□□02□P002□□□□□□□□□□E030007032□□□□E0600053.4r□ ..// D□00000608□0063□□□□□□□□□□A010017861□□□□E019002.17r□020004.29r□022001.15r□023001.97r□024001.40r□025000.95r□0320068.4r□033405.67r□043001.01r□044002.05r□045002.36r□092001.18r□095001.17r□097000135r□0980006.9r□099000103r□ ..s res=$E(record,29,$l(record)) ..s (sample,epis,surname,result,date,time,QC)=\u0026#34;\u0026#34; ..s epis=$tr($e(record,14,25),\u0026#34; \u0026#34;) ..I \u0026#39;$L(epis) D ...S epis=$tr($e(record,10,13),\u0026#34; \u0026#34;) ..//流水号转条码号 ..i $l(epis)\u0026lt;5,epis\u0026#39;[\u0026#34;E\u0026#34; d ...s WorkGroupMachienDR=$lg(^dbo.BTMIMachineParameterD(mi),6) ...i \u0026#39;$d(^dbo.RPVisitNumberReportI(\u0026#34;IndexEpisodeNo\u0026#34;,$zd(+$h,8),WorkGroupMachienDR,\u0026#34; \u0026#34;_epis)) q ...s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexEpisodeNo\u0026#34;,$zd(+$h,8),WorkGroupMachienDR,\u0026#34; \u0026#34;_epis,\u0026#34;\u0026#34;)) ...s VisitNumberDR=$lg(^dbo.RPVisitNumberReportD(ReportDR),2) ...s epis=$lg(^dbo.RPVisitNumberD(VisitNumberDR),2) ..i texttype=\u0026#34;DQ\u0026#34; d ...s epis=$tr($e(record,24,27),\u0026#34; \u0026#34;) ...s epis=\u0026#34;Q\u0026#34;_epis ...;s QC=$e(record,45) ...;s QC=\u0026#34;QC\u0026#34;_QC,epis=QC ...;s QC=\u0026#34;\\\u0026#34;_epis ...;s res=$e(record,41,$l(record)) ..f j=1:14:$l(res) s rec=$e(res,j,j+13) q:rec=\u0026#34;\u0026#34; d ...s code=$e(rec,1,3),resx=+$tr($e(rec,4,14),\u0026#34; \u0026#34;),flag=$tr($e(rec,13,14),\u0026#34; \u0026#34;) ...S:resx?1\u0026#34;.\u0026#34;.N resx=\u0026#34;0\u0026#34;_resx ...s resx=$tr(resx,\u0026#34;GM\u0026#34;) ...i $e(resx,1,2)=\u0026#34;-.\u0026#34; s resx=\u0026#34;-0.\u0026#34;_$e(resx,3,$l(resx)) ...s result=result_code_ResultDeli_resx_ItemDeli .i $l(epis),$l(result) d //block=\u0026#34;E\u0026#34;, ..d Save^MI.MIF000(mi,epis,result,date,time,QC) ..s (sample,epis,surname,result,date,time,QC)=\u0026#34;\u0026#34; q LOAD ; i $d(^TMIF(mi,10)) k ^TMIF(mi,10) i $d(^TMP($zn,mi,\u0026#34;LL\u0026#34;)) k ^TMP($zn,mi,\u0026#34;LL\u0026#34;) //d loadlist^MIF000(mi) s (sx,line)=\u0026#34;\u0026#34; f s sx=^TMP($zn,mi,\u0026#34;LL1\u0026#34;,sx) q:sx=\u0026#34;\u0026#34; d .s send=^(sx) .s data=\u0026#34;S \u0026#34;_send_data .s line=$o(^TMIF(mi,10,\u0026#34;\u0026#34;),-1)+1,^TMIF(mi,10,line)=data q ; send \u0026#39;ack\u0026#39; to instrument ACK h 0.5 s ack=$c(6) w ack,*-3 d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q ; send string to instrument SAVE(mi) ; Create LoadList Records s (epis,samno,str)=\u0026#34;\u0026#34; s epis=^TMP(\u0026#34;MIF000\u0026#34;,$j,\u0026#34;LL\u0026#34;,\u0026#34;EPISODE\u0026#34;),epis=$j($p(epis,$c(1),1),20) s samno=+^TMP(\u0026#34;MIF000\u0026#34;,$j,\u0026#34;LL\u0026#34;,\u0026#34;SAMPLE\u0026#34;) s dumy=$j(\u0026#34; \u0026#34;,4),blockno=\u0026#34;E\u0026#34; s sex=$j(\u0026#34; \u0026#34;,1),age=$j(\u0026#34; \u0026#34;,3),month=$j(\u0026#34; \u0026#34;,2),pat=$j(\u0026#34; \u0026#34;,60) s patinfo=sex_age_month_pat s (z,test)=\u0026#34;\u0026#34; f s z=$o(^TMP(\u0026#34;MIF000\u0026#34;,$j,\u0026#34;LL\u0026#34;,\u0026#34;TEST\u0026#34;,z)) q:z=\u0026#34;\u0026#34; s test=test_z s str=epis_dummy_blockno_patinfo_test s ^TMP(\u0026#34;MIFCL900\u0026#34;,mi,\u0026#34;LL\u0026#34;,samno)=str q SEND ; s (x,str)=\u0026#34;\u0026#34; f s x=$o(^TMIF(mi,10,x)) q:x=\u0026#34;\u0026#34; d .s str=^(x) ;;f i=1:1:2 d q:ok .w stx_str_etx,*-3 d Trace^MI.MIF000(mi,str,\u0026#34;H--\u0026gt;M\u0026#34;) s str=\u0026#34;SE00\u0026#34; w stx_str_etx,*-3 d Trace^MI.MIF000(mi,str,\u0026#34;H--\u0026gt;M\u0026#34;) k ^TMP($zn,mi,\u0026#34;LL1\u0026#34;) q //d SendTestItem^MI.MIFAU680 SendTestItem s ItemChannel=\u0026#34;\u0026#34; ;s epis=\u0026#34;$$SearchTestItem^MI.MIFAU680(\u0026#34;A010017297\u0026#34;)\u0026#34; s ItemChannel=$$SearchTestItem(epis) ;s ItemChannel=\u0026#34;002010013014015016045049054058092097098099\u0026#34; ;s str=\u0026#34;S \u0026#34;_Pos_\u0026#34; \u0026#34;_\u0026#34; E\u0026#34;_ItemChannel s str=\u0026#34;S \u0026#34;_Pos_\u0026#34; \u0026#34;_\u0026#34; E\u0026#34;_ItemChannel //s str=\u0026#34;S \u0026#34;_Pos_\u0026#34; \u0026#34;_\u0026#34; E008005009\u0026#34; //ItemChannel //s str=\u0026#34;S 001101 0002 1000000030 E005008009\u0026#34; w stx_str_etx,*-3 d Trace^MI.MIF000(mi,str,\u0026#34;H--\u0026gt;M\u0026#34;) ;s str=\u0026#34;SE\u0026#34; ;w stx_str_etx,*-3 d Trace^MI.MIF000(mi,str,\u0026#34;H--\u0026gt;M\u0026#34;) ;r *a:5 d Trace^MI.MIF000(mi,$s($c(a)=ack:\u0026#34;ACK\u0026#34;,$c(a)=nak:\u0026#34;NAK\u0026#34;,1:$c(a)),\u0026#34;H\u0026lt;--M\u0026#34;) s epis=\u0026#34;\u0026#34; q ReRequest s ItemChannel=\u0026#34;\u0026#34; s str=\u0026#34;SH\u0026#34;_Pos_\u0026#34; \u0026#34;_\u0026#34; E\u0026#34;_ItemChannel w stx_str_etx,*-3 d Trace^MI.MIF000(mi,str,\u0026#34;H--\u0026gt;M\u0026#34;) s str=\u0026#34;SE\u0026#34; w stx_str_etx,*-3 d Trace^MI.MIF000(mi,str,\u0026#34;H--\u0026gt;M\u0026#34;) r *a:5 d Trace^MI.MIF000(mi,$s($c(a)=ack:\u0026#34;ACK\u0026#34;,$c(a)=nak:\u0026#34;NAK\u0026#34;,$c(a)=stx:\u0026#34;NAK\u0026#34;,1:$c(a)),\u0026#34;H\u0026lt;--M\u0026#34;) i $c(a)=stx w etx d Trace^MI.MIF000(mi,etx,\u0026#34;H--\u0026gt;M\u0026#34;) q SearchTestItem(epis) S tcx=\u0026#34;\u0026#34;,tc=\u0026#34;\u0026#34; d ScanOne^MI.MIF000(mi,epis) i $d(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis)) f N=1:1 s tc=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis,tc)) q:tc=\u0026#34;\u0026#34; d .I $L(tc)=2 D ..S tc=\u0026#34;0\u0026#34;_tc .I $L(tc)=3 D ..S tc=tc .I $L(tc)\u0026gt;=4 D ..S tc=$E(tc,2,4) .s tcx=tcx_tc Q tcx ErrHandler d Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) h 10 Q GetTestItem(mi) S mi=$G(mi) S tc=\u0026#34;\u0026#34;,tcs=\u0026#34;\u0026#34; F { S tc=$O(^TMIF(mi,2,tc)) Q:\u0026#39;$L(tc) S data=$G(^TMIF(mi,2,tc)) S flag=$P(data,\u0026#34;\\\u0026#34;,3) Continue:flag\u0026#39;=\u0026#34;Y\u0026#34; S chl=$P(data,\u0026#34;\\\u0026#34;,1) I $L(chl)\u0026gt;3 { S chl=$E(chl,2,$L(chl)) } S tcs=tcs_chl } Q tcs \u0026#34;\u0026#34;\u0026#34; ","date":"2025-01-12T00:00:00Z","image":"https://work.717170.xyz/p/%E8%B4%9D%E5%85%8B%E6%9B%BCau68020250112235959/assets/1-20250101225649-ie39g4u_hu_90233f7aff8544da.jpg","permalink":"https://work.717170.xyz/p/%E8%B4%9D%E5%85%8B%E6%9B%BCau68020250112235959/","title":"贝克曼AU680"},{"content":"第三方his接口相关内容 在标本接收核收方法增加调用第三方标本接收方法 标本接收核收方法\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 //*****************三方HIS核收起始********************// ;b ;run s quitret=\u0026#34;\u0026#34; i $e(Labno)=\u0026#34;*\u0026#34; d .s ret=##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdListNew(Labno, UserCode, AssayNo, EpisodeNo, WorkGroupMachineDR, TransmitDate, HospitalDR, RecFlag, ReceiveNotes, SpecimenQualityDR, CarryUserDR, \u0026#34;\u0026#34;, RackNo, IP, WorkGroupDR,Sessions) .i ret\u0026#39;=0 s quitret=ret .e s quitret=1 ;b ;quitret i $e(Labno)=\u0026#34;*\u0026#34; try{s return=##Class(LIS.Service.ENS.TransReport).ReturnStatus(Labno,quitret)}catch{} i $l(quitret) q quitret //*****************三方HIS核收终止********************// //*****************三方体检核收起始********************// b ;run s quitret=\u0026#34;\u0026#34; i $l(Labno)=14 d .s ret=##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdListNew(Labno, UserCode, AssayNo, EpisodeNo, WorkGroupMachineDR, TransmitDate, HospitalDR, RecFlag, ReceiveNotes, SpecimenQualityDR, CarryUserDR, \u0026#34;\u0026#34;, RackNo, IP, WorkGroupDR,Sessions) .i ret\u0026#39;=0 s quitret=ret .e s quitret=1 b ;quitret try{s return=##Class(LIS.Service.ENS.TransReport).ReturnStatus(Labno,quitret)}catch{} i $l(quitret) q quitret //*****************三方体检核收终止********************// 标本接收reator： yanghaoran /// CreateDate： 20240407 /// Description： 接收外部标本 /// Table： 无 /// Input： 检验号 /// Output： 无 /// Return： 错误信息 /// Others： 无 /// w ##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdListNew(\u0026#34;2779164\u0026#34;,\u0026#34;113\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;2\u0026#34;,\u0026#34;20160819\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;H\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) /// w ##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdListNew(\u0026#34;**4868149*\u0026#34;,\u0026#34;demo\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;20240409\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;C\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;10.49.25.10\u0026#34;,\u0026#34;1\u0026#34;) /// w ##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdListNew(\u0026#34;**4860462*\u0026#34;,\u0026#34;demo\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;3\u0026#34;,\u0026#34;13\u0026#34;,\u0026#34;20240408\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;H\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;2\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;10.49.25.9\u0026#34;,\u0026#34;5\u0026#34;,\u0026#34;8280^5^0^2^1\u0026#34;) /// w ##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdListNew(\u0026#34;24041406012005\u0026#34;,\u0026#34;demo\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;20240415\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;C\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;10.49.25.10\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;8280^1^0^2^1\u0026#34;) ClassMethod ReceiveLisOrdListNew(Labno, UserDR, AssayNo, EpisodeNo, WorkGroupMachineDR, TransmitDate, RecHospitalDR, RecFlag, ReceiveNotes, SpecimenQualityDR, CarryUserDR, PlacerLabno, RackNo, OperIP, WorkGroupDR, Sessions) As %String { s Labno=$g(Labno),UserDR=$g(UserDR),EpisodeNo=$g(EpisodeNo),WorkGroupMachineDR=$g(WorkGroupMachineDR),RecHospitalDR=$g(RecHospitalDR) s RecFlag=$g(RecFlag),ReceiveNotes=$g(ReceiveNotes),SpecimenQualityDR=$g(SpecimenQualityDR),TransmitDate=$g(TransmitDate) s TransmitDate=$tr(TransmitDate,\u0026#34;-\u0026#34;),CarryUserDR=$g(CarryUserDR) s AssayNo=$g(AssayNo) s PlacerLabno=$g(PlacerLabno) s RackNo=$g(RackNo) s OperIP=$g(OperIP),WorkGroupDR=$g(WorkGroupDR) b ;ReceiveLisOrdListNew s UserDR=$o(^dbo.SYSUserI(\u0026#34;IndexCode\u0026#34;,UserDR,\u0026#34;\u0026#34;)) ;Set $ZTrap = \u0026#34;ErrorHandle\u0026#34; ;s ^TMP(\u0026#34;LIS.Service.ENS.TransReport\u0026#34;,\u0026#34;ReceiveLisOrdList\u0026#34;)=$lb(Labno, UserDR, AssayNo, EpisodeNo, WorkGroupMachineDR, TransmitDate, RecHospitalDR, RecFlag, ReceiveNotes, SpecimenQualityDR, CarryUserDR, PlacerLabno, RackNo, OperIP, WorkGroupDR, Sessions) i \u0026#39;$l(Labno) q \u0026#34;-1^检验号为空！\u0026#34; //20160822 yy 判断是否有记接收了标本 //i $d(^DHCLis(\u0026#34;ReceveFormOtherHis\u0026#34;,Labno)) q \u0026#34;-1^该标本已经核收\u0026#34; //s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;成功\u0026lt;/ResultContent\u0026gt;\u0026lt;Orders\u0026gt;\u0026lt;OrderList\u0026gt;\u0026lt;OrdID\u0026gt;\u0026lt;/OrdID\u0026gt;\u0026lt;LabNo\u0026gt;1600904130\u0026lt;/LabNo\u0026gt;\u0026lt;ArcimCode\u0026gt;L002\u0026lt;/ArcimCode\u0026gt;\u0026lt;ArcimDesc\u0026gt;血常规\u0026lt;/ArcimDesc\u0026gt;\u0026lt;OrderQty\u0026gt;1\u0026lt;/OrderQty\u0026gt;\u0026lt;BillCode\u0026gt;P\u0026lt;/BillCode\u0026gt;\u0026lt;SpecimenTypeCode\u0026gt;\u0026lt;/SpecimenTypeCode\u0026gt;\u0026lt;SpecimenTypeDesc\u0026gt;\u0026lt;/SpecimenTypeDesc\u0026gt;\u0026lt;SpVolume\u0026gt;\u0026lt;/SpVolume\u0026gt;\u0026lt;ColInfo\u0026gt;\u0026lt;/ColInfo\u0026gt;\u0026lt;Container\u0026gt;\u0026lt;/Container\u0026gt;\u0026lt;GTSeq\u0026gt;\u0026lt;/GTSeq\u0026gt;\u0026lt;SpecFlag\u0026gt;\u0026lt;/SpecFlag\u0026gt;\u0026lt;VerifyDate\u0026gt;2016-04-26\u0026lt;/VerifyDate\u0026gt;\u0026lt;VerifyTime\u0026gt;13:43:09\u0026lt;/VerifyTime\u0026gt;\u0026lt;ColDate\u0026gt;\u0026lt;/ColDate\u0026gt;\u0026lt;ColTime\u0026gt;\u0026lt;/ColTime\u0026gt;\u0026lt;AppDeptCode\u0026gt;\u0026lt;/AppDeptCode\u0026gt;\u0026lt;AppDeptDesc\u0026gt;体检科\u0026lt;/AppDeptDesc\u0026gt;\u0026lt;RecDeptCode\u0026gt;\u0026lt;/RecDeptCode\u0026gt;\u0026lt;RecDeptDesc\u0026gt;\u0026lt;/RecDeptDesc\u0026gt;\u0026lt;TSPrice\u0026gt;20\u0026lt;/TSPrice\u0026gt;\u0026lt;OrderStatus\u0026gt;E\u0026lt;/OrderStatus\u0026gt;\u0026lt;DocCode\u0026gt;\u0026lt;/DocCode\u0026gt;\u0026lt;DocDesc\u0026gt;\u0026lt;/DocDesc\u0026gt;\u0026lt;RepLoct\u0026gt;\u0026lt;/RepLoct\u0026gt;\u0026lt;RepDate\u0026gt;\u0026lt;/RepDate\u0026gt;\u0026lt;RepTime\u0026gt;\u0026lt;/RepTime\u0026gt;\u0026lt;Note\u0026gt;\u0026lt;/Note\u0026gt;\u0026lt;AdmNo\u0026gt;\u0026lt;/AdmNo\u0026gt;\u0026lt;AdmDate\u0026gt;2016-04-26\u0026lt;/AdmDate\u0026gt;\u0026lt;AdmTime\u0026gt;13:43:09\u0026lt;/AdmTime\u0026gt;\u0026lt;AdmTypeCode\u0026gt;\u0026lt;/AdmTypeCode\u0026gt;\u0026lt;AdmTypeDesc\u0026gt;体检\u0026lt;/AdmTypeDesc\u0026gt;\u0026lt;FeeType\u0026gt;\u0026lt;/FeeType\u0026gt;\u0026lt;PatientWard\u0026gt;\u0026lt;/PatientWard\u0026gt;\u0026lt;BedNo\u0026gt;\u0026lt;/BedNo\u0026gt;\u0026lt;Diagnose\u0026gt;\u0026lt;/Diagnose\u0026gt;\u0026lt;RegisterNo\u0026gt;16009041\u0026lt;/RegisterNo\u0026gt;\u0026lt;PatientName\u0026gt;测试（童）\u0026lt;/PatientName\u0026gt;\u0026lt;SexCode\u0026gt;M\u0026lt;/SexCode\u0026gt;\u0026lt;SexDesc\u0026gt;男\u0026lt;/SexDesc\u0026gt;\u0026lt;DOB\u0026gt;1987-04-26\u0026lt;/DOB\u0026gt;\u0026lt;Age\u0026gt;29岁\u0026lt;/Age\u0026gt;\u0026lt;DocumentID\u0026gt;D16008409\u0026lt;/DocumentID\u0026gt;\u0026lt;PatientAddress\u0026gt;\u0026lt;/PatientAddress\u0026gt;\u0026lt;IdentityCardNo\u0026gt;\u0026lt;/IdentityCardNo\u0026gt;\u0026lt;Telephone\u0026gt;\u0026lt;/Telephone\u0026gt;\u0026lt;SpecUserCode\u0026gt;\u0026lt;/SpecUserCode\u0026gt;\u0026lt;StartDate\u0026gt;\u0026lt;/StartDate\u0026gt;\u0026lt;StartTime\u0026gt;\u0026lt;/StartTime\u0026gt;\u0026lt;SendFlag\u0026gt;NW\u0026lt;/SendFlag\u0026gt;\u0026lt;/OrderList\u0026gt;\u0026lt;/Orders\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; ;s retObj=##Class(UtilsController.LIS.UtilsControllerHttpSoap12Endpoint).%New() ;s Input=retObj.ReceiveLisOrdList(Labno) //20160818 yy ;s Input=$g(^TMPLISORDINFOS(\u0026#34;LisOrdInfos\u0026#34;,Labno)) s CurNamespace=$ZUTIL(5) s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() NEW $NAMESPACE s $NAMESPACE= WebNamespace s Input=##Class(LISAPP.LIS.BLL.DHCReceiveInterface).GetLabNoInfoSFHIS(Labno,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) b ;Input s $NAMESPACE= CurNamespace i \u0026#39;$l(Input) q \u0026#34;-1^未查询到标本信息！\u0026#34; s repid=$i(^CacheTemp) k ^TMP($zn,$j) s RetValue=100 S UncheckInfo=\u0026#34;\u0026#34; //未核收医嘱信息 //读取医嘱 s obj= ##class(LIS.Util.COM.XML).FromXML(Input) s ResultCode=obj.ResultCode s ResultContent=obj.ResultContent i (ResultCode=-1){ s RetValue=\u0026#34;-1^\u0026#34;_ResultContent } b ;ResultCode i (ResultCode=0)||(ResultCode=\u0026#34;\u0026#34;) { s objMldVis=##Class(LIS.Model.RPVisitNumber).%New() s Counts=+obj.Orders.%pIndex s (RegNo,AdmNo,AdmTypeCode,MedicalRecordNo,SpecimenTypeCode,AdmDate,AdmTime,PatName,SexCode)=\u0026#34;\u0026#34; s (DOB,Age,AppDeptCode,AppDeptDesc,DocCode,DocDesc,VerifyDate,VerifyTime,Diagnose)=\u0026#34;\u0026#34; s (Telephone,IdentityCardNo,PatientAddress,Note,ColDate,ColTime,SpecUserCode)=\u0026#34;\u0026#34; s err=\u0026#34;\u0026#34; f tmpi=0:1:(Counts-1) { s OrderList=obj.Orders.Get(tmpi) b ;OrderList //s LabNo=OrderList.LabNo s ArcimCode=$tr(OrderList.ArcimCode,$c(0)) s ArcimDesc=$tr(OrderList.ArcimDesc,$c(0)) s TSPrice=$tr(OrderList.TSPrice,$c(0)) b ;a901 ///获取HISCode关联码医嘱 s TestSetDR=$o(^dbo.BTTestSetI(\u0026#34;IndexHISCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(ArcimCode),\u0026#34;\u0026#34;)) // b ;a902 ///获取医嘱代码关联 i \u0026#39;$l(TestSetDR) s TestSetDR=$o(^dbo.BTTestSetI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(ArcimCode),\u0026#34;\u0026#34;)) i \u0026#39;$l(TestSetDR) s err=\u0026#34;-1^检验医嘱【\u0026#34;_ArcimDesc_\u0026#34;】未对照：\u0026#34;_ArcimCode q b ;a904 ///判断医嘱是否核收 i $d(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno))){ s mVisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) s RowID=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,mVisitNumberDR,TestSetDR,\u0026#34;\u0026#34;)) ;s RowID=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,mVisitNumberDR,\u0026#34;\u0026#34;)) b ;a905 i $l(RowID){ ;continue s WGMDR=$LG($g(^dbo.RPVisitNumberTestSetD(RowID)),5) I $L(WGMDR) continue } } b ;a903 ///核收判断医嘱是否本工作小组 i (RecFlag=\u0026#34;H\u0026#34;) { s Reterr=##Class(LIS.Service.ENS.TransReport).GetTSDefWGroupMiInfo(TestSetDR,WorkGroupMachineDR) i Reterr\u0026#39;=0 d .i \u0026#39;$l(TSPrice) s TSPrice=\u0026#34;未获取到价格\u0026#34;\t//YHR 20240409 记录未核收医嘱 .s ^LISTMPDATA(\u0026#34;WHSYZ\u0026#34;,Labno,TestSetDR)=TSPrice ;b ;a MI.Special.RecordData\ti Reterr\u0026#39;=0 s UncheckInfo=Reterr_\u0026#34;,\u0026#34;_UncheckInfo continue } s ^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;,TestSetDR)=TSPrice //接收医嘱列表 s ^TMP($zn,$j,repid,\u0026#34;SpecimenDR\u0026#34;)=$lg($g(^dbo.BTTestSetD(TestSetDR)),10)\t//YHR 20240409 标本默认标本类型 k ^LISTMPDATA(\u0026#34;WHSYZ\u0026#34;,Labno,TestSetDR) b ;a102 //20160818 yy s OrderID=$tr(OrderList.OrdID,$c(0)) s SpecimenTypeCode=$tr(OrderList.SpecimenTypeCode,$c(0)) s RegNo=$tr(OrderList.RegisterNo,$c(0)) s AdmTypeCode=$tr(OrderList.AdmTypeCode,$c(0)) s AdmNo=$tr(OrderList.AdmNo,$c(0)) s MedicalRecordNo=$tr(OrderList.DocumentID,$c(0)) s AdmDate=$tr(OrderList.AdmDate,$c(0)) s AdmTime=$tr(OrderList.AdmTime,$c(0)) s PatName=$tr(OrderList.PatientName,$c(0)) s SexCode=$tr(OrderList.SexCode,$c(0)) i SexCode=\u0026#34;1\u0026#34; s SexCode=\u0026#34;M\u0026#34; i SexCode=\u0026#34;2\u0026#34; s SexCode=\u0026#34;F\u0026#34; s DOB=$tr(OrderList.DOB,$c(0)) s Age=$tr(OrderList.Age,$c(0)) s AppDeptCode=$tr(OrderList.AppDeptCode,$c(0)) s AppDeptDesc=$tr(OrderList.AppDeptDesc,$c(0)) s DocCode=$tr(OrderList.DocCode,$c(0)) s DocDesc=$tr(OrderList.DocDesc,$c(0)) s VerifyDate=$tr(OrderList.VerifyDate,$c(0)) s VerifyTime=$tr(OrderList.VerifyTime,$c(0)) s Diagnose=$tr(OrderList.Diagnose,$c(0)) s Telephone=$tr(OrderList.Telephone,$c(0)) s IdentityCardNo=$tr(OrderList.IdentityCardNo,$c(0)) s PatientAddress=$tr(OrderList.PatientAddress,$c(0)) s Note=$tr(OrderList.Note,$c(0)) s ColDate=$tr(OrderList.ColDate,$c(0)) s ColTime=$tr(OrderList.ColTime,$c(0)) s SpecUserCode=$tr(OrderList.SpecUserCode,$c(0)) s BedNo=$tr(OrderList.BedNo,$c(0)) } b ;FGJS i $l(err),err\u0026#39;=0 s RetValue=err q RetValue I \u0026#39;$D(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;)),RecFlag=\u0026#34;C\u0026#34; s RetValue=\u0026#34;无可接收医嘱！\u0026#34; q RetValue I \u0026#39;$D(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;)),RecFlag=\u0026#34;H\u0026#34;,$l(UncheckInfo) s RetValue=\u0026#34;本工作小组无可核收医嘱,请送至\u0026#34;_UncheckInfo_\u0026#34;做检验\u0026#34; q RetValue b ;a101 I \u0026#39;$D(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;)),RecFlag=\u0026#34;H\u0026#34; s RetValue=\u0026#34;无可核收医嘱！\u0026#34; q RetValue s ^TMP(\u0026#34;YY\u0026#34;,\u0026#34;age\u0026#34;)=Age ///保存标本信息 i $d(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno))) d .s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) .s objVisitNumber=##class(dbo.RPVisitNumber).%OpenId(VisitNumberDR) e d .s objVisitNumber=##class(dbo.RPVisitNumber).%New() s objVisitNumber.VisitNumber=Labno s objVisitNumber.RegNo=$tr(RegNo,$c(0)) ///就诊类型 s AdmissionTypeDR=\u0026#34;\u0026#34; i \u0026#39;$l(AdmTypeCode) s AdmTypeCode=\u0026#34;P\u0026#34; //默认体检 i $l(AdmTypeCode) s AdmissionTypeDR=##Class(HIS.DHCReceiveProcess).GetAdmissionTypeDR(AdmTypeCode) s objVisitNumber.AdmissionTypeDR=AdmissionTypeDR s objVisitNumber.AdmNo=$tr(AdmNo,$c(0)) ;20160819 yy s objVisitNumber.MedicalRecordNo=$tr(MedicalRecordNo,$c(0)) i $L(AdmDate) s AdmDate=$tr(AdmDate,\u0026#34;-\u0026#34;) i $l(AdmTime) s AdmTime=$zth(AdmTime,3) s objVisitNumber.AdmDate=AdmDate s objVisitNumber.AdmTime=AdmTime //s objVisitNumber.CertTypeDR=$tr(obj.CertTypeDR,$c(0)) //s objVisitNumber.CertNo=$tr(obj.CertNo,$c(0)) s objVisitNumber.IDNumber=IdentityCardNo //s objVisitNumber.PaymentTypeDR=$tr(obj.PaymentTypeDR,$c(0)) s objVisitNumber.SurName=PatName s objVisitNumber.GivenName=PatName s SpeciesDR=$o(^dbo.BTSpeciesI(\u0026#34;IndexCode\u0026#34;,##Class(LIS.Util.Common).IndexData(SexCode),\u0026#34;\u0026#34;)) s objVisitNumber.SpeciesDR=SpeciesDR i $L(DOB) s DOB=$tr(DOB,\u0026#34;-\u0026#34;) //i $L(BirthTime) s BirthTime=$zth(BirthTime,3) s objVisitNumber.BirthDate=DOB s objVisitNumber.BirthTime=\u0026#34;\u0026#34; s AgeCode=\u0026#34;\u0026#34;,AgeUnitDR=\u0026#34;\u0026#34; i Age[\u0026#34;岁\u0026#34; s AgeCode=\u0026#34;Y\u0026#34; i Age[\u0026#34;月\u0026#34; s AgeCode=\u0026#34;M\u0026#34; i Age[\u0026#34;天\u0026#34; s AgeCode=\u0026#34;D\u0026#34; i Age[\u0026#34;时\u0026#34; s AgeCode=\u0026#34;H\u0026#34; i $l(AgeCode) s AgeUnitDR=##Class(HIS.DHCReceiveProcess).GetAgeUnitDR(AgeCode) s objVisitNumber.Age=+Age s objVisitNumber.AgeUnitDR=AgeUnitDR //s objVisitNumber.EthnicityDR=$tr(obj.EthnicityDR,$c(0)) s objVisitNumber.HospitalDR=RecHospitalDR s LocationDR=$o(^dbo.BTLocationI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(AppDeptCode),\u0026#34;\u0026#34;)) s LocationDR=\u0026#34;\u0026#34; i $l(AppDeptCode) d .i $d(^dbo.BTLocationI(\u0026#34;IndexHISCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(AppDeptCode))) d ..s LocationDR=$o(^dbo.BTLocationI(\u0026#34;IndexHISCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(AppDeptCode),\u0026#34;\u0026#34;)) .//没有配外部代码，考虑是否自动插入 .//i \u0026#39;$l(LocationDR) s LocationDR=##Class(HIS.DHCReceiveProcess).GetLocationDR(AppDeptCode,AppDeptCode,AppDeptDesc,RecHospitalDR) s objVisitNumber.LocationDR=LocationDR s DoctorDR=\u0026#34;\u0026#34; i $l(DocCode) d .i $d(^dbo.BTDoctorI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(DocCode))) d ..s DoctorDR=$o(^dbo.BTDoctorI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(DocCode),\u0026#34;\u0026#34;)) .//没有配外部代码，考虑是否自动插入 .//i \u0026#39;$l(DoctorDR) s DoctorDR=##Class(HIS.DHCReceiveProcess).GetDoctorDR(DocCode,DocDesc,RecHospitalDR) ;b ;DoctorDR s objVisitNumber.DoctorDR=DoctorDR i $L(VerifyDate) s VerifyDate=$tr(VerifyDate,\u0026#34;-\u0026#34;) i $L(VerifyTime) s VerifyTime=$zth(VerifyTime,3) s objVisitNumber.RequestDate=VerifyDate s objVisitNumber.RequestTime=VerifyTime //s objVisitNumber.WardDR=$tr(obj.WardDR,$c(0)) //s objVisitNumber.BedNo=$tr(obj.BedNo,$c(0)) s objVisitNumber.Symptom=$tr(Diagnose,$c(0)) //s objVisitNumber.MobileNo=$tr(obj.MobileNo,$c(0)) s objVisitNumber.PhoneNo=$tr(Telephone,$c(0)) //s objVisitNumber.EMail=$tr(obj.EMail,$c(0)) //s objVisitNumber.Height=$tr(obj.Height,$c(0)) //s objVisitNumber.Weight=$tr(obj.Weight,$c(0)) //s objVisitNumber.BloodPressure=$tr(obj.BloodPressure,$c(0)) //s objVisitNumber.ClinicalConditionsDR=$tr(obj.ClinicalConditionsDR,$c(0)) //s objVisitNumber.LMPDate=$tr(obj.LMPDate,$c(0)) //s Preg=0 //i $zcvt($tr(obj.Pregnant,$c(0)),\u0026#34;U\u0026#34;)=\u0026#34;TRUE\u0026#34; s Preg=1 //s objVisitNumber.Pregnant=Preg //s objVisitNumber.PregnantWeeks=$tr(obj.PregnantWeeks,$c(0)) //s objVisitNumber.AboDR=$tr(obj.AboDR,$c(0)) //s objVisitNumber.RhDR=$tr(obj.RhDR,$c(0)) s objVisitNumber.Address=$tr(PatientAddress,$c(0)) //s objVisitNumber.PostCode=$tr(obj.PostCode,$c(0)) //s InfectFlag=$tr(obj.InfectFlag,$c(0)) //s Infect=0 //i $zcvt(InfectFlag,\u0026#34;U\u0026#34;)=\u0026#34;TRUE\u0026#34; s Infect=1 //s objVisitNumber.InfectFlag=Infect //s objVisitNumber.InfectAlert=$tr(obj.InfectAlert,$c(0)) //s SpecialFlag=obj.SpecialFlag //s Special=0 //i $zcvt(SpecialFlag,\u0026#34;U\u0026#34;)=\u0026#34;TRUE\u0026#34; s Special=1 //s objVisitNumber.SpecialFlag=Special //s objVisitNumber.PregnantNum=$tr(obj.PregnantNum,$c(0)) //s objVisitNumber.ChildbirthNum=$tr(obj.ChildbirthNum,$c(0)) //20160823 yy //s objVisitNumber.ReqNotes=$tr(Note,$c(0)) s objVisitNumber.ReqNotes=$tr(OrderID,$c(0)) s objVisitNumber.BedNo=$tr(BedNo,$c(0)) //s objVisitNumber.RequestNo=$tr(obj.RequestNo,$c(0)) //s Urgent=$tr(obj.Urgent,$c(0)) //s UrgentFlag=0 //i $zcvt(Urgent,\u0026#34;U\u0026#34;)=\u0026#34;TRUE\u0026#34; s UrgentFlag=1 //s objVisitNumber.Urgent=UrgentFlag i $L(ColDate) s ColDate=$tr(ColDate,\u0026#34;-\u0026#34;) i $l(ColTime),(ColTime[\u0026#34;:\u0026#34;) s ColTime=$zth(ColTime,3) s objVisitNumber.CollectDate=$tr(ColDate,$c(0)) s objVisitNumber.CollectTime=$tr(ColTime,$c(0)) //s objVisitNumber.CollectUserDR=$tr(obj.CollectUserDR,$c(0)) //s objVisitNumber.AnatomicalSiteDR=$tr(obj.AnatomicalSiteDR,$c(0)) //s objVisitNumber.CollectPositon=$tr(obj.CollectPositon,$c(0)) s SpecimenDR=$o(^dbo.BTSpecimenI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(SpecimenTypeCode),\u0026#34;\u0026#34;)) i \u0026#39;$l(SpecimenDR) d . s objVisitNumber.SpecimenDR=SpecimenDR s objVisitNumber.ContainerDR=\u0026#34;\u0026#34; s objVisitNumber.CollectNotes=\u0026#34;\u0026#34; s objVisitNumber.H24UVolume=\u0026#34;\u0026#34; s objVisitNumber.H24UTimePeriod=\u0026#34;\u0026#34; s objVisitNumber.BodyTemp=\u0026#34;\u0026#34; s objVisitNumber.Confidential=\u0026#34;\u0026#34; s objVisitNumber.CarryTime=\u0026#34;\u0026#34; s objVisitNumber.CarryUserDR=\u0026#34;\u0026#34; i (RecFlag=\u0026#34;C\u0026#34;) d ///集中接收 .s objVisitNumber.ReceiveDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) .s objVisitNumber.ReceiveTime=$p($h,\u0026#34;,\u0026#34;,2) .s objVisitNumber.ReceiveUserDR=UserDR .i $l(CarryUserDR),\u0026#39;$l(objVisitNumber.CarryUserDR) d ..s objVisitNumber.CarryDate = $tr($zd(+$h,3),\u0026#34;-\u0026#34;) ..s objVisitNumber.CarryTime = $p($h,\u0026#34;,\u0026#34;,2) ..s objVisitNumber.CarryUserDR = CarryUserDR .s objVisitNumber.ReceiveNotes=ReceiveNotes .s objVisitNumber.SpecimenQualityDR=$tr(SpecimenQualityDR,$c(0)) i (RecFlag=\u0026#34;H\u0026#34;) d ///标本核收 如果字段为空 .i $tr(objVisitNumber.ReceiveDate,$c(0))=\u0026#34;\u0026#34; s objVisitNumber.ReceiveDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) .i $tr(objVisitNumber.ReceiveTime,$c(0))=\u0026#34;\u0026#34; s objVisitNumber.ReceiveTime=$p($h,\u0026#34;,\u0026#34;,2) .i $tr(objVisitNumber.ReceiveUserDR,$c(0))=\u0026#34;\u0026#34; s objVisitNumber.ReceiveUserDR=UserDR .i $tr(objVisitNumber.SpecimenQualityDR,$c(0))=\u0026#34;\u0026#34; s objVisitNumber.SpecimenQualityDR=$tr(SpecimenQualityDR,$c(0))\t//YHR 20240409 保存标本质量 .b ;SpecimenQualityDR .i $lg($g(^dbo.RPVisitNumberD(VisitNumberDR)),56)=\u0026#34;\u0026#34; d ..i $d(^TMP($zn,$j,repid,\u0026#34;SpecimenDR\u0026#34;)) d ...s objVisitNumber.SpecimenDR=$g(^TMP($zn,$j,repid,\u0026#34;SpecimenDR\u0026#34;)) .e s objVisitNumber.SpecimenDR=$lg($g(^dbo.RPVisitNumberD(VisitNumberDR)),56) b ;SpecimenDR s objVisitNumber.ReceiveHospitalDR=RecHospitalDR s objVisitNumber.InStorageTime=\u0026#34;\u0026#34; s objVisitNumber.InStorageUserDR=\u0026#34;\u0026#34; s objVisitNumber.OutStorageTime=\u0026#34;\u0026#34; s objVisitNumber.OutStorageUserDR=\u0026#34;\u0026#34; s objVisitNumber.OutStorageType=\u0026#34;\u0026#34; i (RecFlag\u0026#39;=\u0026#34;S\u0026#34;) d ///拒收保存不保存时间 .s AddDate=$tr(objVisitNumber.AddDate,$c(0)) .s AddTime=$tr(objVisitNumber.AddTime,$c(0)) .s AddUserDR=$tr(objVisitNumber.AddUserDR,$c(0)) .i \u0026#39;$l(AddDate) s AddDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) .i \u0026#39;$l(AddTime) s AddTime=$p($h,\u0026#34;,\u0026#34;,2) .i \u0026#39;$l(AddUserDR) s AddUserDR=UserDR .s objVisitNumber.AddDate=AddDate .s objVisitNumber.AddTime=AddTime .s objVisitNumber.AddUserDR=AddUserDR s objVisitNumber.AddType=\u0026#34;3\u0026#34; ///1条码,2手工,3第三方,4其它(拒收保存) ;s objVisitNumber.RequestNo=OrderID b ;a903 i RecFlag=\u0026#34;A\u0026#34; D .s ArriveDate=$tr(objVisitNumber.ArriveDate,$c(0)) .s ArriveTime=$tr(objVisitNumber.ArriveTime,$c(0)) .s ArriveUserDR=$tr(objVisitNumber.ArriveUserDR,$c(0)) .i \u0026#39;$l(ArriveDate) s ArriveDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) .i \u0026#39;$l(ArriveTime) s ArriveTime=$p($h,\u0026#34;,\u0026#34;,2) .i \u0026#39;$l(ArriveUserDR) s ArriveUserDR=UserDR .s objVisitNumber.ArriveWorkGroupDR=WorkGroupDR .s objVisitNumber.ArriveDate=ArriveDate .s objVisitNumber.ArriveTime=ArriveTime .s objVisitNumber.ArriveUserDR=ArriveUserDR b ;a904 s sc=objVisitNumber.%Save() ;RecFlag=\u0026#34;H\u0026#34; If ($SYSTEM.Status.IsOK(sc)) { s RetValue=0 s VisitNumberDR=objVisitNumber.RowID } Else { s RetValue=\u0026#34;-1^标本信息保存失败:\u0026#34;_$SYSTEM.Status.GetErrorText(sc) } b ;RetValue i RetValue\u0026#39;=0 q RetValue s err=\u0026#34;\u0026#34; s IsReceived=1 s TestSetDR=\u0026#34;\u0026#34; f { s TestSetDR=$o(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; s TestSetFee=+$g(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;,TestSetDR)) s RowID=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR,\u0026#34;\u0026#34;)) i $l(RowID){ s objTestSets=##class(dbo.RPVisitNumberTestSet).%OpenId(RowID) } else { s objTestSets=##class(dbo.RPVisitNumberTestSet).%New() } i objTestSets.Recieved\u0026#39;=1 s IsReceived=0 s objTestSets.VisitNumberDR=VisitNumberDR s objTestSets.TestSetDR=TestSetDR s objTestSets.Recieved=1 i \u0026#39;$l(AssayNo),$l(WorkGroupMachineDR) { s CommDirection=$lg(^dbo.BTWorkGroupMachineD(WorkGroupMachineDR),11) i CommDirection=\u0026#34;UP\u0026#34; s AssayNo=Labno i CommDirection=\u0026#34;BI\u0026#34; s AssayNo=Labno } if RecFlag=\u0026#34;H\u0026#34; { s objTestSets.WorkGroupMachineDR=WorkGroupMachineDR s objTestSets.TransmitDate=TransmitDate i \u0026#39;$l(AssayNo) s AssayNo=EpisodeNo i \u0026#39;$l(AssayNo) s AssayNo=Labno s objTestSets.AssayNo=AssayNo } s objTestSets.TestSetFee=TestSetFee s objTestSets.HISOrderID=\u0026#34;\u0026#34; s objTestSets.Sequence=1 s sc=objTestSets.%Save() If ($SYSTEM.Status.IsOK(sc)) { s RetValue=0 //更新上传记录 s ret=##Class(MI.MachineUpload).Upload(Labno,TestSetDR,WorkGroupMachineDR) } Else {s err=$SYSTEM.Status.GetErrorText(sc)} } b //3 i RecFlag=\u0026#34;C\u0026#34;,IsReceived=1 s RetValue=\u0026#34;-1^标本已接收\u0026#34; q RetValue i $l(err) s RetValue=\u0026#34;-1^检验医嘱保存失败:\u0026#34;_err q RetValue ///报告核收 i (RecFlag=\u0026#34;H\u0026#34;){ s objVisitNumberReport=##class(dbo.RPVisitNumberReport).%New() s objVisitNumberReport.VisitNumberDR=VisitNumberDR s objVisitNumberReport.TransmitDate=TransmitDate s objVisitNumberReport.WorkGroupMachineDR=WorkGroupMachineDR s objVisitNumberReport.OrderNo=1 i \u0026#39;$l(AssayNo) s AssayNo=EpisodeNo i \u0026#39;$l(AssayNo) s AssayNo=Labno s objVisitNumberReport.AssayNo=AssayNo s objVisitNumberReport.AccessionNo=\u0026#34;\u0026#34; ///细菌分离号 s objVisitNumberReport.EpisodeNo=EpisodeNo s objVisitNumberReport.AcceptDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s objVisitNumberReport.AcceptTime=$p($h,\u0026#34;,\u0026#34;,2) s objVisitNumberReport.AcceptUserDR=UserDR s objVisitNumberReport.Status=1 //报告状态(1登记，2初审，3审核，4复查，5取消审核，6作废，O其他) s objVisitNumberReport.RackNo=RackNo s ret=objVisitNumberReport.%Save() b //901 If ($SYSTEM.Status.IsOK(ret)) {s RetValue=0} Else {s err=\u0026#34;标本信息核收失败:\u0026#34;_$SYSTEM.Status.GetErrorText(ret) Quit} s TestSetDR=\u0026#34;\u0026#34; f { s TestSetDR=$o(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;,TestSetDR)) //本次核收医嘱 q:TestSetDR=\u0026#34;\u0026#34; s RowID=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR,\u0026#34;\u0026#34;)) i $l(RowID){ s objTestSets=##class(dbo.RPVisitNumberTestSet).%OpenId(RowID) s objTestSets.VisitNumberReportDR=objVisitNumberReport.RowID s sc=objTestSets.%Save() If (\u0026#39;$SYSTEM.Status.IsOK(sc)) { s err=$SYSTEM.Status.GetErrorText(sc) q } } //按医嘱生成报告项目结果 s retVal=##Class(LISSP.DHCRPVisitNumberReport).SaveReportTestCode(objVisitNumberReport.RowID,TestSetDR) i retVal\u0026#39;=1 s err=retVal q } b //902 i $l(err) s RetValue=\u0026#34;-1^检验医嘱保存失败:\u0026#34;_err q RetValue //更新工作小组流水号 s CurDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) i $l(WorkGroupMachineDR),$l(EpisodeNo) s ret=##Class(HIS.DHCCommon).SaveWorkGroupMachineEpis(WorkGroupMachineDR,CurDate,EpisodeNo) i ret\u0026#39;=1,err=\u0026#34;更新工作小组流水号失败:\u0026#34;_ret Quit } i $l(err) s RetValue=\u0026#34;-1^\u0026#34;_err q RetValue ///插入标本核收操作记录 s (OperateDate,OperateTime,OperateTypeCode,OperateNotes,RejectTypeDR)=\u0026#34;\u0026#34; s OperateNotes=ReceiveNotes i (RecFlag=\u0026#34;A\u0026#34;) s OperateTypeCode=30 //送达 i (RecFlag=\u0026#34;S\u0026#34;) s OperateTypeCode=31 ///保存 i (RecFlag=\u0026#34;C\u0026#34;) s OperateTypeCode=4,OperateNotes=OperIP ///接收 i (RecFlag=\u0026#34;H\u0026#34;) s OperateTypeCode=5,OperateNotes=OperIP ///核收 //\tVisitNumberDR, OperateDate, OperateTime, UserID, OperateNotes, OperateTypeCode, WorkGroupMachineDR, RejectTypeDR, IPAddress, WorkGroupDR, Sessions s ret=##Class(HIS.DHCCommon).SaveRecord(VisitNumberDR,OperateDate, OperateTime, UserDR, OperateNotes, OperateTypeCode, WorkGroupMachineDR, RejectTypeDR,OperIP,WorkGroupDR,Sessions) i ret\u0026#39;=1 s RetValue=\u0026#34;标本操作记录保存失败:\u0026#34;_ret q RetValue } /* If ($SYSTEM.Status.IsOK(sc)) { s RetValue=1 } Else { }\t*/ ;i $l(UncheckInfo) s RetValue=RetValue_\u0026#34;UncheckInfo\u0026#34;_UncheckInfo i $l(UncheckInfo) s RetValue=1_\u0026#34;^未核收医嘱:\u0026#34;_UncheckInfo b ;CSRetValue Q RetValue ErrorHandle TROLLBACK s RetValue=\u0026#34;-1^错误\u0026#34;_$tr($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE Quit RetValue } 标本回写接收状态信息 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 /// w ##Class(LIS.Service.ENS.TransReport).ReturnStatus(\u0026#34;**4868149*\u0026#34;,1).Read() /// w ##Class(LIS.Service.ENS.TransReport).ReturnStatus(\u0026#34;**8015454*\u0026#34;,1).Read() /// 回写标本接受状态信息 ClassMethod ReturnStatus(Labno, ret) { s Labno=$tr(Labno,\u0026#34;*\u0026#34;) s Labno=$tr(Labno,\u0026#34;\\\u0026#34;) //获取数据 s return=\u0026#34;\u0026#34; i ret=1 d .s ResultCode=\u0026#34;T\u0026#34; .s ResultContent=\u0026#34;\u0026#34; e d .s ResultCode=\u0026#34;F\u0026#34; .s ResultContent=ret //拼装json S Main={} s Main.\u0026#34;receivestatus\u0026#34;=ResultCode s Date=$h s Main.\u0026#34;receivedate\u0026#34;=$tr($zd($p(Date,\u0026#34;,\u0026#34;,1),3),\u0026#34;-\u0026#34;,\u0026#34;.\u0026#34;) s Main.\u0026#34;receivetime\u0026#34;=$tr($zd($p(Date,\u0026#34;,\u0026#34;,1),3),\u0026#34;-\u0026#34;,\u0026#34;.\u0026#34;)_\u0026#34; \u0026#34;_$zt($p(Date,\u0026#34;,\u0026#34;,2),1) s Main.\u0026#34;labno\u0026#34;=Labno set OutStr=Main.%ToJSON() s stream=##class(%GlobalCharacterStream).%New() d stream.Write(OutStr) b ;a OutStr s CurNamespace=$ZUTIL(5) s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() NEW $NAMESPACE s $NAMESPACE= WebNamespace i $e(Labno,1)=4 s return=##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).HIPMessageServerS(\u0026#34;MES0023\u0026#34;,stream) i $e(Labno,1)=8 s return=##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).HIPMessageServerS(\u0026#34;MES0027\u0026#34;,stream)\t//YHR 20240416 护理院回写 ;s ^YHR(\u0026#34;HXBG\u0026#34;,Labno)=return.Read() b ;Input s $NAMESPACE= CurNamespace q return } 回传体检结果信息 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 /// Creator： liuzf /// CreateDate： 2016-04-27 /// Description： 发送标本结果到体检 /// Table： 无 /// Input： 检验号 /// Output： 无 /// Return： 错误信息 /// Others： 无 /// w ##Class(LIS.Service.ENS.TransReport).GetReport(\u0026#34;206\u0026#34;,\u0026#34;\u0026#34;) ClassMethod GetReport(ReportDR As %String, ByRef error As %String) As %String { s ReportDR=$g(ReportDR) //Set $ZTrap = \u0026#34;ErrorHandle\u0026#34; //基本信息 s ^TMP(\u0026#34;YY\u0026#34;,\u0026#34;ReportDR\u0026#34;)=ReportDR s RetStr=\u0026#34;\u0026#34; i \u0026#39;$l(ReportDR) q $$ReturnOut(\u0026#34;无此报告\u0026#34;) i \u0026#39;$l(ReportDR) q $$ReturnOut(\u0026#34;无此报告\u0026#34;) s ReportData=$g(^dbo.RPVisitNumberReportD(ReportDR)) i $lg(ReportData,22)\u0026#39;=3 q $$ReturnOut(\u0026#34;报告未审核\u0026#34;) s VisitNumberDR=$lg(ReportData,2) i \u0026#39;$l(VisitNumberDR) q $$ReturnOut(\u0026#34;无此报告\u0026#34;) s VisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LabNo=$lg(VisitNumberData,2) s gName=$lg(VisitNumberData,14) s sName=$lg(VisitNumberData,13) s patname=gName_\u0026#34; \u0026#34;_sName i gName=sName s patname=gName s spname=\u0026#34;\u0026#34; ;性别 s SpeciesDR=$lg(VisitNumberData,15) i $l(SpeciesDR) s spname=$lg(^dbo.BTSpeciesD(SpeciesDR),3) s patDOB=$lg(VisitNumberData,16) i (patDOB\u0026lt;10000000) s patDOB=$zd(patDOB,8) i $l(patDOB) s patDOB=##Class(LIS.Util.Common).FormatDate(patDOB) s Age=$lg(VisitNumberData,18) s AgeUnitDR=$lg(VisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s patage=Age_AgeUnit // s SpecimenDR=$lg(VisitNumberData,56),specmen=\u0026#34;\u0026#34; ;标本类型 i $l(SpecimenDR) s specmen=$lg($g(^dbo.BTSpecimenD(SpecimenDR)),3) s tsname=\u0026#34;\u0026#34;,TSCode=\u0026#34;\u0026#34; s TestSetDR=\u0026#34;\u0026#34; f s TestSetDR=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; d .i $l(tsname) s tsname=tsname_\u0026#34;+\u0026#34;_$lg(^dbo.BTTestSetD(TestSetDR),3),TSCode=TSCode_\u0026#34;+\u0026#34;_$lg(^dbo.BTTestSetD(TestSetDR),2) .e s tsname=$lg(^dbo.BTTestSetD(TestSetDR),3),TSCode=$lg(^dbo.BTTestSetD(TestSetDR),2) i $l(specmen,\u0026#34;(\u0026#34;)\u0026gt;1 s specmen=$p(specmen,\u0026#34;(\u0026#34;,1) // s patloc=\u0026#34;\u0026#34; ;科室 s LocationDR=$lg(VisitNumberData,22) i $l(LocationDR) s patloc=$lg($g(^dbo.BTLocationD(LocationDR)),3) //申请日期 s requestdate=$lg(VisitNumberData,24) i (requestdate\u0026lt;10000000) s requestdate=$zd(requestdate,8) i $l(requestdate) s requestdate=##Class(LIS.Util.Common).FormatDate(requestdate) // s (recdate,rectime,recusr,entrydate,entrytime,entryusr,authdate,authtime,authusr)=\u0026#34;\u0026#34; s recdate=$lg(VisitNumberData,66) ;接收日期 s rectime=$lg(VisitNumberData,67) ;接收时间 i $l(recdate) s recdate=##Class(LIS.Util.Common).FormatDate(recdate) i $l(rectime) s rectime=##Class(LIS.Util.Common).FormatTime(rectime) s ReceiveUserDR=$lg(VisitNumberData,68) i $l(ReceiveUserDR) s recusr=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s entrydate=$lg(ReportData,16) ;初审日期 s entrytime=$lg(ReportData,17) ;初审时间 i $l(entrydate) s entrydate=##Class(LIS.Util.Common).FormatDate(entrydate) i $l(entrytime) s entrytime=##Class(LIS.Util.Common).FormatTime(entrytime) s EntryUserDR=$lg(ReportData,18) i $l(EntryUserDR) s entryusr=$lg($g(^dbo.SYSUserD(EntryUserDR)),3) s authdate=$lg(ReportData,19) ;核收日期 s authtime=$lg(ReportData,20) ;核收时间 i $l(authdate) s authdate=##Class(LIS.Util.Common).FormatDate(authdate) i $l(authtime) s authtime=##Class(LIS.Util.Common).FormatTime(authtime) s AuthUserDR=$lg(ReportData,21) i $l(AuthUserDR) s authusr=$lg($g(^dbo.SYSUserD(AuthUserDR)),3) // s coldate=$lg(VisitNumberData,51) ;采集日期 s coltime=$lg(VisitNumberData,52) ;采集时间 i $l(coldate) s coldate=##Class(LIS.Util.Common).FormatDate(coldate) i $l(coltime) s coltime=##Class(LIS.Util.Common).FormatTime(coltime) s CollDT=\u0026#34;\u0026#34; i $l(coldate) s CollDT=coldate_\u0026#34; \u0026#34;_coltime // s (recDT,entryDT,authDT)=\u0026#34;\u0026#34; i $l(recdate) s recDT=recdate_\u0026#34; \u0026#34;_rectime i $l(entrydate) s entryDT=entrydate_\u0026#34; \u0026#34;_entrytime i $l(authdate) s authDT=authdate_\u0026#34; \u0026#34;_authtime // s debtor=$lg(VisitNumberData,3) ;登记号 s DoctorDR=$lg(VisitNumberData,23) s docname=\u0026#34;\u0026#34; ;医生 i $l(DoctorDR) s docname=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) //诊断 s patdiag=\u0026#34;\u0026#34; s DiseaseDR=\u0026#34;\u0026#34; f s DiseaseDR=$o(^dbo.RPVisitNumberDiagnoseI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,DiseaseDR)) q:DiseaseDR=\u0026#34;\u0026#34; d .i $l(patdiag) s patdiag=patdiag_\u0026#34;+\u0026#34;_$lg(^dbo.BTDiseaseD(DiseaseDR),4) .e s patdiag=$lg(^dbo.BTDiseaseD(DiseaseDR),4) //仪器,病区,床号,流水号 s Machine=\u0026#34;\u0026#34; //s MachineDR=$lg(ResultData,14) //i $l(MachineDR) s Machine=$lg($g(^dbo.BTMIMachineParameterD(MachineDR)),3) s bed=$lg(VisitNumberData,27) ;床号 s WardName=\u0026#34;\u0026#34; s WardDR=$lg(VisitNumberData,26) i $l(WardDR) s WardName=$lg($g(^dbo.BTWardD(WardDR)),3) s episode=$lg(ReportData,8) //检验科-门诊检验组\\Lab Manager#84322268 s Depart=\u0026#34;\u0026#34; s WorkGroupMachineDR=$lg(ReportData,4) i $l(WorkGroupMachineDR) s WorkGroupDR=$lg($g(^dbo.BTWorkGroupMachineD(WorkGroupMachineDR)),4) i $l(WorkGroupDR) s DepartPhone=$lg($g(^dbo.BTWorkGroupD(WorkGroupDR)),6) // 20141114 s AdmID=$lg(VisitNumberData,6) s AdmNo=$lg(VisitNumberData,5) s Notes=$lg(VisitNumberData,48) s requestNo=$p($lg(VisitNumberData,48),\u0026#34;^\u0026#34;) s PDFFileDR=$o(^dbo.RPVisitNumberReportFileI(\u0026#34;IndexMater\u0026#34;,ReportDR,\u0026#34;\u0026#34;)),PDFFile=\u0026#34;\u0026#34; i $l(PDFFileDR) s PDFFile=$lg($g(^dbo.RPVisitNumberReportFileD(PDFFileDR)),6)\t//YHR 20240409 回传PDF链接 S obj=##Class(LIS.Service.ENS.Data.ReportMsg).%New() s obj.OrdID=requestNo s obj.LabNo=LabNo s obj.ReportID=ReportDR ///报告ID s obj.ReportUrl=\u0026#34;\u0026#34; //报告地址 s obj.RecUser=recusr //接收者 s obj.RecUserCode=ReceiveUserDR //接收者代码 s obj.RecDate=recdate //接收日期 s obj.RecTime=rectime //接收时间 s obj.EntryUser=entryusr //录入者 s obj.EntryUserCode=EntryUserDR //录入者代码 s obj.EntryDate=entrydate //录入日期 s obj.EntryTime=entrytime //录入时间 s obj.AuthUser=authusr //审核者 s obj.AuthUserCode=AuthUserDR //审核者代码 s obj.AuthDate=authdate //审核日期 s obj.AuthTime=authtime //审核时间 s obj.Notes=Notes //报告备注 s obj.ImageFile=\u0026#34;\u0026#34; //图像的路径（多幅图使用@分割） s obj.MainWarnDesc=\u0026#34;\u0026#34; //危急值说明 s obj.PDFFile=PDFFile //结果 Set result = ##class(%ResultSet).%New(\u0026#34;LIS.Service.ENS.Business.ReportResult:QryTestSetResult\u0026#34;) Set sc = result.Execute(ReportDR) While (result.Next(.sc)) // go to the next row of the result set { If ($SYSTEM.Status.IsOK(sc)) // check if this succeeded without errors { s objRes=##Class(LIS.Service.ENS.Data.ResultMsg).%New() s objRes.LabNo=LabNo s objRes.TestSetCode=result.Data(\u0026#34;TestSetCode\u0026#34;) s objRes.TestCode=result.Data(\u0026#34;TestCode\u0026#34;) s objRes.TestName=result.Data(\u0026#34;TestName\u0026#34;) s objRes.TestEngName=result.Data(\u0026#34;TestSync\u0026#34;) s objRes.Result=result.Data(\u0026#34;Result\u0026#34;) s ResFlag=result.Data(\u0026#34;ResFlag\u0026#34;) i \u0026#39;$l(ResFlag) s ResFlag=\u0026#34;N\u0026#34; s objRes.ResultFlag=ResFlag s objRes.Units=result.Data(\u0026#34;Unit\u0026#34;) s Ranges=result.Data(\u0026#34;Ranges\u0026#34;) i \u0026#39;$l(Ranges) s Ranges=\u0026#34; \u0026#34; s objRes.Ranges=Ranges s MICFlag=result.Data(\u0026#34;MICFlag\u0026#34;) //whf add 2016-8-29 i MICFlag=\u0026#34;Y\u0026#34; { s objRes.MICFlag=\u0026#34;Y\u0026#34; s objRes.Result=result.Data(\u0026#34;OrganismCode\u0026#34;) s objRes.MICName=result.Data(\u0026#34;OrganismDesc\u0026#34;) } // s objRes.Sequence=result.Data(\u0026#34;Sequence\u0026#34;) //显示顺序 20141114 huhm ///细菌结果ID s SenResultId=result.Data(\u0026#34;SenResultId\u0026#34;) i $l(SenResultId) { s sen=##class(%ResultSet).%New(\u0026#34;LIS.Service.ENS.Business.ReportResult:QryTestSetResultSen\u0026#34;) Set st = sen.Execute(SenResultId) While (sen.Next(.st)) { If ($SYSTEM.Status.IsOK(st)) { //WCode,AntCode,AntName,SenCode,SenName,SenMethod,SenValue s objSen=##Class(LIS.Service.ENS.Data.OrgResultMsg).%New() s objSen.BugsCode=result.Data(\u0026#34;OrganismCode\u0026#34;) s objSen.AntiCode=sen.Data(\u0026#34;AntCode\u0026#34;) s objSen.AntiName=sen.Data(\u0026#34;AntName\u0026#34;) s objSen.Result=sen.Data(\u0026#34;SenName\u0026#34;) s objSen.KBRes=sen.Data(\u0026#34;SenMethod\u0026#34;) s objSen.MICRes=sen.Data(\u0026#34;SenValue\u0026#34;) s objSen.Order=sen.Data(\u0026#34;Order\u0026#34;) d objRes.OrgResultMsgs.Insert(objSen) // } } } d obj.ResultMsgs.Insert(objRes) } } s Input=\u0026#34;\u0026#34; //d obj.XMLExportToStream(.Input) //Set objStream=##class(%GlobalCharacterStream).%New() // d objStream.Write(\u0026#34;\u0026lt;ReportData\u0026gt;\u0026#34;) d obj.XMLExportToString(.Input) ;s retObj=##Class(UtilsController.LIS.UtilsControllerHttpSoap12Endpoint).%New() ;s Input=retObj.ReportMsg(Input) ;s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;NFYY\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;医院信息平台\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026#34;_Input_\u0026#34;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; s Input=\u0026#34;\u0026lt;Response\u0026gt;\u0026#34;_Input_\u0026#34;\u0026lt;/Response\u0026gt;\u0026#34; Set objStream=##class(%GlobalCharacterStream).%New() d objStream.Write(Input) s ^TMP(\u0026#34;Au\u0026#34;,LabNo)=Input ;s $NameSpace=\u0026#34;DHC-APP\u0026#34; ;s Input=##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;S00000046\u0026#34;,objStream) ;s $NameSpace=\u0026#34;DHC-LISDATA\u0026#34; s ^TMP(\u0026#34;AuReport\u0026#34;,LabNo)=Input q Input ErrorHandle s err=$tr(\u0026#34;查询异常.错误\u0026#34;_$tr($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;\u0026lt;\u0026gt;\u0026#34;) Quit $$ReturnOut(err) ReturnOut(err) //Set objStream=##class(%GlobalCharacterStream).%New() //d objStream.Write(\u0026#34;\u0026lt;ReportData\u0026gt;\u0026#34;) //d objStream.Write(\u0026#34;\u0026lt;ReturnValue\u0026gt;-1^\u0026#34;_err_\u0026#34;\u0026lt;/ReturnValue\u0026gt;\u0026#34;) //Do objStream.Write(\u0026#34;\u0026lt;/ReportData\u0026gt;\u0026#34;) q \u0026#34;-1^\u0026#34;_err } 获取标本信息 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 DHC-APP 空间 /// 获取标本信息 /// /// Other: W ##Class(LISAPP.LIS.BLL.DHCReceiveInterface).GetLabNoInfoSFHIS(\u0026#34;**2630749*\u0026#34;,\u0026#34;0\u0026#34;,\u0026#34;dhcc\u0026#34;).Read() /// Other: W ##Class(LISAPP.LIS.BLL.DHCReceiveInterface).GetLabNoInfoSFHIS(\u0026#34;24041406012005\u0026#34;,\u0026#34;0\u0026#34;,\u0026#34;dhcc\u0026#34;).Read() /// Other: W ##Class(LISAPP.LIS.BLL.DHCReceiveInterface).GetLabNoInfoSFHIS(\u0026#34;**8015454*\u0026#34;,\u0026#34;0\u0026#34;,\u0026#34;dhcc\u0026#34;).Read() ClassMethod GetLabNoInfoSFHIS(Labno As %String, RetType As %String, UserCode As %String) As %GlobalCharacterStream { s stream=##class(%GlobalCharacterStream).%New() d stream.Write(Labno) i $e(Labno)=\u0026#34;*\u0026#34; d .i $e(Labno,3)=4 s Param=##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).HIPMessageServerS(\u0026#34;MES0022\u0026#34;,stream) .i $e(Labno,3)=8 s Param=##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).HIPMessageServerS(\u0026#34;MES0026\u0026#34;,stream) i $l(Labno)=14 s Param=##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).HIPMessageServerS(\u0026#34;MES0024\u0026#34;,stream) i $l(Labno)=14 q Param ;s Param=##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).test() s RetValue=\u0026#34;\u0026#34; B ;Param s RequestXML=##class(LIS.Util.COM.XML).New(\u0026#34;Request\u0026#34;) s OrdersXML=##class(LIS.Util.COM.XML).New(\u0026#34;Orders\u0026#34;) /* Set objItems=##class(LIS.Util.COM.JSONUtils).%New().FromJSON(Param) i \u0026#39;$l(Param.Read()){ s objVisitNumber=##class(LIS.Util.COM.XML).New(\u0026#34;OrderList\u0026#34;) s RequestXML.ResultCode=\u0026#34;-1\u0026#34; s RequestXML.ResultContent=\u0026#34;查询标本信息失败:HIS条码信息不存在！\u0026#34; //YHR 20240410 老系统查询返回信息为空时返回 d OrdersXML.Insert(objVisitNumber) d RequestXML.Insert(OrdersXML) s RetValue=RequestXML.ToXMLStream() } Quit:$LENGTH(RetValue) RetValue */ /* s ParamXML=Param.Read() If ($p(Param.Read(),\u0026#34;^\u0026#34;,1) \u0026lt;= 0) { s objVisitNumber=##class(LIS.Util.COM.XML).New(\u0026#34;OrderList\u0026#34;) s RequestXML.ResultCode=\u0026#34;-1\u0026#34; s RequestXML.ResultContent=\u0026#34;查询标本信息失败:HIS条码信息不存在！\u0026#34; //YHR 20240408 老系统查询不到标本时返回 d OrdersXML.Insert(objVisitNumber) d RequestXML.Insert(OrdersXML) s RetValue=RequestXML.ToXMLStream() } Quit:$LENGTH(RetValue) RetValue */ Set objItems=##class(LIS.Util.COM.JSONUtils).%New().FromJSON(Param) If (objItems.Size() \u0026lt;= 0) { s objVisitNumber=##class(LIS.Util.COM.XML).New(\u0026#34;OrderList\u0026#34;) s RequestXML.ResultCode=\u0026#34;-1\u0026#34; s RequestXML.ResultContent=\u0026#34;查询标本信息失败:HIS条码信息不存在！\u0026#34; //YHR 20240408 老系统查询不到标本时返回 d OrdersXML.Insert(objVisitNumber) d RequestXML.Insert(OrdersXML) s RetValue=RequestXML.ToXMLStream() } Quit:$LENGTH(RetValue) RetValue For i = 1:1:objItems.Size() { Set obj=objItems.Get(i-1) b ;a101 Quit:\u0026#39;$LENGTH(obj) s objVisitNumber=##class(LIS.Util.COM.XML).New(\u0026#34;OrderList\u0026#34;) s (LABNO,ARCIMCODE,ARCIMDESC,ORDERQTY,BILLCODE,SPECIMENTYPECODE,SPECIMENTYPEDESC,SPVOLUME,COLINFO,COLDATE,COLTIME,SPECUSERCODE,CONTAINER,GTSEQ,SPECFLAG,VERIFYDATE,VERIFYTIME,APPDEPTCODE,APPDEPTDESC,RECDEPTCODE,RECDEPTDESC,TSPRICE,ORDERSTATUS,DOCCODE,DOCDESC,REPLOCT,REPDATE,REPTIME,NOTE,ADMNO,ADMDATE,ADMTIME,ADMTYPECODE,ADMTYPEDESC,FEETYPE,PATIENTWARD,BEDNO,DIAGNOSE,REGISTERNO,PATIENTNAME,SEXCODE,SEXDESC,DOB,AGE,AGEUNIT,DOCUMENTID,PATIENTADDRESS,IDENTITYCARDNO,TELEPHONE,SPECUSERCODE,SPECUSERNAME,STARTDATE,STARTTIME,SENDFLAG,SPECREMARK,CARRYDATE,CARRYTIME,CARRYUSERDR,CARRYUSERNAME,CARRYNOTE)=\u0026#34;\u0026#34; s LABNO=obj.LABNO ;标本条码号 s ARCIMCODE=obj.ARCIMCODE ;医嘱代码 s ARCIMDESC=obj.ARCIMDESC ;医嘱名称 s ORDERQTY=obj.ORDERQTY ;医嘱数量 s BILLCODE=obj.BILLCODE ;账单状态代码 s SPECIMENTYPECODE=obj.SPECIMENTYPECODE ;标本类型代码 s SPECIMENTYPEDESC=obj.SPECIMENTYPEDESC ;标本类型名称 s SPVOLUME=obj.SPVOLUME ;标本采集量 s COLINFO=obj.COLINFO ;标本采集说明 s COLDATE=obj.COLDATE ;标本采集日期 s COLTIME=obj.COLTIME ;标本采集时间 s SPECUSERCODE=obj.SPECUSERCODE ;标本采集用户代码 s CONTAINER=obj.CONTAINER ;标本采集容器代码 s GTSEQ=obj.GTSEQ ;糖耐量序号 s SPECFLAG=obj.SPECFLAG ;特殊标志 s VERIFYDATE=obj.VERIFYDATE ;医嘱申请日期 s VERIFYTIME=obj.VERIFYTIME ;医嘱申请时间 s APPDEPTCODE=obj.APPDEPTCODE ;申请科室代码 s APPDEPTDESC=obj.APPDEPTDESC ;申请科室名称 s RECDEPTCODE=obj.RECDEPTCODE ;接收科室代码 s RECDEPTDESC=obj.RECDEPTDESC ;接收科室名称 s TSPRICE=obj.TSPRICE ;医嘱费用 s ORDERSTATUS=obj.ORDERSTATUS ;医嘱状态 s DOCCODE=obj.DOCCODE ;申请医生代码 s DOCDESC=obj.DOCDESC ;申请医生姓名 s REPLOCT=obj.REPLOCT ;取报告地点 s REPDATE=obj.REPDATE ;取报告日期 s REPTIME=obj.REPTIME ;取报告时间 s NOTE=obj.NOTE ;医嘱申请说明 s ADMNO=obj.ADMNO ;就诊号 s ADMDATE=obj.ADMDATE ;就诊日期 s ADMTIME=obj.ADMTIME ;就诊时间 s ADMTYPECODE=obj.ADMTYPECODE ;就诊类型代码 s ADMTYPEDESC=obj.ADMTYPEDESC ;就诊类型名称 s FEETYPE=obj.FEETYPE ;费用类型 s PATIENTWARD=obj.PATIENTWARD ;病房 s BEDNO=obj.BEDNO ;床号 s DIAGNOSE=obj.DIAGNOSE ;诊断 s REGISTERNO=obj.REGISTERNO ;登记号/病人ID s PATIENTNAME=obj.PATIENTNAME ;姓名 s SEXCODE=obj.SEXCODE ;性别代码 s SEXDESC=obj.SEXDESC ;性别名称 s DOB=obj.DOB ;出生日期 s AGE=obj.AGE ;年龄 s AGEUNIT=obj.AGEUNIT ;年龄描述 s DOCUMENTID=obj.DOCUMENTID ;病案号 s PATIENTADDRESS=obj.PATIENTADDRESS ;地址 s IDENTITYCARDNO=obj.IDENTITYCARDNO ;就诊卡号 s TELEPHONE=obj.TELEPHONE ;联系电话 s SPECUSERCODE=obj.SPECUSERCODE ;采集人代码 s SPECUSERNAME=obj.SPECUSERNAME ;采集人名称 s STARTDATE=obj.STARTDATE ;要求执行日期 s STARTTIME=obj.STARTTIME ;要求执行时间 s SENDFLAG=obj.SENDFLAG ;标识 s SPECREMARK=obj.SPECREMARK ;采集说明备注 s CARRYDATE=obj.CARRYDATE ;运送日期 s CARRYTIME=obj.CARRYTIME ;运送时间 s CARRYUSERDR=obj.CARRYUSERDR ;运送人代码 s CARRYUSERNAME=obj.CARRYUSERNAME ;运送人名称 s CARRYNOTE=obj.CARRYNOTE ;运送说明 s objVisitNumber.OrdID=\u0026#34;\u0026#34; s objVisitNumber.LabNo=LABNO ;标本条码号 s objVisitNumber.ArcimCode=ARCIMCODE ;医嘱代码 s objVisitNumber.ArcimDesc=ARCIMDESC ;医嘱名称 s objVisitNumber.OrderQty=ORDERQTY ;医嘱数量 s objVisitNumber.BillCode=BILLCODE ;账单状态代码 s objVisitNumber.SpecimenTypeCode=SPECIMENTYPECODE ;标本类型代码 s objVisitNumber.SpecimenTypeDesc=SPECIMENTYPEDESC ;标本类型名称 s objVisitNumber.SpVolume=SPVOLUME ;标本采集量 s objVisitNumber.ColInfo=COLINFO ;标本采集说明 s objVisitNumber.ColDate=COLDATE ;标本采集日期 s objVisitNumber.ColTime=COLTIME ;标本采集时间 s objVisitNumber.SpecUserCode=SPECUSERCODE ;标本采集用户代码 s objVisitNumber.Container=CONTAINER ;标本采集容器代码 s objVisitNumber.GTSeq=GTSEQ ;糖耐量序号 s objVisitNumber.SpecFlag=SPECFLAG ;特殊标志 s objVisitNumber.VerifyDate=VERIFYDATE ;医嘱申请日期 s objVisitNumber.VerifyTime=VERIFYTIME ;医嘱申请时间 s objVisitNumber.AppDeptCode=APPDEPTCODE ;申请科室代码 s objVisitNumber.AppDeptDesc=APPDEPTDESC ;申请科室名称 s objVisitNumber.RecDeptCode=RECDEPTCODE ;接收科室代码 s objVisitNumber.RecDeptDesc=RECDEPTDESC ;接收科室名称 s objVisitNumber.TSPrice=TSPRICE ;医嘱费用 s objVisitNumber.OrderStatus=ORDERSTATUS ;医嘱状态 s objVisitNumber.DocCode=DOCCODE ;申请医生代码 s objVisitNumber.DocDesc=DOCDESC ;申请医生姓名 s objVisitNumber.RepLoct=REPLOCT ;取报告地点 s objVisitNumber.RepDate=REPDATE ;取报告日期 s objVisitNumber.RepTime=REPTIME ;取报告时间 s objVisitNumber.Note=NOTE ;医嘱申请说明 s objVisitNumber.AdmNo=ADMNO ;就诊号 s objVisitNumber.AdmDate=ADMDATE ;就诊日期 s objVisitNumber.AdmTime=ADMTIME ;就诊时间 s objVisitNumber.AdmTypeCode=ADMTYPECODE ;就诊类型代码 s objVisitNumber.AdmTypeDesc=ADMTYPEDESC ;就诊类型名称 s objVisitNumber.FeeType=FEETYPE ;费用类型 s objVisitNumber.PatientWard=PATIENTWARD ;病房 s objVisitNumber.BedNo=BEDNO ;床号 s objVisitNumber.Diagnose=DIAGNOSE ;诊断 s objVisitNumber.RegisterNo=REGISTERNO ;登记号/病人ID s objVisitNumber.PatientName=PATIENTNAME ;姓名 s objVisitNumber.SexCode=SEXCODE ;性别代码 s objVisitNumber.SexDesc=SEXDESC ;性别名称 s objVisitNumber.DOB=DOB ;出生日期 s objVisitNumber.Age=AGE ;年龄 s objVisitNumber.AgeUnit=AGEUNIT ;年龄描述 s objVisitNumber.DocumentID=DOCUMENTID ;病案号 s objVisitNumber.PatientAddress=PATIENTADDRESS ;地址 s objVisitNumber.IdentityCardNo=IDENTITYCARDNO ;就诊卡号 s objVisitNumber.Telephone=TELEPHONE ;联系电话 s objVisitNumber.SpecUserCode=SPECUSERCODE ;采集人代码 s objVisitNumber.SpecUserName=SPECUSERNAME ;采集人名称 s objVisitNumber.StartDate=STARTDATE ;要求执行日期 s objVisitNumber.StartTime=STARTTIME ;要求执行时间 s objVisitNumber.SendFlag=SENDFLAG ;标识 s objVisitNumber.SpecRemark=SPECREMARK ;采集说明备注 s objVisitNumber.CarryDate=CARRYDATE ;运送日期 s objVisitNumber.CarryTime=CARRYTIME ;运送时间 s objVisitNumber.CarryUserDR=CARRYUSERDR ;运送人代码 s objVisitNumber.CarryUserName=CARRYUSERNAME ;运送人名称 s objVisitNumber.CarryNote=CARRYNOTE ;运送说明 d OrdersXML.Insert(objVisitNumber) } d RequestXML.Insert(OrdersXML) s RequestXML.ResultCode=\u0026#34;0\u0026#34; s RequestXML.ResultContent=\u0026#34;成功\u0026#34; q RequestXML.ToXMLStream() } 标本核收页面未核收医嘱信息 LIS.WS.BLL.DHCRPVisitNumberReport\tQryWorkListByLabno\n1 2 3 4 5 6 i $e(fLabno)=\u0026#34;*\u0026#34;,$d(^LISTMPDATA(\u0026#34;WHSYZ\u0026#34;,Labno)) d\t//YHR 20240409 接收标本时查询老系统未核收医嘱 .s AllTSList=\u0026#34;\u0026#34; .s TestSetDR=\u0026#34;\u0026#34; f s TestSetDR=$o(^LISTMPDATA(\u0026#34;WHSYZ\u0026#34;,fLabno,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; d ..s AllTSList=AllTSList_TestSetDR_\u0026#34;@@\u0026#34; ..b ;a103 .s NoCheckList=##Class(LISSP.DHCRPVisitNumber).GetUnCheckTSInfo(fLabno,AllTSList,Sessions,\u0026#34;1\u0026#34;) //查询 使用方法 标本接收核收方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 /// Creator： liuzf /// CreatDate： 20131207 /// Description:： 标本接收存储过程 /// Table： dbo.RPVisitNumber,dbo.RP_VisitNumberReport,dbo.RP_VisitNumberRecord /// Input： Labno:检验号,Param参数内容XML格式 /// Param.P0 C:集中接收 H:核收 /// Param.P1检测号(流水号/条码号) /// Param.P2细菌鉴定号 /// Param.P3流水号 /// Param.P4核收者 /// Param.P5接收备注ReceiveNotes /// Param.P6接收质量SpecimenQualityDR /// Param.P7接收医嘱列表VisTSDRLists /// Param.P14 ExParaList 格式：送达人信息@ /// Output： 无 /// Return： 保存结果 /// Others: w ##Class(LISSP.DHCRPVisitNumber).ReceiveVisitNumber(\u0026#34;0000003001\u0026#34;,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P13\u0026gt;222.132.155.199\u0026lt;/P13\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P0\u0026gt;C\u0026lt;/P0\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P14\u0026gt;@\u0026lt;/P14\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P4\u0026gt;113\u0026lt;/P4\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;113^4^0^13^1\u0026#34;) /// w ##Class(LISSP.DHCRPVisitNumber).ReceiveVisitNumber(\u0026#34;**4860462*\u0026#34;,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P13\u0026gt;10.49.25.10\u0026lt;/P13\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P0\u0026gt;C\u0026lt;/P0\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P14\u0026gt;@\u0026lt;/P14\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;8280^1^0^2^1\u0026#34;) /// w ##Class(LISSP.DHCRPVisitNumber).ReceiveVisitNumber(\u0026#34;**4868149*\u0026#34;,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P8\u0026gt;1\u0026lt;/P8\u0026gt;\u0026lt;P13\u0026gt;10.49.25.9\u0026lt;/P13\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P6\u0026gt;2\u0026lt;/P6\u0026gt;\u0026lt;P0\u0026gt;H\u0026lt;/P0\u0026gt;\u0026lt;P11\u0026gt;@\u0026lt;/P11\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P14\u0026gt;@\u0026lt;/P14\u0026gt;\u0026lt;P10\u0026gt;2024-04-09\u0026lt;/P10\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P3\u0026gt;2\u0026lt;/P3\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P4\u0026gt;8280\u0026lt;/P4\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;8280^1^0^2^1\u0026#34;) ClassMethod ReceiveVisitNumber(Labno As %String, Param As %String(MAXLEN=32767), Sessions As %String, Output RetValue As %String(MAXLEN=32767)) As %String [ SqlProc ] { s ^TMPLIS(\u0026#34;ReceiveVisitNumber\u0026#34;)=$lb(Labno,Param,Sessions) S Labno=$g(Labno),Param=$g(Param),Sessions=$g(Sessions) Set UserID=$p(Sessions,\u0026#34;^\u0026#34;,1),WorkGroupDR=$p(Sessions,\u0026#34;^\u0026#34;,2) Set HospitalDR=$p(Sessions,\u0026#34;^\u0026#34;,5) i \u0026#39;$l(UserID) s RetValue=\u0026#34;-1^\u0026#34;_##Class(LIS.Util.SYSLanguagePak).TranslateDataMTHD(\u0026#34;标本接收\u0026#34;,\u0026#34;The receiving user does not exist\u0026#34;,\u0026#34;接收用户不存在\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,Sessions) q RetValue //i \u0026#39;$l(WorkGroupDR) s RetValue=\u0026#34;-1^工作组用户不存在\u0026#34; q RetValue\t;i Labno=\u0026#34;0000001242\u0026#34; s ^TMPLIS(\u0026#34;$zn\u0026#34;,\u0026#34;ReceiveVisitNumber\u0026#34;,\u0026#34;KSS2001\u0026#34;)=$lb(Labno, Param, Sessions, RetValue) s RetValue=\u0026#34;1\u0026#34; q RetValue s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() //统一调整条码类型O 老his,H新his,T体检 s LabNoType=##Class(LIS.Common.DHCVisitNumber).GetLabNoType(Labno) //标本接收统一入口 s UserCode=$lg($g(^dbo.SYSUserD(UserID)),2) //获取接收参数 s (P0,P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14)=\u0026#34;\u0026#34; Set reader = ##class(%XML.Reader).%New() Do reader.OpenString(Param) Do reader.Correlate(\u0026#34;Data\u0026#34;,\u0026#34;LIS.WS.Model.InputParameter\u0026#34;) s err=\u0026#34;\u0026#34;,RetValue=0,seqj=0 While (reader.Next(.obj,.sc)) { If ($SYSTEM.Status.IsOK(sc)) // check if this succeeded without errors { s RecFlag=$tr(obj.P0,$c(0)) ///C:集中接收 H:核收 s AssayNo=$tr(obj.P1,$c(0)) s AccessionNo=$tr(obj.P2,$c(0)) s EpisodeNo=$tr(obj.P3,$c(0)) s AcceptUserDR=$tr(obj.P4,$c(0)) s ReceiveNotes=$tr(obj.P5,$c(0)) s SpecimenQualityDR=$tr(obj.P6,$c(0)) s VisTSDRLists=$tr(obj.P7,$c(0)) s WorkGroupMachineDR=$tr(obj.P8,$c(0)) s CarryUserDR = $tr(obj.P9,$c(0)) s TransmitDate = $tr(obj.P10,$c(0)) i \u0026#39;$l(TransmitDate) s TransmitDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) S CheckTestSetDRList=$tr(obj.P11,$c(0)) s TestSetQueryDR=\u0026#34;\u0026#34; I CheckTestSetDRList[\u0026#34;@\u0026#34; S TestSetQueryDR=$P(CheckTestSetDRList,\u0026#34;@\u0026#34;,2) S CheckTestSetDRList=$P(CheckTestSetDRList,\u0026#34;@\u0026#34;,1) i TestSetQueryDR=\u0026#34;All\u0026#34; s TestSetQueryDR=\u0026#34;\u0026#34; s RackNo=$tr(obj.P12,$c(0)) s IP=$tr(obj.P13,$c(0)) s ExParaList=$tr(obj.P14,$c(0)) s ArriveInfo=$p(ExParaList,\u0026#34;@\u0026#34;,1) //第一位是运送信息 s ConcessionFlag=$p(ExParaList,\u0026#34;@\u0026#34;,2) //第二位让步标识 s MachineCheckFlag=$p(ExParaList,\u0026#34;@\u0026#34;,3) //第三位仪器核收的标识 s IsCheckTLevel=$p(ExParaList,\u0026#34;@\u0026#34;,4) //第四位是否校验事务层级,血库事务调用接收逻辑，防止误判断事务层级 s IsMiCheck=$p(ExParaList,\u0026#34;@\u0026#34;,5) //第五位是否是仪器自动核收 i \u0026#39;$l(IsCheckTLevel) s IsCheckTLevel=1 } }\t//核收标本日期判断 K ^DHCLabNoInfoStream(Labno) K ^DHCLabNoInfoStreamTime(Labno) s TransmitDate=$tr(TransmitDate,\u0026#34;-\u0026#34;) i \u0026#39;$l($g(TransmitDate)) s TransmitDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s AllTSList=\u0026#34;\u0026#34; i RecFlag=\u0026#34;H\u0026#34;,TransmitDate\u0026lt;$zd(+$h,8) s RetValue=\u0026#34;-1^\u0026#34;_##Class(LIS.Util.SYSLanguagePak).TranslateDataMTHD(\u0026#34;标本接收\u0026#34;,\u0026#34;The specimen date is less than the current date, please select the current date\u0026#34;,\u0026#34;标本日期小于当前日期，请选择当前日期\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,Sessions) q RetValue //*****************三方HIS核收起始********************// ;b ;run s quitret=\u0026#34;\u0026#34; i $e(Labno)=\u0026#34;*\u0026#34; d .s ret=##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdListNew(Labno, UserCode, AssayNo, EpisodeNo, WorkGroupMachineDR, TransmitDate, HospitalDR, RecFlag, ReceiveNotes, SpecimenQualityDR, CarryUserDR, \u0026#34;\u0026#34;, RackNo, IP, WorkGroupDR,Sessions) .i ret\u0026#39;=0 s quitret=ret .e s quitret=1 ;b ;quitret i $e(Labno)=\u0026#34;*\u0026#34; try{s return=##Class(LIS.Service.ENS.TransReport).ReturnStatus(Labno,quitret)}catch{} i $l(quitret) q quitret //*****************三方HIS核收终止********************// //*****************三方体检核收起始********************// b ;run s quitret=\u0026#34;\u0026#34; i $l(Labno)=14 d .s ret=##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdListNew(Labno, UserCode, AssayNo, EpisodeNo, WorkGroupMachineDR, TransmitDate, HospitalDR, RecFlag, ReceiveNotes, SpecimenQualityDR, CarryUserDR, \u0026#34;\u0026#34;, RackNo, IP, WorkGroupDR,Sessions) .i ret\u0026#39;=0 s quitret=ret .e s quitret=1 b ;quitret try{s return=##Class(LIS.Service.ENS.TransReport).ReturnStatus(Labno,quitret)}catch{} i $l(quitret) q quitret //*****************三方体检核收终止********************// s ret=##Class(HIS.DHCReceiveCommon).CheckSampleInfo(Labno, WorkGroupMachineDR, WorkGroupDR, HospitalDR,RecFlag,UserCode,.AllTSList,\u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;,Sessions) s seqj=$p(ret,\u0026#34;^\u0026#34;,1) s recTSList=$p(ret,\u0026#34;^\u0026#34;,2) //可接收核收医嘱 i seqj\u0026lt;=0 s RetValue=\u0026#34;-1^\u0026#34;_##Class(LIS.Util.SYSLanguagePak).TranslateDataMTHD(\u0026#34;标本接收\u0026#34;,\u0026#34;Failed to query specimen information\u0026#34;,\u0026#34;查询标本信息失败\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,Sessions)_\u0026#34;:\u0026#34;_recTSList q RetValue //核收医嘱组选择 s SplitStr=\u0026#34;@S@\u0026#34;,ItemSpitStr=\u0026#34;@I@\u0026#34; if RecFlag=\u0026#34;H\u0026#34;,($L(CheckTestSetDRList)||$l(TestSetQueryDR)) { s CheckRecTSList=\u0026#34;\u0026#34; f i=1:1:$l(recTSList,ItemSpitStr) { s TSItem=$p(recTSList,ItemSpitStr,i) i \u0026#39;$l(TSItem) continue s RecTSDR=$p(TSItem,SplitStr,1) //按勾选医嘱进行核收过滤\\ i (((\u0026#34;,\u0026#34;_CheckTestSetDRList_\u0026#34;,\u0026#34;)[(\u0026#34;,\u0026#34;_RecTSDR_\u0026#34;,\u0026#34;))||($l(TestSetQueryDR)\u0026amp;\u0026amp;$d(^dbo.BTWorkGroupMachineRuleTSI(\u0026#34;IndexMaster\u0026#34;,TestSetQueryDR,RecTSDR)))) S CheckRecTSList=CheckRecTSList_ItemSpitStr_TSItem b //?2 } s recTSList=CheckRecTSList //按医嘱进行核收 i \u0026#39;$l(recTSList) s RetValue=\u0026#34;-1^\u0026#34;_##Class(LIS.Util.SYSLanguagePak).TranslateDataMTHD(\u0026#34;标本接收\u0026#34;,\u0026#34;There are no orders for this order group to be approved\u0026#34;,\u0026#34;无可核收该医嘱组医嘱\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,Sessions)_\u0026#34;！\u0026#34; q RetValue } //用来记录是否更新运送信息，标本质量等 s RecInfoFlag=\u0026#34;0\u0026#34; //遍历可接收医嘱对应工作小组设置 i RecFlag=\u0026#34;C\u0026#34; { s LABIsAutoCheck=\u0026#34;\u0026#34; f i=1:1:$l(recTSList,ItemSpitStr) { s TSItem=$p(recTSList,ItemSpitStr,i) i \u0026#39;$l(TSItem) continue s RecTSDR=$p(TSItem,SplitStr,1) s DefaultWGMDR=$lg($G(^dbo.BTTestSetD(RecTSDR)),13) //医嘱默认工作小组 i \u0026#39;$l(DefaultWGMDR) continue s paramDR = $o(^dbo.SYSParameterI(\u0026#34;IndexCode\u0026#34;,\u0026#34; LABISAUTOCHECK\u0026#34;, \u0026#34; WGM\u0026#34;,\u0026#34; \u0026#34;_DefaultWGMDR,\u0026#34;\u0026#34;)) i $l(paramDR) s LABIsAutoCheck=LABIsAutoCheck_$lg(^dbo.SYSParameterD(paramDR),5) e s LABIsAutoCheck=LABIsAutoCheck_\u0026#34;0\u0026#34; } i LABIsAutoCheck[\u0026#34;1\u0026#34;,LABIsAutoCheck\u0026#39;[\u0026#34;0\u0026#34; s WorkGroupMachineDR=\u0026#34;AUTO\u0026#34;,RecFlag=\u0026#34;H\u0026#34;,RecInfoFlag=\u0026#34;1\u0026#34; //如果所有医嘱默认工作小组都维护了按自动排样处理 } //接收标本 s RetValue=##Class(HIS.DHCReceiveCommon).ReceiveAllBS(Labno,UserCode,recTSList,AssayNo,EpisodeNo,WorkGroupMachineDR,TransmitDate,HospitalDR,RecFlag,ReceiveNotes,SpecimenQualityDR,CarryUserDR,RecInfoFlag,RackNo,IP,WorkGroupDR,ArriveInfo,ConcessionFlag,IsCheckTLevel,IsMiCheck,Sessions) //返回医嘱信息组装串 i RecFlag=\u0026#34;H\u0026#34;,RetValue=1 { S IsShowUncheckInfo=\u0026#34;1\u0026#34; s paramDR = $o(^dbo.SYSParameterI(\u0026#34;IndexCode\u0026#34;,\u0026#34; ISSHOWUNCHECKINFO\u0026#34;, \u0026#34; WGM\u0026#34;,\u0026#34; \u0026#34;_WorkGroupMachineDR,\u0026#34;\u0026#34;)) i $l(paramDR) s IsShowUncheckInfo=$lg(^dbo.SYSParameterD(paramDR),5) //是否展示未核收信息 i IsShowUncheckInfo=1 { s RetInfo=..GetUnCheckTSInfo(Labno,AllTSList,Sessions) i $l(RetInfo) s RetValue=RetValue_\u0026#34;^\u0026#34;_##Class(LIS.Util.SYSLanguagePak).TranslateDataMTHD(\u0026#34;标本接收\u0026#34;,\u0026#34;The following medical advice has not been received. Please note to keep the specimen\u0026#34;,\u0026#34;以下医嘱未核收请注意留取标本\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,Sessions)_RetInfo } } K ^DHCLabNoInfoStream(Labno) K ^DHCLabNoInfoStreamTime(Labno) q RetValue ErrorHandle s RetValue=\u0026#34;-1^\u0026#34;_##Class(LIS.Util.SYSLanguagePak).TranslateDataMTHD(\u0026#34;标本接收\u0026#34;,\u0026#34;Error\u0026#34;,\u0026#34;错误\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,Sessions)_$tr($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.\u0026#34;_##Class(LIS.Util.SYSLanguagePak).TranslateDataMTHD(\u0026#34;标本接收\u0026#34;,\u0026#34;Error Code\u0026#34;,\u0026#34;错误代码\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,Sessions)_\u0026#34;:\u0026#34;_$ECODE Quit RetValue } 外部标本接收方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 1505 1506 1507 1508 1509 1510 Class LIS.Service.ENS.TransReport Extends %RegisteredObject { /// Creator： yanghaoran /// CreateDate： 20240407 /// Description： 接收外部标本 /// Table： 无 /// Input： 检验号 /// Output： 无 /// Return： 错误信息 /// Others： 无 /// w ##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdListNew(\u0026#34;2779164\u0026#34;,\u0026#34;113\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;2\u0026#34;,\u0026#34;20160819\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;H\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) /// w ##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdListNew(\u0026#34;**4868149*\u0026#34;,\u0026#34;demo\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;20240409\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;C\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;10.49.25.10\u0026#34;,\u0026#34;1\u0026#34;) /// w ##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdListNew(\u0026#34;**4860462*\u0026#34;,\u0026#34;demo\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;3\u0026#34;,\u0026#34;13\u0026#34;,\u0026#34;20240408\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;H\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;2\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;10.49.25.9\u0026#34;,\u0026#34;5\u0026#34;,\u0026#34;8280^5^0^2^1\u0026#34;) /// w ##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdListNew(\u0026#34;24041406012005\u0026#34;,\u0026#34;demo\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;20240415\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;C\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;10.49.25.10\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;8280^1^0^2^1\u0026#34;) ClassMethod ReceiveLisOrdListNew(Labno, UserDR, AssayNo, EpisodeNo, WorkGroupMachineDR, TransmitDate, RecHospitalDR, RecFlag, ReceiveNotes, SpecimenQualityDR, CarryUserDR, PlacerLabno, RackNo, OperIP, WorkGroupDR, Sessions) As %String { s Labno=$g(Labno),UserDR=$g(UserDR),EpisodeNo=$g(EpisodeNo),WorkGroupMachineDR=$g(WorkGroupMachineDR),RecHospitalDR=$g(RecHospitalDR) s RecFlag=$g(RecFlag),ReceiveNotes=$g(ReceiveNotes),SpecimenQualityDR=$g(SpecimenQualityDR),TransmitDate=$g(TransmitDate) s TransmitDate=$tr(TransmitDate,\u0026#34;-\u0026#34;),CarryUserDR=$g(CarryUserDR) s AssayNo=$g(AssayNo) s PlacerLabno=$g(PlacerLabno) s RackNo=$g(RackNo) s OperIP=$g(OperIP),WorkGroupDR=$g(WorkGroupDR) b ;ReceiveLisOrdListNew s UserDR=$o(^dbo.SYSUserI(\u0026#34;IndexCode\u0026#34;,UserDR,\u0026#34;\u0026#34;)) ;Set $ZTrap = \u0026#34;ErrorHandle\u0026#34; ;s ^TMP(\u0026#34;LIS.Service.ENS.TransReport\u0026#34;,\u0026#34;ReceiveLisOrdList\u0026#34;)=$lb(Labno, UserDR, AssayNo, EpisodeNo, WorkGroupMachineDR, TransmitDate, RecHospitalDR, RecFlag, ReceiveNotes, SpecimenQualityDR, CarryUserDR, PlacerLabno, RackNo, OperIP, WorkGroupDR, Sessions) i \u0026#39;$l(Labno) q \u0026#34;-1^检验号为空！\u0026#34; //20160822 yy 判断是否有记接收了标本 //i $d(^DHCLis(\u0026#34;ReceveFormOtherHis\u0026#34;,Labno)) q \u0026#34;-1^该标本已经核收\u0026#34; //s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;成功\u0026lt;/ResultContent\u0026gt;\u0026lt;Orders\u0026gt;\u0026lt;OrderList\u0026gt;\u0026lt;OrdID\u0026gt;\u0026lt;/OrdID\u0026gt;\u0026lt;LabNo\u0026gt;1600904130\u0026lt;/LabNo\u0026gt;\u0026lt;ArcimCode\u0026gt;L002\u0026lt;/ArcimCode\u0026gt;\u0026lt;ArcimDesc\u0026gt;血常规\u0026lt;/ArcimDesc\u0026gt;\u0026lt;OrderQty\u0026gt;1\u0026lt;/OrderQty\u0026gt;\u0026lt;BillCode\u0026gt;P\u0026lt;/BillCode\u0026gt;\u0026lt;SpecimenTypeCode\u0026gt;\u0026lt;/SpecimenTypeCode\u0026gt;\u0026lt;SpecimenTypeDesc\u0026gt;\u0026lt;/SpecimenTypeDesc\u0026gt;\u0026lt;SpVolume\u0026gt;\u0026lt;/SpVolume\u0026gt;\u0026lt;ColInfo\u0026gt;\u0026lt;/ColInfo\u0026gt;\u0026lt;Container\u0026gt;\u0026lt;/Container\u0026gt;\u0026lt;GTSeq\u0026gt;\u0026lt;/GTSeq\u0026gt;\u0026lt;SpecFlag\u0026gt;\u0026lt;/SpecFlag\u0026gt;\u0026lt;VerifyDate\u0026gt;2016-04-26\u0026lt;/VerifyDate\u0026gt;\u0026lt;VerifyTime\u0026gt;13:43:09\u0026lt;/VerifyTime\u0026gt;\u0026lt;ColDate\u0026gt;\u0026lt;/ColDate\u0026gt;\u0026lt;ColTime\u0026gt;\u0026lt;/ColTime\u0026gt;\u0026lt;AppDeptCode\u0026gt;\u0026lt;/AppDeptCode\u0026gt;\u0026lt;AppDeptDesc\u0026gt;体检科\u0026lt;/AppDeptDesc\u0026gt;\u0026lt;RecDeptCode\u0026gt;\u0026lt;/RecDeptCode\u0026gt;\u0026lt;RecDeptDesc\u0026gt;\u0026lt;/RecDeptDesc\u0026gt;\u0026lt;TSPrice\u0026gt;20\u0026lt;/TSPrice\u0026gt;\u0026lt;OrderStatus\u0026gt;E\u0026lt;/OrderStatus\u0026gt;\u0026lt;DocCode\u0026gt;\u0026lt;/DocCode\u0026gt;\u0026lt;DocDesc\u0026gt;\u0026lt;/DocDesc\u0026gt;\u0026lt;RepLoct\u0026gt;\u0026lt;/RepLoct\u0026gt;\u0026lt;RepDate\u0026gt;\u0026lt;/RepDate\u0026gt;\u0026lt;RepTime\u0026gt;\u0026lt;/RepTime\u0026gt;\u0026lt;Note\u0026gt;\u0026lt;/Note\u0026gt;\u0026lt;AdmNo\u0026gt;\u0026lt;/AdmNo\u0026gt;\u0026lt;AdmDate\u0026gt;2016-04-26\u0026lt;/AdmDate\u0026gt;\u0026lt;AdmTime\u0026gt;13:43:09\u0026lt;/AdmTime\u0026gt;\u0026lt;AdmTypeCode\u0026gt;\u0026lt;/AdmTypeCode\u0026gt;\u0026lt;AdmTypeDesc\u0026gt;体检\u0026lt;/AdmTypeDesc\u0026gt;\u0026lt;FeeType\u0026gt;\u0026lt;/FeeType\u0026gt;\u0026lt;PatientWard\u0026gt;\u0026lt;/PatientWard\u0026gt;\u0026lt;BedNo\u0026gt;\u0026lt;/BedNo\u0026gt;\u0026lt;Diagnose\u0026gt;\u0026lt;/Diagnose\u0026gt;\u0026lt;RegisterNo\u0026gt;16009041\u0026lt;/RegisterNo\u0026gt;\u0026lt;PatientName\u0026gt;测试（童）\u0026lt;/PatientName\u0026gt;\u0026lt;SexCode\u0026gt;M\u0026lt;/SexCode\u0026gt;\u0026lt;SexDesc\u0026gt;男\u0026lt;/SexDesc\u0026gt;\u0026lt;DOB\u0026gt;1987-04-26\u0026lt;/DOB\u0026gt;\u0026lt;Age\u0026gt;29岁\u0026lt;/Age\u0026gt;\u0026lt;DocumentID\u0026gt;D16008409\u0026lt;/DocumentID\u0026gt;\u0026lt;PatientAddress\u0026gt;\u0026lt;/PatientAddress\u0026gt;\u0026lt;IdentityCardNo\u0026gt;\u0026lt;/IdentityCardNo\u0026gt;\u0026lt;Telephone\u0026gt;\u0026lt;/Telephone\u0026gt;\u0026lt;SpecUserCode\u0026gt;\u0026lt;/SpecUserCode\u0026gt;\u0026lt;StartDate\u0026gt;\u0026lt;/StartDate\u0026gt;\u0026lt;StartTime\u0026gt;\u0026lt;/StartTime\u0026gt;\u0026lt;SendFlag\u0026gt;NW\u0026lt;/SendFlag\u0026gt;\u0026lt;/OrderList\u0026gt;\u0026lt;/Orders\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; ;s retObj=##Class(UtilsController.LIS.UtilsControllerHttpSoap12Endpoint).%New() ;s Input=retObj.ReceiveLisOrdList(Labno) //20160818 yy ;s Input=$g(^TMPLISORDINFOS(\u0026#34;LisOrdInfos\u0026#34;,Labno)) s CurNamespace=$ZUTIL(5) s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() NEW $NAMESPACE s $NAMESPACE= WebNamespace s Input=##Class(LISAPP.LIS.BLL.DHCReceiveInterface).GetLabNoInfoSFHIS(Labno,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) b ;Input s $NAMESPACE= CurNamespace i \u0026#39;$l(Input) q \u0026#34;-1^未查询到标本信息！\u0026#34; s repid=$i(^CacheTemp) k ^TMP($zn,$j) s RetValue=100 S UncheckInfo=\u0026#34;\u0026#34; //未核收医嘱信息 //读取医嘱 s obj= ##class(LIS.Util.COM.XML).FromXML(Input) s ResultCode=obj.ResultCode s ResultContent=obj.ResultContent i (ResultCode=-1){ s RetValue=\u0026#34;-1^\u0026#34;_ResultContent } b ;ResultCode i (ResultCode=0)||(ResultCode=\u0026#34;\u0026#34;) { s objMldVis=##Class(LIS.Model.RPVisitNumber).%New() s Counts=+obj.Orders.%pIndex s (RegNo,AdmNo,AdmTypeCode,MedicalRecordNo,SpecimenTypeCode,AdmDate,AdmTime,PatName,SexCode)=\u0026#34;\u0026#34; s (DOB,Age,AppDeptCode,AppDeptDesc,DocCode,DocDesc,VerifyDate,VerifyTime,Diagnose)=\u0026#34;\u0026#34; s (Telephone,IdentityCardNo,PatientAddress,Note,ColDate,ColTime,SpecUserCode)=\u0026#34;\u0026#34; s err=\u0026#34;\u0026#34; f tmpi=0:1:(Counts-1) { s OrderList=obj.Orders.Get(tmpi) b ;OrderList //s LabNo=OrderList.LabNo s ArcimCode=$tr(OrderList.ArcimCode,$c(0)) s ArcimDesc=$tr(OrderList.ArcimDesc,$c(0)) s TSPrice=$tr(OrderList.TSPrice,$c(0)) b ;a901 ///获取HISCode关联码医嘱 s TestSetDR=$o(^dbo.BTTestSetI(\u0026#34;IndexHISCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(ArcimCode),\u0026#34;\u0026#34;)) // b ;a902 ///获取医嘱代码关联 i \u0026#39;$l(TestSetDR) s TestSetDR=$o(^dbo.BTTestSetI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(ArcimCode),\u0026#34;\u0026#34;)) i \u0026#39;$l(TestSetDR) s err=\u0026#34;-1^检验医嘱【\u0026#34;_ArcimDesc_\u0026#34;】未对照：\u0026#34;_ArcimCode q b ;a904 ///判断医嘱是否核收 i $d(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno))){ s mVisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) s RowID=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,mVisitNumberDR,TestSetDR,\u0026#34;\u0026#34;)) ;s RowID=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,mVisitNumberDR,\u0026#34;\u0026#34;)) b ;a905 i $l(RowID){ ;continue s WGMDR=$LG($g(^dbo.RPVisitNumberTestSetD(RowID)),5) I $L(WGMDR) continue } } b ;a903 ///核收判断医嘱是否本工作小组 i (RecFlag=\u0026#34;H\u0026#34;) { s Reterr=##Class(LIS.Service.ENS.TransReport).GetTSDefWGroupMiInfo(TestSetDR,WorkGroupMachineDR) i Reterr\u0026#39;=0 d .i \u0026#39;$l(TSPrice) s TSPrice=\u0026#34;未获取到价格\u0026#34;\t//YHR 20240409 记录未核收医嘱 .s ^LISTMPDATA(\u0026#34;WHSYZ\u0026#34;,Labno,TestSetDR)=TSPrice ;b ;a MI.Special.RecordData\ti Reterr\u0026#39;=0 s UncheckInfo=Reterr_\u0026#34;,\u0026#34;_UncheckInfo continue } s ^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;,TestSetDR)=TSPrice //接收医嘱列表 s ^TMP($zn,$j,repid,\u0026#34;SpecimenDR\u0026#34;)=$lg($g(^dbo.BTTestSetD(TestSetDR)),10)\t//YHR 20240409 标本默认标本类型 k ^LISTMPDATA(\u0026#34;WHSYZ\u0026#34;,Labno,TestSetDR) b ;a102 //20160818 yy s OrderID=$tr(OrderList.OrdID,$c(0)) s SpecimenTypeCode=$tr(OrderList.SpecimenTypeCode,$c(0)) s RegNo=$tr(OrderList.RegisterNo,$c(0)) s AdmTypeCode=$tr(OrderList.AdmTypeCode,$c(0)) s AdmNo=$tr(OrderList.AdmNo,$c(0)) s MedicalRecordNo=$tr(OrderList.DocumentID,$c(0)) s AdmDate=$tr(OrderList.AdmDate,$c(0)) s AdmTime=$tr(OrderList.AdmTime,$c(0)) s PatName=$tr(OrderList.PatientName,$c(0)) s SexCode=$tr(OrderList.SexCode,$c(0)) i SexCode=\u0026#34;1\u0026#34; s SexCode=\u0026#34;M\u0026#34; i SexCode=\u0026#34;2\u0026#34; s SexCode=\u0026#34;F\u0026#34; s DOB=$tr(OrderList.DOB,$c(0)) s Age=$tr(OrderList.Age,$c(0)) s AppDeptCode=$tr(OrderList.AppDeptCode,$c(0)) s AppDeptDesc=$tr(OrderList.AppDeptDesc,$c(0)) s DocCode=$tr(OrderList.DocCode,$c(0)) s DocDesc=$tr(OrderList.DocDesc,$c(0)) s VerifyDate=$tr(OrderList.VerifyDate,$c(0)) s VerifyTime=$tr(OrderList.VerifyTime,$c(0)) s Diagnose=$tr(OrderList.Diagnose,$c(0)) s Telephone=$tr(OrderList.Telephone,$c(0)) s IdentityCardNo=$tr(OrderList.IdentityCardNo,$c(0)) s PatientAddress=$tr(OrderList.PatientAddress,$c(0)) s Note=$tr(OrderList.Note,$c(0)) s ColDate=$tr(OrderList.ColDate,$c(0)) s ColTime=$tr(OrderList.ColTime,$c(0)) s SpecUserCode=$tr(OrderList.SpecUserCode,$c(0)) s BedNo=$tr(OrderList.BedNo,$c(0)) } b ;FGJS i $l(err),err\u0026#39;=0 s RetValue=err q RetValue I \u0026#39;$D(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;)),RecFlag=\u0026#34;C\u0026#34; s RetValue=\u0026#34;无可接收医嘱！\u0026#34; q RetValue I \u0026#39;$D(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;)),RecFlag=\u0026#34;H\u0026#34;,$l(UncheckInfo) s RetValue=\u0026#34;本工作小组无可核收医嘱,请送至\u0026#34;_UncheckInfo_\u0026#34;做检验\u0026#34; q RetValue b ;a101 I \u0026#39;$D(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;)),RecFlag=\u0026#34;H\u0026#34; s RetValue=\u0026#34;无可核收医嘱！\u0026#34; q RetValue s ^TMP(\u0026#34;YY\u0026#34;,\u0026#34;age\u0026#34;)=Age ///保存标本信息 i $d(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno))) d .s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) .s objVisitNumber=##class(dbo.RPVisitNumber).%OpenId(VisitNumberDR) e d .s objVisitNumber=##class(dbo.RPVisitNumber).%New() s objVisitNumber.VisitNumber=Labno s objVisitNumber.RegNo=$tr(RegNo,$c(0)) ///就诊类型 s AdmissionTypeDR=\u0026#34;\u0026#34; i \u0026#39;$l(AdmTypeCode) s AdmTypeCode=\u0026#34;P\u0026#34; //默认体检 i $l(AdmTypeCode) s AdmissionTypeDR=##Class(HIS.DHCReceiveProcess).GetAdmissionTypeDR(AdmTypeCode) s objVisitNumber.AdmissionTypeDR=AdmissionTypeDR s objVisitNumber.AdmNo=$tr(AdmNo,$c(0)) ;20160819 yy s objVisitNumber.MedicalRecordNo=$tr(MedicalRecordNo,$c(0)) i $L(AdmDate) s AdmDate=$tr(AdmDate,\u0026#34;-\u0026#34;) i $l(AdmTime) s AdmTime=$zth(AdmTime,3) s objVisitNumber.AdmDate=AdmDate s objVisitNumber.AdmTime=AdmTime //s objVisitNumber.CertTypeDR=$tr(obj.CertTypeDR,$c(0)) //s objVisitNumber.CertNo=$tr(obj.CertNo,$c(0)) s objVisitNumber.IDNumber=IdentityCardNo //s objVisitNumber.PaymentTypeDR=$tr(obj.PaymentTypeDR,$c(0)) s objVisitNumber.SurName=PatName s objVisitNumber.GivenName=PatName s SpeciesDR=$o(^dbo.BTSpeciesI(\u0026#34;IndexCode\u0026#34;,##Class(LIS.Util.Common).IndexData(SexCode),\u0026#34;\u0026#34;)) s objVisitNumber.SpeciesDR=SpeciesDR i $L(DOB) s DOB=$tr(DOB,\u0026#34;-\u0026#34;) //i $L(BirthTime) s BirthTime=$zth(BirthTime,3) s objVisitNumber.BirthDate=DOB s objVisitNumber.BirthTime=\u0026#34;\u0026#34; s AgeCode=\u0026#34;\u0026#34;,AgeUnitDR=\u0026#34;\u0026#34; i Age[\u0026#34;岁\u0026#34; s AgeCode=\u0026#34;Y\u0026#34; i Age[\u0026#34;月\u0026#34; s AgeCode=\u0026#34;M\u0026#34; i Age[\u0026#34;天\u0026#34; s AgeCode=\u0026#34;D\u0026#34; i Age[\u0026#34;时\u0026#34; s AgeCode=\u0026#34;H\u0026#34; i $l(AgeCode) s AgeUnitDR=##Class(HIS.DHCReceiveProcess).GetAgeUnitDR(AgeCode) s objVisitNumber.Age=+Age s objVisitNumber.AgeUnitDR=AgeUnitDR //s objVisitNumber.EthnicityDR=$tr(obj.EthnicityDR,$c(0)) s objVisitNumber.HospitalDR=RecHospitalDR s LocationDR=$o(^dbo.BTLocationI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(AppDeptCode),\u0026#34;\u0026#34;)) s LocationDR=\u0026#34;\u0026#34; i $l(AppDeptCode) d .i $d(^dbo.BTLocationI(\u0026#34;IndexHISCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(AppDeptCode))) d ..s LocationDR=$o(^dbo.BTLocationI(\u0026#34;IndexHISCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(AppDeptCode),\u0026#34;\u0026#34;)) .//没有配外部代码，考虑是否自动插入 .//i \u0026#39;$l(LocationDR) s LocationDR=##Class(HIS.DHCReceiveProcess).GetLocationDR(AppDeptCode,AppDeptCode,AppDeptDesc,RecHospitalDR) s objVisitNumber.LocationDR=LocationDR s DoctorDR=\u0026#34;\u0026#34; i $l(DocCode) d .i $d(^dbo.BTDoctorI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(DocCode))) d ..s DoctorDR=$o(^dbo.BTDoctorI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(DocCode),\u0026#34;\u0026#34;)) .//没有配外部代码，考虑是否自动插入 .//i \u0026#39;$l(DoctorDR) s DoctorDR=##Class(HIS.DHCReceiveProcess).GetDoctorDR(DocCode,DocDesc,RecHospitalDR) ;b ;DoctorDR s objVisitNumber.DoctorDR=DoctorDR i $L(VerifyDate) s VerifyDate=$tr(VerifyDate,\u0026#34;-\u0026#34;) i $L(VerifyTime) s VerifyTime=$zth(VerifyTime,3) s objVisitNumber.RequestDate=VerifyDate s objVisitNumber.RequestTime=VerifyTime //s objVisitNumber.WardDR=$tr(obj.WardDR,$c(0)) //s objVisitNumber.BedNo=$tr(obj.BedNo,$c(0)) s objVisitNumber.Symptom=$tr(Diagnose,$c(0)) //s objVisitNumber.MobileNo=$tr(obj.MobileNo,$c(0)) s objVisitNumber.PhoneNo=$tr(Telephone,$c(0)) //s objVisitNumber.EMail=$tr(obj.EMail,$c(0)) //s objVisitNumber.Height=$tr(obj.Height,$c(0)) //s objVisitNumber.Weight=$tr(obj.Weight,$c(0)) //s objVisitNumber.BloodPressure=$tr(obj.BloodPressure,$c(0)) //s objVisitNumber.ClinicalConditionsDR=$tr(obj.ClinicalConditionsDR,$c(0)) //s objVisitNumber.LMPDate=$tr(obj.LMPDate,$c(0)) //s Preg=0 //i $zcvt($tr(obj.Pregnant,$c(0)),\u0026#34;U\u0026#34;)=\u0026#34;TRUE\u0026#34; s Preg=1 //s objVisitNumber.Pregnant=Preg //s objVisitNumber.PregnantWeeks=$tr(obj.PregnantWeeks,$c(0)) //s objVisitNumber.AboDR=$tr(obj.AboDR,$c(0)) //s objVisitNumber.RhDR=$tr(obj.RhDR,$c(0)) s objVisitNumber.Address=$tr(PatientAddress,$c(0)) //s objVisitNumber.PostCode=$tr(obj.PostCode,$c(0)) //s InfectFlag=$tr(obj.InfectFlag,$c(0)) //s Infect=0 //i $zcvt(InfectFlag,\u0026#34;U\u0026#34;)=\u0026#34;TRUE\u0026#34; s Infect=1 //s objVisitNumber.InfectFlag=Infect //s objVisitNumber.InfectAlert=$tr(obj.InfectAlert,$c(0)) //s SpecialFlag=obj.SpecialFlag //s Special=0 //i $zcvt(SpecialFlag,\u0026#34;U\u0026#34;)=\u0026#34;TRUE\u0026#34; s Special=1 //s objVisitNumber.SpecialFlag=Special //s objVisitNumber.PregnantNum=$tr(obj.PregnantNum,$c(0)) //s objVisitNumber.ChildbirthNum=$tr(obj.ChildbirthNum,$c(0)) //20160823 yy //s objVisitNumber.ReqNotes=$tr(Note,$c(0)) s objVisitNumber.ReqNotes=$tr(OrderID,$c(0)) s objVisitNumber.BedNo=$tr(BedNo,$c(0)) //s objVisitNumber.RequestNo=$tr(obj.RequestNo,$c(0)) //s Urgent=$tr(obj.Urgent,$c(0)) //s UrgentFlag=0 //i $zcvt(Urgent,\u0026#34;U\u0026#34;)=\u0026#34;TRUE\u0026#34; s UrgentFlag=1 //s objVisitNumber.Urgent=UrgentFlag i $L(ColDate) s ColDate=$tr(ColDate,\u0026#34;-\u0026#34;) i $l(ColTime),(ColTime[\u0026#34;:\u0026#34;) s ColTime=$zth(ColTime,3) s objVisitNumber.CollectDate=$tr(ColDate,$c(0)) s objVisitNumber.CollectTime=$tr(ColTime,$c(0)) //s objVisitNumber.CollectUserDR=$tr(obj.CollectUserDR,$c(0)) //s objVisitNumber.AnatomicalSiteDR=$tr(obj.AnatomicalSiteDR,$c(0)) //s objVisitNumber.CollectPositon=$tr(obj.CollectPositon,$c(0)) s SpecimenDR=$o(^dbo.BTSpecimenI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(SpecimenTypeCode),\u0026#34;\u0026#34;)) i \u0026#39;$l(SpecimenDR) d . s objVisitNumber.SpecimenDR=SpecimenDR s objVisitNumber.ContainerDR=\u0026#34;\u0026#34; s objVisitNumber.CollectNotes=\u0026#34;\u0026#34; s objVisitNumber.H24UVolume=\u0026#34;\u0026#34; s objVisitNumber.H24UTimePeriod=\u0026#34;\u0026#34; s objVisitNumber.BodyTemp=\u0026#34;\u0026#34; s objVisitNumber.Confidential=\u0026#34;\u0026#34; s objVisitNumber.CarryTime=\u0026#34;\u0026#34; s objVisitNumber.CarryUserDR=\u0026#34;\u0026#34; i (RecFlag=\u0026#34;C\u0026#34;) d ///集中接收 .s objVisitNumber.ReceiveDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) .s objVisitNumber.ReceiveTime=$p($h,\u0026#34;,\u0026#34;,2) .s objVisitNumber.ReceiveUserDR=UserDR .i $l(CarryUserDR),\u0026#39;$l(objVisitNumber.CarryUserDR) d ..s objVisitNumber.CarryDate = $tr($zd(+$h,3),\u0026#34;-\u0026#34;) ..s objVisitNumber.CarryTime = $p($h,\u0026#34;,\u0026#34;,2) ..s objVisitNumber.CarryUserDR = CarryUserDR .s objVisitNumber.ReceiveNotes=ReceiveNotes .s objVisitNumber.SpecimenQualityDR=$tr(SpecimenQualityDR,$c(0)) i (RecFlag=\u0026#34;H\u0026#34;) d ///标本核收 如果字段为空 .i $tr(objVisitNumber.ReceiveDate,$c(0))=\u0026#34;\u0026#34; s objVisitNumber.ReceiveDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) .i $tr(objVisitNumber.ReceiveTime,$c(0))=\u0026#34;\u0026#34; s objVisitNumber.ReceiveTime=$p($h,\u0026#34;,\u0026#34;,2) .i $tr(objVisitNumber.ReceiveUserDR,$c(0))=\u0026#34;\u0026#34; s objVisitNumber.ReceiveUserDR=UserDR .i $tr(objVisitNumber.SpecimenQualityDR,$c(0))=\u0026#34;\u0026#34; s objVisitNumber.SpecimenQualityDR=$tr(SpecimenQualityDR,$c(0))\t//YHR 20240409 保存标本质量 .b ;SpecimenQualityDR .i $lg($g(^dbo.RPVisitNumberD(VisitNumberDR)),56)=\u0026#34;\u0026#34; d ..i $d(^TMP($zn,$j,repid,\u0026#34;SpecimenDR\u0026#34;)) d ...s objVisitNumber.SpecimenDR=$g(^TMP($zn,$j,repid,\u0026#34;SpecimenDR\u0026#34;)) .e s objVisitNumber.SpecimenDR=$lg($g(^dbo.RPVisitNumberD(VisitNumberDR)),56) b ;SpecimenDR s objVisitNumber.ReceiveHospitalDR=RecHospitalDR s objVisitNumber.InStorageTime=\u0026#34;\u0026#34; s objVisitNumber.InStorageUserDR=\u0026#34;\u0026#34; s objVisitNumber.OutStorageTime=\u0026#34;\u0026#34; s objVisitNumber.OutStorageUserDR=\u0026#34;\u0026#34; s objVisitNumber.OutStorageType=\u0026#34;\u0026#34; i (RecFlag\u0026#39;=\u0026#34;S\u0026#34;) d ///拒收保存不保存时间 .s AddDate=$tr(objVisitNumber.AddDate,$c(0)) .s AddTime=$tr(objVisitNumber.AddTime,$c(0)) .s AddUserDR=$tr(objVisitNumber.AddUserDR,$c(0)) .i \u0026#39;$l(AddDate) s AddDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) .i \u0026#39;$l(AddTime) s AddTime=$p($h,\u0026#34;,\u0026#34;,2) .i \u0026#39;$l(AddUserDR) s AddUserDR=UserDR .s objVisitNumber.AddDate=AddDate .s objVisitNumber.AddTime=AddTime .s objVisitNumber.AddUserDR=AddUserDR s objVisitNumber.AddType=\u0026#34;3\u0026#34; ///1条码,2手工,3第三方,4其它(拒收保存) ;s objVisitNumber.RequestNo=OrderID b ;a903 i RecFlag=\u0026#34;A\u0026#34; D .s ArriveDate=$tr(objVisitNumber.ArriveDate,$c(0)) .s ArriveTime=$tr(objVisitNumber.ArriveTime,$c(0)) .s ArriveUserDR=$tr(objVisitNumber.ArriveUserDR,$c(0)) .i \u0026#39;$l(ArriveDate) s ArriveDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) .i \u0026#39;$l(ArriveTime) s ArriveTime=$p($h,\u0026#34;,\u0026#34;,2) .i \u0026#39;$l(ArriveUserDR) s ArriveUserDR=UserDR .s objVisitNumber.ArriveWorkGroupDR=WorkGroupDR .s objVisitNumber.ArriveDate=ArriveDate .s objVisitNumber.ArriveTime=ArriveTime .s objVisitNumber.ArriveUserDR=ArriveUserDR b ;a904 s sc=objVisitNumber.%Save() ;RecFlag=\u0026#34;H\u0026#34; If ($SYSTEM.Status.IsOK(sc)) { s RetValue=0 s VisitNumberDR=objVisitNumber.RowID } Else { s RetValue=\u0026#34;-1^标本信息保存失败:\u0026#34;_$SYSTEM.Status.GetErrorText(sc) } b ;RetValue i RetValue\u0026#39;=0 q RetValue s err=\u0026#34;\u0026#34; s IsReceived=1 s TestSetDR=\u0026#34;\u0026#34; f { s TestSetDR=$o(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; s TestSetFee=+$g(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;,TestSetDR)) s RowID=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR,\u0026#34;\u0026#34;)) i $l(RowID){ s objTestSets=##class(dbo.RPVisitNumberTestSet).%OpenId(RowID) } else { s objTestSets=##class(dbo.RPVisitNumberTestSet).%New() } i objTestSets.Recieved\u0026#39;=1 s IsReceived=0 s objTestSets.VisitNumberDR=VisitNumberDR s objTestSets.TestSetDR=TestSetDR s objTestSets.Recieved=1 i \u0026#39;$l(AssayNo),$l(WorkGroupMachineDR) { s CommDirection=$lg(^dbo.BTWorkGroupMachineD(WorkGroupMachineDR),11) i CommDirection=\u0026#34;UP\u0026#34; s AssayNo=Labno i CommDirection=\u0026#34;BI\u0026#34; s AssayNo=Labno } if RecFlag=\u0026#34;H\u0026#34; { s objTestSets.WorkGroupMachineDR=WorkGroupMachineDR s objTestSets.TransmitDate=TransmitDate i \u0026#39;$l(AssayNo) s AssayNo=EpisodeNo i \u0026#39;$l(AssayNo) s AssayNo=Labno s objTestSets.AssayNo=AssayNo } s objTestSets.TestSetFee=TestSetFee s objTestSets.HISOrderID=\u0026#34;\u0026#34; s objTestSets.Sequence=1 s sc=objTestSets.%Save() If ($SYSTEM.Status.IsOK(sc)) { s RetValue=0 //更新上传记录 s ret=##Class(MI.MachineUpload).Upload(Labno,TestSetDR,WorkGroupMachineDR) } Else {s err=$SYSTEM.Status.GetErrorText(sc)} } b //3 i RecFlag=\u0026#34;C\u0026#34;,IsReceived=1 s RetValue=\u0026#34;-1^标本已接收\u0026#34; q RetValue i $l(err) s RetValue=\u0026#34;-1^检验医嘱保存失败:\u0026#34;_err q RetValue ///报告核收 i (RecFlag=\u0026#34;H\u0026#34;){ s objVisitNumberReport=##class(dbo.RPVisitNumberReport).%New() s objVisitNumberReport.VisitNumberDR=VisitNumberDR s objVisitNumberReport.TransmitDate=TransmitDate s objVisitNumberReport.WorkGroupMachineDR=WorkGroupMachineDR s objVisitNumberReport.OrderNo=1 i \u0026#39;$l(AssayNo) s AssayNo=EpisodeNo i \u0026#39;$l(AssayNo) s AssayNo=Labno s objVisitNumberReport.AssayNo=AssayNo s objVisitNumberReport.AccessionNo=\u0026#34;\u0026#34; ///细菌分离号 s objVisitNumberReport.EpisodeNo=EpisodeNo s objVisitNumberReport.AcceptDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s objVisitNumberReport.AcceptTime=$p($h,\u0026#34;,\u0026#34;,2) s objVisitNumberReport.AcceptUserDR=UserDR s objVisitNumberReport.Status=1 //报告状态(1登记，2初审，3审核，4复查，5取消审核，6作废，O其他) s objVisitNumberReport.RackNo=RackNo s ret=objVisitNumberReport.%Save() b //901 If ($SYSTEM.Status.IsOK(ret)) {s RetValue=0} Else {s err=\u0026#34;标本信息核收失败:\u0026#34;_$SYSTEM.Status.GetErrorText(ret) Quit} s TestSetDR=\u0026#34;\u0026#34; f { s TestSetDR=$o(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;,TestSetDR)) //本次核收医嘱 q:TestSetDR=\u0026#34;\u0026#34; s RowID=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR,\u0026#34;\u0026#34;)) i $l(RowID){ s objTestSets=##class(dbo.RPVisitNumberTestSet).%OpenId(RowID) s objTestSets.VisitNumberReportDR=objVisitNumberReport.RowID s sc=objTestSets.%Save() If (\u0026#39;$SYSTEM.Status.IsOK(sc)) { s err=$SYSTEM.Status.GetErrorText(sc) q } } //按医嘱生成报告项目结果 s retVal=##Class(LISSP.DHCRPVisitNumberReport).SaveReportTestCode(objVisitNumberReport.RowID,TestSetDR) i retVal\u0026#39;=1 s err=retVal q } b //902 i $l(err) s RetValue=\u0026#34;-1^检验医嘱保存失败:\u0026#34;_err q RetValue //更新工作小组流水号 s CurDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) i $l(WorkGroupMachineDR),$l(EpisodeNo) s ret=##Class(HIS.DHCCommon).SaveWorkGroupMachineEpis(WorkGroupMachineDR,CurDate,EpisodeNo) i ret\u0026#39;=1,err=\u0026#34;更新工作小组流水号失败:\u0026#34;_ret Quit } i $l(err) s RetValue=\u0026#34;-1^\u0026#34;_err q RetValue ///插入标本核收操作记录 s (OperateDate,OperateTime,OperateTypeCode,OperateNotes,RejectTypeDR)=\u0026#34;\u0026#34; s OperateNotes=ReceiveNotes i (RecFlag=\u0026#34;A\u0026#34;) s OperateTypeCode=30 //送达 i (RecFlag=\u0026#34;S\u0026#34;) s OperateTypeCode=31 ///保存 i (RecFlag=\u0026#34;C\u0026#34;) s OperateTypeCode=4,OperateNotes=OperIP ///接收 i (RecFlag=\u0026#34;H\u0026#34;) s OperateTypeCode=5,OperateNotes=OperIP ///核收 //\tVisitNumberDR, OperateDate, OperateTime, UserID, OperateNotes, OperateTypeCode, WorkGroupMachineDR, RejectTypeDR, IPAddress, WorkGroupDR, Sessions s ret=##Class(HIS.DHCCommon).SaveRecord(VisitNumberDR,OperateDate, OperateTime, UserDR, OperateNotes, OperateTypeCode, WorkGroupMachineDR, RejectTypeDR,OperIP,WorkGroupDR,Sessions) i ret\u0026#39;=1 s RetValue=\u0026#34;标本操作记录保存失败:\u0026#34;_ret q RetValue } /* If ($SYSTEM.Status.IsOK(sc)) { s RetValue=1 } Else { }\t*/ ;i $l(UncheckInfo) s RetValue=RetValue_\u0026#34;UncheckInfo\u0026#34;_UncheckInfo i $l(UncheckInfo) s RetValue=1_\u0026#34;^未核收医嘱:\u0026#34;_UncheckInfo b ;CSRetValue Q RetValue ErrorHandle TROLLBACK s RetValue=\u0026#34;-1^错误\u0026#34;_$tr($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE Quit RetValue } /// w ##Class(LIS.Service.ENS.TransReport).ReturnStatus(\u0026#34;**4868149*\u0026#34;,1).Read() /// w ##Class(LIS.Service.ENS.TransReport).ReturnStatus(\u0026#34;**8015454*\u0026#34;,1).Read() /// 回写标本接受状态信息 ClassMethod ReturnStatus(Labno, ret) { s Labno=$tr(Labno,\u0026#34;*\u0026#34;) s Labno=$tr(Labno,\u0026#34;\\\u0026#34;) //获取数据 s return=\u0026#34;\u0026#34; i ret=1 d .s ResultCode=\u0026#34;T\u0026#34; .s ResultContent=\u0026#34;\u0026#34; e d .s ResultCode=\u0026#34;F\u0026#34; .s ResultContent=ret //拼装json S Main={} s Main.\u0026#34;receivestatus\u0026#34;=ResultCode s Date=$h s Main.\u0026#34;receivedate\u0026#34;=$tr($zd($p(Date,\u0026#34;,\u0026#34;,1),3),\u0026#34;-\u0026#34;,\u0026#34;.\u0026#34;) s Main.\u0026#34;receivetime\u0026#34;=$tr($zd($p(Date,\u0026#34;,\u0026#34;,1),3),\u0026#34;-\u0026#34;,\u0026#34;.\u0026#34;)_\u0026#34; \u0026#34;_$zt($p(Date,\u0026#34;,\u0026#34;,2),1) s Main.\u0026#34;labno\u0026#34;=Labno set OutStr=Main.%ToJSON() s stream=##class(%GlobalCharacterStream).%New() d stream.Write(OutStr) b ;a OutStr s CurNamespace=$ZUTIL(5) s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() NEW $NAMESPACE s $NAMESPACE= WebNamespace i $e(Labno,1)=4 s return=##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).HIPMessageServerS(\u0026#34;MES0023\u0026#34;,stream) i $e(Labno,1)=8 s return=##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).HIPMessageServerS(\u0026#34;MES0027\u0026#34;,stream)\t//YHR 20240416 护理院回写 ;s ^YHR(\u0026#34;HXBG\u0026#34;,Labno)=return.Read() b ;Input s $NAMESPACE= CurNamespace q return } /// Creator： liuzf /// CreateDate： 2016-04-27 /// Description： 接收外部标本 /// Table： 无 /// Input： 检验号 /// Output： 无 /// Return： 错误信息 /// Others： 无 /// w ##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdList(\u0026#34;2779164\u0026#34;,\u0026#34;113\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;2\u0026#34;,\u0026#34;20160819\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;H\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) /// w ##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdList(Labno, UserDR, AssayNo, EpisodeNo, WorkGroupMachineDR, TransmitDate, RecHospitalDR, RecFlag, ReceiveNotes, SpecimenQualityDR, CarryUserDR, PlacerLabno, RackNo, OperIP, WorkGroupDR) /// w ##Class(LIS.Service.ENS.TransReport).ReceiveLisOrdList(\u0026#34;**4860462*\u0026#34;,\u0026#34;demo\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;3\u0026#34;,\u0026#34;13\u0026#34;,\u0026#34;20240408\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;H\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;2\u0026#34;,\u0026#34;\u0026#34;) ClassMethod ReceiveLisOrdList(Labno, UserDR, AssayNo, EpisodeNo, WorkGroupMachineDR, TransmitDate, RecHospitalDR, RecFlag, ReceiveNotes, SpecimenQualityDR, CarryUserDR, PlacerLabno, RackNo, OperIP, WorkGroupDR) As %String { s Labno=$g(Labno),UserDR=$g(UserDR),EpisodeNo=$g(EpisodeNo),WorkGroupMachineDR=$g(WorkGroupMachineDR),RecHospitalDR=$g(RecHospitalDR) s RecFlag=$g(RecFlag),ReceiveNotes=$g(ReceiveNotes),SpecimenQualityDR=$g(SpecimenQualityDR),TransmitDate=$g(TransmitDate) s TransmitDate=$tr(TransmitDate,\u0026#34;-\u0026#34;),CarryUserDR=$g(CarryUserDR) s AssayNo=$g(AssayNo) s PlacerLabno=$g(PlacerLabno) s RackNo=$g(RackNo) s OperIP=$g(OperIP),WorkGroupDR=$g(WorkGroupDR) Set $ZTrap = \u0026#34;ErrorHandle\u0026#34; s ^TMP(\u0026#34;LIS.Service.ENS.TransReport\u0026#34;,\u0026#34;ReceiveLisOrdList\u0026#34;)=$lb(Labno, UserDR, AssayNo,EpisodeNo, WorkGroupMachineDR, TransmitDate, RecHospitalDR, RecFlag, ReceiveNotes, SpecimenQualityDR,CarryUserDR) i \u0026#39;$l(Labno) q \u0026#34;-1^检验号为空！\u0026#34; //20160822 yy 判断是否有记接收了标本 //i $d(^DHCLis(\u0026#34;ReceveFormOtherHis\u0026#34;,Labno)) q \u0026#34;-1^该标本已经核收\u0026#34; //s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;成功\u0026lt;/ResultContent\u0026gt;\u0026lt;Orders\u0026gt;\u0026lt;OrderList\u0026gt;\u0026lt;OrdID\u0026gt;\u0026lt;/OrdID\u0026gt;\u0026lt;LabNo\u0026gt;1600904130\u0026lt;/LabNo\u0026gt;\u0026lt;ArcimCode\u0026gt;L002\u0026lt;/ArcimCode\u0026gt;\u0026lt;ArcimDesc\u0026gt;血常规\u0026lt;/ArcimDesc\u0026gt;\u0026lt;OrderQty\u0026gt;1\u0026lt;/OrderQty\u0026gt;\u0026lt;BillCode\u0026gt;P\u0026lt;/BillCode\u0026gt;\u0026lt;SpecimenTypeCode\u0026gt;\u0026lt;/SpecimenTypeCode\u0026gt;\u0026lt;SpecimenTypeDesc\u0026gt;\u0026lt;/SpecimenTypeDesc\u0026gt;\u0026lt;SpVolume\u0026gt;\u0026lt;/SpVolume\u0026gt;\u0026lt;ColInfo\u0026gt;\u0026lt;/ColInfo\u0026gt;\u0026lt;Container\u0026gt;\u0026lt;/Container\u0026gt;\u0026lt;GTSeq\u0026gt;\u0026lt;/GTSeq\u0026gt;\u0026lt;SpecFlag\u0026gt;\u0026lt;/SpecFlag\u0026gt;\u0026lt;VerifyDate\u0026gt;2016-04-26\u0026lt;/VerifyDate\u0026gt;\u0026lt;VerifyTime\u0026gt;13:43:09\u0026lt;/VerifyTime\u0026gt;\u0026lt;ColDate\u0026gt;\u0026lt;/ColDate\u0026gt;\u0026lt;ColTime\u0026gt;\u0026lt;/ColTime\u0026gt;\u0026lt;AppDeptCode\u0026gt;\u0026lt;/AppDeptCode\u0026gt;\u0026lt;AppDeptDesc\u0026gt;体检科\u0026lt;/AppDeptDesc\u0026gt;\u0026lt;RecDeptCode\u0026gt;\u0026lt;/RecDeptCode\u0026gt;\u0026lt;RecDeptDesc\u0026gt;\u0026lt;/RecDeptDesc\u0026gt;\u0026lt;TSPrice\u0026gt;20\u0026lt;/TSPrice\u0026gt;\u0026lt;OrderStatus\u0026gt;E\u0026lt;/OrderStatus\u0026gt;\u0026lt;DocCode\u0026gt;\u0026lt;/DocCode\u0026gt;\u0026lt;DocDesc\u0026gt;\u0026lt;/DocDesc\u0026gt;\u0026lt;RepLoct\u0026gt;\u0026lt;/RepLoct\u0026gt;\u0026lt;RepDate\u0026gt;\u0026lt;/RepDate\u0026gt;\u0026lt;RepTime\u0026gt;\u0026lt;/RepTime\u0026gt;\u0026lt;Note\u0026gt;\u0026lt;/Note\u0026gt;\u0026lt;AdmNo\u0026gt;\u0026lt;/AdmNo\u0026gt;\u0026lt;AdmDate\u0026gt;2016-04-26\u0026lt;/AdmDate\u0026gt;\u0026lt;AdmTime\u0026gt;13:43:09\u0026lt;/AdmTime\u0026gt;\u0026lt;AdmTypeCode\u0026gt;\u0026lt;/AdmTypeCode\u0026gt;\u0026lt;AdmTypeDesc\u0026gt;体检\u0026lt;/AdmTypeDesc\u0026gt;\u0026lt;FeeType\u0026gt;\u0026lt;/FeeType\u0026gt;\u0026lt;PatientWard\u0026gt;\u0026lt;/PatientWard\u0026gt;\u0026lt;BedNo\u0026gt;\u0026lt;/BedNo\u0026gt;\u0026lt;Diagnose\u0026gt;\u0026lt;/Diagnose\u0026gt;\u0026lt;RegisterNo\u0026gt;16009041\u0026lt;/RegisterNo\u0026gt;\u0026lt;PatientName\u0026gt;测试（童）\u0026lt;/PatientName\u0026gt;\u0026lt;SexCode\u0026gt;M\u0026lt;/SexCode\u0026gt;\u0026lt;SexDesc\u0026gt;男\u0026lt;/SexDesc\u0026gt;\u0026lt;DOB\u0026gt;1987-04-26\u0026lt;/DOB\u0026gt;\u0026lt;Age\u0026gt;29岁\u0026lt;/Age\u0026gt;\u0026lt;DocumentID\u0026gt;D16008409\u0026lt;/DocumentID\u0026gt;\u0026lt;PatientAddress\u0026gt;\u0026lt;/PatientAddress\u0026gt;\u0026lt;IdentityCardNo\u0026gt;\u0026lt;/IdentityCardNo\u0026gt;\u0026lt;Telephone\u0026gt;\u0026lt;/Telephone\u0026gt;\u0026lt;SpecUserCode\u0026gt;\u0026lt;/SpecUserCode\u0026gt;\u0026lt;StartDate\u0026gt;\u0026lt;/StartDate\u0026gt;\u0026lt;StartTime\u0026gt;\u0026lt;/StartTime\u0026gt;\u0026lt;SendFlag\u0026gt;NW\u0026lt;/SendFlag\u0026gt;\u0026lt;/OrderList\u0026gt;\u0026lt;/Orders\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; TSTART ;s retObj=##Class(UtilsController.LIS.UtilsControllerHttpSoap12Endpoint).%New() ;s Input=retObj.ReceiveLisOrdList(Labno) //20160818 yy ;s Input=$g(^TMPLISORDINFOS(\u0026#34;LisOrdInfos\u0026#34;,Labno)) s CurNamespace=$ZUTIL(5) s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() NEW $NAMESPACE s $NAMESPACE= WebNamespace s Input=##Class(LISAPP.LIS.BLL.DHCReceiveInterface).GetLabNoInfoSFHIS(\u0026#34;00000000613\u0026#34;,\u0026#34;0\u0026#34;,\u0026#34;dhcc\u0026#34;) s $NAMESPACE= CurNamespace b ;a101 i \u0026#39;$l(Input) q \u0026#34;-1^未查询到标本信息！\u0026#34; s repid=$i(^CacheTemp) k ^TMP($zn,$j) s RetValue=100 S UncheckInfo=\u0026#34;\u0026#34; //未核收医嘱信息 Set reader = ##class(%XML.Reader).%New() Do reader.OpenString(Input) Do reader.Correlate(\u0026#34;Request\u0026#34;,\u0026#34;LIS.Service.ENS.Data.RequestOrderMsg\u0026#34;) b ;a102 While (reader.Next(.obj,.sc)) { If ($SYSTEM.Status.IsOK(sc)) { s ResultCode=obj.ResultCode s ResultContent=obj.ResultContent i (ResultCode=0) { s objMldVis=##Class(LIS.Model.RPVisitNumber).%New() s Counts=+obj.Orders.Count() s (RegNo,AdmNo,AdmTypeCode,MedicalRecordNo,SpecimenTypeCode,AdmDate,AdmTime,PatName,SexCode)=\u0026#34;\u0026#34; s (DOB,Age,AppDeptCode,AppDeptDesc,DocCode,DocDesc,VerifyDate,VerifyTime,Diagnose)=\u0026#34;\u0026#34; s (Telephone,IdentityCardNo,PatientAddress,Note,ColDate,ColTime,SpecUserCode)=\u0026#34;\u0026#34; s err=\u0026#34;\u0026#34; f tmpi=1:1:Counts { s OrderList=obj.Orders.GetAt(tmpi) //s LabNo=OrderList.LabNo s ArcimCode=$tr(OrderList.ArcimCode,$c(0)) s TSPrice=$tr(OrderList.TSPrice,$c(0)) ///获取HISCode关联码医嘱 s TestSetDR=$o(^dbo.BTTestSetI(\u0026#34;IndexHISCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(ArcimCode),\u0026#34;\u0026#34;)) // ///获取医嘱代码关联 i \u0026#39;$l(TestSetDR) s TestSetDR=$o(^dbo.BTTestSetI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(ArcimCode),\u0026#34;\u0026#34;)) i \u0026#39;$l(TestSetDR) s err=\u0026#34;-1^检验医嘱对照错误：\u0026#34;_ArcimCode q ///判断医嘱是否核收 i $d(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno))){ s mVisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) s RowID=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,mVisitNumberDR,TestSetDR,\u0026#34;\u0026#34;)) i $l(RowID){ s WGMDR=$LG($g(^dbo.RPVisitNumberTestSetD(RowID)),5) I $L(WGMDR) continue } } ///核收判断医嘱是否本工作小组 i (RecFlag=\u0026#34;H\u0026#34;) { s Reterr=##Class(LIS.Service.ENS.TransReport).GetTSDefWGroupMiInfo(TestSetDR,WorkGroupMachineDR) i Reterr\u0026#39;=0 s UncheckInfo=Reterr_\u0026#34;,\u0026#34;_UncheckInfo continue } s ^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;,TestSetDR)=TSPrice //接收医嘱列表 //20160818 yy s OrderID=$tr(OrderList.OrdID,$c(0)) s SpecimenTypeCode=$tr(OrderList.SpecimenTypeCode,$c(0)) s RegNo=$tr(OrderList.RegisterNo,$c(0)) s AdmTypeCode=$tr(OrderList.AdmTypeCode,$c(0)) s AdmNo=$tr(OrderList.AdmNo,$c(0)) s MedicalRecordNo=$tr(OrderList.DocumentID,$c(0)) s AdmDate=$tr(OrderList.AdmDate,$c(0)) s AdmTime=$tr(OrderList.AdmTime,$c(0)) s PatName=$tr(OrderList.PatientName,$c(0)) s SexCode=$tr(OrderList.SexCode,$c(0)) i SexCode=\u0026#34;1\u0026#34; s SexCode=\u0026#34;M\u0026#34; i SexCode=\u0026#34;2\u0026#34; s SexCode=\u0026#34;F\u0026#34; s DOB=$tr(OrderList.DOB,$c(0)) s Age=$tr(OrderList.Age,$c(0)) s AppDeptCode=$tr(OrderList.AppDeptCode,$c(0)) s AppDeptDesc=$tr(OrderList.AppDeptDesc,$c(0)) s DocCode=$tr(OrderList.DocCode,$c(0)) s DocDesc=$tr(OrderList.DocDesc,$c(0)) s VerifyDate=$tr(OrderList.VerifyDate,$c(0)) s VerifyTime=$tr(OrderList.VerifyTime,$c(0)) s Diagnose=$tr(OrderList.Diagnose,$c(0)) s Telephone=$tr(OrderList.Telephone,$c(0)) s IdentityCardNo=$tr(OrderList.IdentityCardNo,$c(0)) s PatientAddress=$tr(OrderList.PatientAddress,$c(0)) s Note=$tr(OrderList.Note,$c(0)) s ColDate=$tr(OrderList.ColDate,$c(0)) s ColTime=$tr(OrderList.ColTime,$c(0)) s SpecUserCode=$tr(OrderList.SpecUserCode,$c(0)) s BedNo=$tr(OrderList.BedNo,$c(0)) } i $l(err),err\u0026#39;=0 s RetValue=err q I \u0026#39;$D(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;)),RecFlag=\u0026#34;C\u0026#34; s RetValue=\u0026#34;无可接收医嘱！\u0026#34; q I \u0026#39;$D(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;)),RecFlag=\u0026#34;H\u0026#34;,$l(UncheckInfo) s RetValue=\u0026#34;本工作小组无可核收医嘱,请送至\u0026#34;_UncheckInfo_\u0026#34;做检验\u0026#34; q I \u0026#39;$D(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;)),RecFlag=\u0026#34;H\u0026#34; s RetValue=\u0026#34;无可核收医嘱！\u0026#34; q s ^TMP(\u0026#34;YY\u0026#34;,\u0026#34;age\u0026#34;)=Age ///保存标本信息 i $d(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno))) d .s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) .s objVisitNumber=##class(dbo.RPVisitNumber).%OpenId(VisitNumberDR) e d .s objVisitNumber=##class(dbo.RPVisitNumber).%New() s objVisitNumber.VisitNumber=Labno s objVisitNumber.RegNo=$tr(RegNo,$c(0)) ///就诊类型 s AdmissionTypeDR=\u0026#34;\u0026#34; i \u0026#39;$l(AdmTypeCode) s AdmTypeCode=\u0026#34;P\u0026#34; //默认体检 i $l(AdmTypeCode) s AdmissionTypeDR=##Class(HIS.DHCReceiveProcess).GetAdmissionTypeDR(AdmTypeCode) s objVisitNumber.AdmissionTypeDR=AdmissionTypeDR s objVisitNumber.AdmNo=$tr(AdmNo,$c(0)) ;20160819 yy s objVisitNumber.MedicalRecordNo=$tr(MedicalRecordNo,$c(0)) i $L(AdmDate) s AdmDate=$tr(AdmDate,\u0026#34;-\u0026#34;) i $l(AdmTime) s AdmTime=$zth(AdmTime,3) s objVisitNumber.AdmDate=AdmDate s objVisitNumber.AdmTime=AdmTime //s objVisitNumber.CertTypeDR=$tr(obj.CertTypeDR,$c(0)) //s objVisitNumber.CertNo=$tr(obj.CertNo,$c(0)) s objVisitNumber.IDNumber=IdentityCardNo //s objVisitNumber.PaymentTypeDR=$tr(obj.PaymentTypeDR,$c(0)) s objVisitNumber.SurName=PatName s objVisitNumber.GivenName=PatName s SpeciesDR=$o(^dbo.BTSpeciesI(\u0026#34;IndexCode\u0026#34;,##Class(LIS.Util.Common).IndexData(SexCode),\u0026#34;\u0026#34;)) s objVisitNumber.SpeciesDR=SpeciesDR i $L(DOB) s DOB=$tr(DOB,\u0026#34;-\u0026#34;) //i $L(BirthTime) s BirthTime=$zth(BirthTime,3) s objVisitNumber.BirthDate=DOB s objVisitNumber.BirthTime=\u0026#34;\u0026#34; s AgeCode=\u0026#34;\u0026#34;,AgeUnitDR=\u0026#34;\u0026#34; i Age[\u0026#34;岁\u0026#34; s AgeCode=\u0026#34;Y\u0026#34; i Age[\u0026#34;月\u0026#34; s AgeCode=\u0026#34;M\u0026#34; i Age[\u0026#34;天\u0026#34; s AgeCode=\u0026#34;D\u0026#34; i Age[\u0026#34;时\u0026#34; s AgeCode=\u0026#34;H\u0026#34; i $l(AgeCode) s AgeUnitDR=##Class(HIS.DHCReceiveProcess).GetAgeUnitDR(AgeCode) s objVisitNumber.Age=+Age s objVisitNumber.AgeUnitDR=AgeUnitDR //s objVisitNumber.EthnicityDR=$tr(obj.EthnicityDR,$c(0)) s objVisitNumber.HospitalDR=RecHospitalDR s LocationDR=$o(^dbo.BTLocationI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(AppDeptCode),\u0026#34;\u0026#34;)) s LocationDR=\u0026#34;\u0026#34; i $l(AppDeptCode) d .i $d(^dbo.BTLocationI(\u0026#34;IndexHISCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(AppDeptCode))) d ..s LocationDR=$o(^dbo.BTLocationI(\u0026#34;IndexHISCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(AppDeptCode),\u0026#34;\u0026#34;)) .//没有配外部代码，考虑是否自动插入 .//i \u0026#39;$l(LocationDR) s LocationDR=##Class(HIS.DHCReceiveProcess).GetLocationDR(AppDeptCode,AppDeptCode,AppDeptDesc,RecHospitalDR) s objVisitNumber.LocationDR=LocationDR s DoctorDR=\u0026#34;\u0026#34; i $l(DocCode) d .i $d(^dbo.BTDoctorI(\u0026#34;IndexHISCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(DocCode))) d ..s DoctorDR=$o(^dbo.BTDoctorI(\u0026#34;IndexHISCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(DocCode),\u0026#34;\u0026#34;)) .//没有配外部代码，考虑是否自动插入 .//i \u0026#39;$l(DoctorDR) s DoctorDR=##Class(HIS.DHCReceiveProcess).GetDoctorDR(DocCode,DocDesc,RecHospitalDR) s objVisitNumber.DoctorDR=DoctorDR i $L(VerifyDate) s VerifyDate=$tr(VerifyDate,\u0026#34;-\u0026#34;) i $L(VerifyTime) s VerifyTime=$zth(VerifyTime,3) s objVisitNumber.RequestDate=VerifyDate s objVisitNumber.RequestTime=VerifyTime //s objVisitNumber.WardDR=$tr(obj.WardDR,$c(0)) //s objVisitNumber.BedNo=$tr(obj.BedNo,$c(0)) s objVisitNumber.Symptom=$tr(Diagnose,$c(0)) //s objVisitNumber.MobileNo=$tr(obj.MobileNo,$c(0)) s objVisitNumber.PhoneNo=$tr(Telephone,$c(0)) //s objVisitNumber.EMail=$tr(obj.EMail,$c(0)) //s objVisitNumber.Height=$tr(obj.Height,$c(0)) //s objVisitNumber.Weight=$tr(obj.Weight,$c(0)) //s objVisitNumber.BloodPressure=$tr(obj.BloodPressure,$c(0)) //s objVisitNumber.ClinicalConditionsDR=$tr(obj.ClinicalConditionsDR,$c(0)) //s objVisitNumber.LMPDate=$tr(obj.LMPDate,$c(0)) //s Preg=0 //i $zcvt($tr(obj.Pregnant,$c(0)),\u0026#34;U\u0026#34;)=\u0026#34;TRUE\u0026#34; s Preg=1 //s objVisitNumber.Pregnant=Preg //s objVisitNumber.PregnantWeeks=$tr(obj.PregnantWeeks,$c(0)) //s objVisitNumber.AboDR=$tr(obj.AboDR,$c(0)) //s objVisitNumber.RhDR=$tr(obj.RhDR,$c(0)) s objVisitNumber.Address=$tr(PatientAddress,$c(0)) //s objVisitNumber.PostCode=$tr(obj.PostCode,$c(0)) //s InfectFlag=$tr(obj.InfectFlag,$c(0)) //s Infect=0 //i $zcvt(InfectFlag,\u0026#34;U\u0026#34;)=\u0026#34;TRUE\u0026#34; s Infect=1 //s objVisitNumber.InfectFlag=Infect //s objVisitNumber.InfectAlert=$tr(obj.InfectAlert,$c(0)) //s SpecialFlag=obj.SpecialFlag //s Special=0 //i $zcvt(SpecialFlag,\u0026#34;U\u0026#34;)=\u0026#34;TRUE\u0026#34; s Special=1 //s objVisitNumber.SpecialFlag=Special //s objVisitNumber.PregnantNum=$tr(obj.PregnantNum,$c(0)) //s objVisitNumber.ChildbirthNum=$tr(obj.ChildbirthNum,$c(0)) //20160823 yy //s objVisitNumber.ReqNotes=$tr(Note,$c(0)) s objVisitNumber.ReqNotes=$tr(OrderID,$c(0)) s objVisitNumber.BedNo=$tr(BedNo,$c(0)) //s objVisitNumber.RequestNo=$tr(obj.RequestNo,$c(0)) //s Urgent=$tr(obj.Urgent,$c(0)) //s UrgentFlag=0 //i $zcvt(Urgent,\u0026#34;U\u0026#34;)=\u0026#34;TRUE\u0026#34; s UrgentFlag=1 //s objVisitNumber.Urgent=UrgentFlag i $L(ColDate) s ColDate=$tr(ColDate,\u0026#34;-\u0026#34;) i $l(ColTime),(ColTime[\u0026#34;:\u0026#34;) s ColTime=$zth(ColTime,3) s objVisitNumber.CollectDate=$tr(ColDate,$c(0)) s objVisitNumber.CollectTime=$tr(ColTime,$c(0)) //s objVisitNumber.CollectUserDR=$tr(obj.CollectUserDR,$c(0)) //s objVisitNumber.AnatomicalSiteDR=$tr(obj.AnatomicalSiteDR,$c(0)) //s objVisitNumber.CollectPositon=$tr(obj.CollectPositon,$c(0)) s SpecimenDR=$o(^dbo.BTSpecimenI(\u0026#34;IndexCode\u0026#34;,RecHospitalDR,##Class(LIS.Util.Common).IndexData(SpecimenTypeCode),\u0026#34;\u0026#34;)) s objVisitNumber.SpecimenDR=SpecimenDR s objVisitNumber.ContainerDR=\u0026#34;\u0026#34; s objVisitNumber.CollectNotes=\u0026#34;\u0026#34; s objVisitNumber.H24UVolume=\u0026#34;\u0026#34; s objVisitNumber.H24UTimePeriod=\u0026#34;\u0026#34; s objVisitNumber.BodyTemp=\u0026#34;\u0026#34; s objVisitNumber.Confidential=\u0026#34;\u0026#34; s objVisitNumber.CarryTime=\u0026#34;\u0026#34; s objVisitNumber.CarryUserDR=\u0026#34;\u0026#34; i (RecFlag=\u0026#34;C\u0026#34;) d ///集中接收 .s objVisitNumber.ReceiveDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) .s objVisitNumber.ReceiveTime=$p($h,\u0026#34;,\u0026#34;,2) .s objVisitNumber.ReceiveUserDR=UserDR .i $l(CarryUserDR),\u0026#39;$l(objVisitNumber.CarryUserDR) d ..s objVisitNumber.CarryDate = $tr($zd(+$h,3),\u0026#34;-\u0026#34;) ..s objVisitNumber.CarryTime = $p($h,\u0026#34;,\u0026#34;,2) ..s objVisitNumber.CarryUserDR = CarryUserDR .s objVisitNumber.ReceiveNotes=ReceiveNotes .s objVisitNumber.SpecimenQualityDR=$tr(SpecimenQualityDR,$c(0)) i (RecFlag=\u0026#34;H\u0026#34;) d ///标本核收 如果字段为空 .i $tr(objVisitNumber.ReceiveDate,$c(0))=\u0026#34;\u0026#34; s objVisitNumber.ReceiveDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) .i $tr(objVisitNumber.ReceiveTime,$c(0))=\u0026#34;\u0026#34; s objVisitNumber.ReceiveTime=$p($h,\u0026#34;,\u0026#34;,2) .i $tr(objVisitNumber.ReceiveUserDR,$c(0))=\u0026#34;\u0026#34; s objVisitNumber.ReceiveUserDR=UserDR s objVisitNumber.ReceiveHospitalDR=RecHospitalDR s objVisitNumber.InStorageTime=\u0026#34;\u0026#34; s objVisitNumber.InStorageUserDR=\u0026#34;\u0026#34; s objVisitNumber.OutStorageTime=\u0026#34;\u0026#34; s objVisitNumber.OutStorageUserDR=\u0026#34;\u0026#34; s objVisitNumber.OutStorageType=\u0026#34;\u0026#34; i (RecFlag\u0026#39;=\u0026#34;S\u0026#34;) d ///拒收保存不保存时间 .s AddDate=$tr(objVisitNumber.AddDate,$c(0)) .s AddTime=$tr(objVisitNumber.AddTime,$c(0)) .s AddUserDR=$tr(objVisitNumber.AddUserDR,$c(0)) .i \u0026#39;$l(AddDate) s AddDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) .i \u0026#39;$l(AddTime) s AddTime=$p($h,\u0026#34;,\u0026#34;,2) .i \u0026#39;$l(AddUserDR) s AddUserDR=UserDR .s objVisitNumber.AddDate=AddDate .s objVisitNumber.AddTime=AddTime .s objVisitNumber.AddUserDR=AddUserDR s objVisitNumber.AddType=\u0026#34;3\u0026#34; ///1条码,2手工,3第三方,4其它(拒收保存) ;s objVisitNumber.RequestNo=OrderID i RecFlag=\u0026#34;A\u0026#34; D .s ArriveDate=$tr(objVisitNumber.ArriveDate,$c(0)) .s ArriveTime=$tr(objVisitNumber.ArriveTime,$c(0)) .s ArriveUserDR=$tr(objVisitNumber.ArriveUserDR,$c(0)) .i \u0026#39;$l(ArriveDate) s ArriveDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) .i \u0026#39;$l(ArriveTime) s ArriveTime=$p($h,\u0026#34;,\u0026#34;,2) .i \u0026#39;$l(ArriveUserDR) s ArriveUserDR=UserDR .s objVisitNumber.ArriveWorkGroupDR=WorkGroupDR .s objVisitNumber.ArriveDate=ArriveDate .s objVisitNumber.ArriveTime=ArriveTime .s objVisitNumber.ArriveUserDR=ArriveUserDR s sc=objVisitNumber.%Save() ;RecFlag=\u0026#34;H\u0026#34; If ($SYSTEM.Status.IsOK(sc)) { s RetValue=0 s VisitNumberDR=objVisitNumber.RowID } Else { s RetValue=\u0026#34;-1^标本信息保存失败:\u0026#34;_$SYSTEM.Status.GetErrorText(sc) } ;RetValue i RetValue\u0026#39;=0 q s err=\u0026#34;\u0026#34; s IsReceived=1 s TestSetDR=\u0026#34;\u0026#34; f { s TestSetDR=$o(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; s TestSetFee=+$g(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;,TestSetDR)) s RowID=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR,\u0026#34;\u0026#34;)) i $l(RowID){ s objTestSets=##class(dbo.RPVisitNumberTestSet).%OpenId(RowID) } else { s objTestSets=##class(dbo.RPVisitNumberTestSet).%New() } i objTestSets.Recieved\u0026#39;=1 s IsReceived=0 s objTestSets.VisitNumberDR=VisitNumberDR s objTestSets.TestSetDR=TestSetDR s objTestSets.Recieved=1 i \u0026#39;$l(AssayNo),$l(WorkGroupMachineDR) { s CommDirection=$lg(^dbo.BTWorkGroupMachineD(WorkGroupMachineDR),11) i CommDirection=\u0026#34;UP\u0026#34; s AssayNo=Labno i CommDirection=\u0026#34;BI\u0026#34; s AssayNo=Labno } if RecFlag=\u0026#34;H\u0026#34; { s objTestSets.WorkGroupMachineDR=WorkGroupMachineDR s objTestSets.TransmitDate=TransmitDate i \u0026#39;$l(AssayNo) s AssayNo=EpisodeNo i \u0026#39;$l(AssayNo) s AssayNo=Labno s objTestSets.AssayNo=AssayNo } s objTestSets.TestSetFee=TestSetFee s objTestSets.HISOrderID=\u0026#34;\u0026#34; s objTestSets.Sequence=1 s sc=objTestSets.%Save() If ($SYSTEM.Status.IsOK(sc)) { s RetValue=0 //更新上传记录 s ret=##Class(MI.MachineUpload).Upload(Labno,TestSetDR,WorkGroupMachineDR) } Else {s err=$SYSTEM.Status.GetErrorText(sc)} } //3 i RecFlag=\u0026#34;C\u0026#34;,IsReceived=1 s RetValue=\u0026#34;-1^标本已接收\u0026#34; q i $l(err) s RetValue=\u0026#34;-1^检验医嘱保存失败:\u0026#34;_err q ///报告核收 i (RecFlag=\u0026#34;H\u0026#34;){ s objVisitNumberReport=##class(dbo.RPVisitNumberReport).%New() s objVisitNumberReport.VisitNumberDR=VisitNumberDR s objVisitNumberReport.TransmitDate=TransmitDate s objVisitNumberReport.WorkGroupMachineDR=WorkGroupMachineDR s objVisitNumberReport.OrderNo=1 i \u0026#39;$l(AssayNo) s AssayNo=EpisodeNo i \u0026#39;$l(AssayNo) s AssayNo=Labno s objVisitNumberReport.AssayNo=AssayNo s objVisitNumberReport.AccessionNo=\u0026#34;\u0026#34; ///细菌分离号 s objVisitNumberReport.EpisodeNo=EpisodeNo s objVisitNumberReport.AcceptDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s objVisitNumberReport.AcceptTime=$p($h,\u0026#34;,\u0026#34;,2) s objVisitNumberReport.AcceptUserDR=UserDR s objVisitNumberReport.Status=1 //报告状态(1登记，2初审，3审核，4复查，5取消审核，6作废，O其他) s objVisitNumberReport.RackNo=RackNo s ret=objVisitNumberReport.%Save() If ($SYSTEM.Status.IsOK(ret)) {s RetValue=0} Else {s err=\u0026#34;标本信息核收失败:\u0026#34;_$SYSTEM.Status.GetErrorText(ret) Quit} s TestSetDR=\u0026#34;\u0026#34; f { s TestSetDR=$o(^TMP($zn,$j,repid,\u0026#34;RecTS\u0026#34;,TestSetDR)) //本次核收医嘱 q:TestSetDR=\u0026#34;\u0026#34; s RowID=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR,\u0026#34;\u0026#34;)) i $l(RowID){ s objTestSets=##class(dbo.RPVisitNumberTestSet).%OpenId(RowID) s objTestSets.VisitNumberReportDR=objVisitNumberReport.RowID s sc=objTestSets.%Save() If (\u0026#39;$SYSTEM.Status.IsOK(sc)) { s err=$SYSTEM.Status.GetErrorText(sc) q } } //按医嘱生成报告项目结果 s retVal=##Class(LISSP.DHCRPVisitNumberReport).SaveReportTestCode(objVisitNumberReport.RowID,TestSetDR) i retVal\u0026#39;=1 s err=retVal q } i $l(err) s RetValue=\u0026#34;-1^检验医嘱保存失败:\u0026#34;_err q //更新工作小组流水号 s CurDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) i $l(WorkGroupMachineDR),$l(EpisodeNo) s ret=##Class(HIS.DHCCommon).SaveWorkGroupMachineEpis(WorkGroupMachineDR,CurDate,EpisodeNo) i ret\u0026#39;=1,err=\u0026#34;更新工作小组流水号失败:\u0026#34;_ret Quit } i $l(err) s RetValue=\u0026#34;-1^\u0026#34;_err q ///插入标本核收操作记录 s (OperateDate,OperateTime,OperateTypeCode,OperateNotes,RejectTypeDR)=\u0026#34;\u0026#34; s OperateNotes=ReceiveNotes i (RecFlag=\u0026#34;A\u0026#34;) s OperateTypeCode=30 //送达 i (RecFlag=\u0026#34;S\u0026#34;) s OperateTypeCode=31 ///保存 i (RecFlag=\u0026#34;C\u0026#34;) s OperateTypeCode=4,OperateNotes=OperIP ///接收 i (RecFlag=\u0026#34;H\u0026#34;) s OperateTypeCode=5,OperateNotes=OperIP ///核收 s ret=##Class(HIS.DHCCommon).SaveRecord(VisitNumberDR,OperateDate, OperateTime, UserDR, OperateNotes, OperateTypeCode, WorkGroupMachineDR, RejectTypeDR,WorkGroupDR,OperIP) i ret\u0026#39;=1 s RetValue=\u0026#34;标本操作记录保存失败:\u0026#34;_ret q } } Else { Quit } } If $system.Status.IsError(sc) TROLLBACK q \u0026#34;-1^参数错误：\u0026#34;_$system.Status.IsError(sc) If RetValue\u0026#39;=0 TROLLBACK q RetValue TCOMMIT i $l(UncheckInfo) s RetValue=RetValue_\u0026#34;UncheckInfo\u0026#34;_UncheckInfo b ;RetValue Q RetValue ErrorHandle TROLLBACK s RetValue=\u0026#34;-1^错误\u0026#34;_$tr($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE Quit RetValue } ClassMethod GetTSDefWGroupMi(TestSetDR, WorkGroupMachineDR) As %String { s defWGMachineDR=$lg(^dbo.BTTestSetD(TestSetDR),13) i $l(defWGMachineDR),defWGMachineDR=WorkGroupMachineDR s RecTSDR=TestSetDR q 0 s WorkGroupMachineFlag=100 s tsWGMachineDR=\u0026#34;\u0026#34; f s tsWGMachineDR=$o(^dbo.BTTestSetWorkGroupMachineI(\u0026#34;IndexMaster\u0026#34;,TestSetDR,tsWGMachineDR)) q:tsWGMachineDR=\u0026#34;\u0026#34; d .i WorkGroupMachineDR=tsWGMachineDR s WorkGroupMachineFlag=0 .s defWGMachineDR=tsWGMachineDR i WorkGroupMachineFlag=100 d .s TSName=$lg($g(^dbo.BTTestSetD(TestSetDR)),3),WorGPMIName=\u0026#34;\u0026#34; .i $l(defWGMachineDR) s WorGPMIName=$lg($g(^dbo.BTWorkGroupMachineD(defWGMachineDR)),3) .s WorkGroupMachineFlag=\u0026#34;-1^该标本为:[ \u0026#34;_WorGPMIName_\u0026#34; ]的[ \u0026#34;_TSName_\u0026#34; ]检验,请送到\u0026#34;_WorGPMIName_\u0026#34;做相关检验!\u0026#34; q WorkGroupMachineFlag } ClassMethod GetTSDefWGroupMiInfo(TestSetDR, WorkGroupMachineDR) As %String { s defWGMachineDR=$lg(^dbo.BTTestSetD(TestSetDR),13) i $l(defWGMachineDR),defWGMachineDR=WorkGroupMachineDR s RecTSDR=TestSetDR q 0 s WorkGroupMachineFlag=100 s tsWGMachineDR=\u0026#34;\u0026#34; f s tsWGMachineDR=$o(^dbo.BTTestSetWorkGroupMachineI(\u0026#34;IndexMaster\u0026#34;,TestSetDR,tsWGMachineDR)) q:tsWGMachineDR=\u0026#34;\u0026#34; d .i WorkGroupMachineDR=tsWGMachineDR s WorkGroupMachineFlag=0 .i \u0026#39;$l(defWGMachineDR) s defWGMachineDR=tsWGMachineDR\t//YHR 20240408 如果没有默认工作小组，则设置医嘱所在的工作小组 i WorkGroupMachineFlag=100 d .s TSName=$lg($g(^dbo.BTTestSetD(TestSetDR)),3),WorGPMIName=\u0026#34;\u0026#34; .i $l(defWGMachineDR) s WorGPMIName=$lg($g(^dbo.BTWorkGroupMachineD(defWGMachineDR)),3) .s WorkGroupMachineFlag=\u0026#34;【\u0026#34;_WorGPMIName_\u0026#34; 】的[ \u0026#34;_TSName_\u0026#34; ]\u0026#34; q WorkGroupMachineFlag } /// Creator： liuzf /// CreateDate： 2016-08-08 /// Description： 发送接收标本信息 /// Table： 无 /// Input： Labno:检验号 /// Output： 无 /// Return： 错误信息 /// Others： 无 /// w ##Class(LIS.Service.ENS.TransReport).AcceptSample(\u0026#34;**4868149*\u0026#34;) //T1400472||R006||1 ClassMethod AcceptSample(Labno As %String) As %String { S Labno=$g(Labno) //获取第一个报告ID,基本信息以第一个报告为准 S error=\u0026#34;报告ID错误:\u0026#34;_Labno s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q error s VisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) b ;0003 s recdate=$lg(VisitNumberData,66) ;接收日期 s rectime=$lg(VisitNumberData,67) ;接收时间 i $l(recdate) s recdate=##Class(LIS.Util.Common).FormatDate(recdate) i $l(rectime) s rectime=##Class(LIS.Util.Common).FormatTime(rectime) s ReceiveUserDR=$lg(VisitNumberData,68),recusr=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s recusr=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),2)_\u0026#34;@\u0026#34;_$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) S peID=$lg(VisitNumberData,3) ;登记号 i \u0026#39;$l(peID) s peID=$lg(VisitNumberData,6) s requestNo=$lg(VisitNumberData,48) S xml=\u0026#34;\u0026#34; ;S xml=xml_\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026#34; ;S xml=xml_\u0026#34;\u0026lt;Body\u0026gt;\u0026lt;SpecimenReceiveRt\u0026gt;\u0026lt;OrderItemIDs\u0026gt;\u0026#34; S xml=xml_\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026#34; S xml=xml_\u0026#34;\u0026lt;SpecimenReceiveRt\u0026gt;\u0026lt;OrderItemIDs\u0026gt;\u0026#34; S orderID=requestNo b ;requestNo S xml=xml_\u0026#34;\u0026lt;OrderItemID\u0026gt;\u0026#34;_orderID_\u0026#34;\u0026lt;/OrderItemID\u0026gt;\u0026#34; S xml=xml_\u0026#34;\u0026lt;/OrderItemIDs\u0026gt;\u0026#34; S xml=xml_\u0026#34;\u0026lt;SpecimenID\u0026gt;\u0026#34;_Labno_\u0026#34;\u0026lt;/SpecimenID\u0026gt;\u0026#34; S xml=xml_\u0026#34;\u0026lt;ExecUserCode\u0026gt;\u0026#34;_recusr_\u0026#34;\u0026lt;/ExecUserCode\u0026gt;\u0026#34; S xml=xml_\u0026#34;\u0026lt;SpeciReceiveDate\u0026gt;\u0026#34;_recdate_\u0026#34;\u0026lt;/SpeciReceiveDate\u0026gt;\u0026#34; S xml=xml_\u0026#34;\u0026lt;SpeciReceiveTime\u0026gt;\u0026#34;_rectime_\u0026#34;\u0026lt;/SpeciReceiveTime\u0026gt;\u0026#34; s xml=xml_\u0026#34;\u0026lt;/SpecimenReceiveRt\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; ;s xml=xml_\u0026#34;\u0026lt;/SpecimenReceiveRt\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; S ^TMPENSREPORT(\u0026#34;AC\u0026#34;,Labno)=xml b ;003 s $NameSpace=\u0026#34;DHC-APP\u0026#34; ;S return=##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;S00000044\u0026#34;,xml) i $e(return)=0 s return=$p(return,\u0026#34;^\u0026#34;) ;S return=##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;W00000009\u0026#34;,xml) s $NameSpace=\u0026#34;DHC-LISDATA\u0026#34; ;S ws=##Class(LIS.Service.ENS.WS.WebService).%New() ;S return=ws.SendCheckUp(xml) Q return } /// Creator： wwh /// CreateDate： 2014-06-17 /// Description： 发送拒收标本信息 /// Table： 无 /// Input： reportIDs:报告ID /// Output： 无 /// Return： 错误信息 /// Others： 无 /// ##Class(LIS.Service.ENS.Report).RejectSample(labno,rejUserID,rejDate,rejTime,rejReason) ClassMethod RejectSample(Labno As %String, rejUserID As %String, rejDate As %String, rejTime As %String, rejReason As %String) As %String { S Labno=$G(Labno) S error=\u0026#34;检验号为空\u0026#34; s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q error s VisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) S peID=$lg(VisitNumberData,3) ;登记号 i \u0026#39;$l(peID) s peID=$lg(VisitNumberData,6) //20160818 yy s requestNo=$lg(VisitNumberData,48) S xml=\u0026#34;\u0026#34; S xml=xml_\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026#34; s xml=xml_\u0026#34;\u0026lt;Body\u0026gt;\u0026#34; s xml=xml_\u0026#34;\u0026lt;SpecimenRejectRt\u0026gt;\u0026#34; s xml=xml_\u0026#34;\u0026lt;SpecimenID\u0026gt;\u0026#34;_Labno_\u0026#34;\u0026lt;/SpecimenID\u0026gt;\u0026#34; s xml=xml_\u0026#34;\u0026lt;OrderItemIDs\u0026gt;\u0026#34; f i=1:1:$l(requestNo,\u0026#34;^\u0026#34;)-1 d .s orderID=$p(requestNo,\u0026#34;^\u0026#34;,i) .s xml=xml_\u0026#34;\u0026lt;OrderItemID\u0026gt;\u0026#34;_orderID_\u0026#34;\u0026lt;/OrderItemID\u0026gt;\u0026#34; s xml=xml_\u0026#34;\u0026lt;RefuseReason\u0026gt;\u0026#34;_rejReason_\u0026#34;\u0026lt;/RefuseReason\u0026gt;\u0026#34; s xml=xml_\u0026#34;\u0026lt;ExecUserCode\u0026gt;\u0026#34;_rejUserID_\u0026#34;\u0026lt;/ExecUserCode\u0026gt;\u0026#34; s xml=xml_\u0026#34;\u0026lt;RefuseDate\u0026gt;\u0026#34;_rejDate_\u0026#34;\u0026lt;/RefuseDate\u0026gt;\u0026#34; s xml=xml_\u0026#34;\u0026lt;RefuseTime\u0026gt;\u0026#34;_rejTime_\u0026#34;\u0026lt;/RefuseTime\u0026gt;\u0026#34; s xml=xml_\u0026#34;\u0026lt;/SpecimenRejectRt\u0026gt;\u0026#34; s xml=xml_\u0026#34;\u0026lt;/Body\u0026gt;\u0026#34; s xml=xml_\u0026#34;\u0026lt;/Request\u0026gt;\u0026#34; S ^TMPENSREPORT(\u0026#34;RE\u0026#34;,labno)=xml s $NameSpace=\u0026#34;DHC-APP\u0026#34; S return=##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;S00000045\u0026#34;,xml) i $e(return)=0 s return=$p(return,\u0026#34;^\u0026#34;) ;S ws=##Class(LIS.Service.ENS.WS.WebService).%New() ;S return=ws.SendRefuse(xml) s $NameSpace=\u0026#34;DHC-LISDATA\u0026#34; Q return } /// d ##Class(LIS.Service.ENS.TransReport).PutReportResult(\u0026#34;60\u0026#34;) /// d ##Class(LIS.Service.ENS.TransReport).PutReportResult(\u0026#34;206\u0026#34;) /// 回传体检报告信息 ClassMethod PutReportResult(ReportDR) { s CurNamespace=$ZUTIL(5) s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() s Input=##Class(LIS.Service.ENS.TransReport).GetReport(ReportDR,\u0026#34;\u0026#34;) b ;Input i \u0026#39;$l(Input) q \u0026#34;-1^未查询到标本信息！\u0026#34; NEW $NAMESPACE s $NAMESPACE= WebNamespace s stream=##class(%GlobalCharacterStream).%New() d stream.Write(Input) s Param=##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;S00000004\u0026#34;,stream) b ;Param s $NAMESPACE= CurNamespace q } /// Creator： liuzf /// CreateDate： 2016-04-27 /// Description： 发送标本结果到体检 /// Table： 无 /// Input： 检验号 /// Output： 无 /// Return： 错误信息 /// Others： 无 /// w ##Class(LIS.Service.ENS.TransReport).GetReport(\u0026#34;206\u0026#34;,\u0026#34;\u0026#34;) ClassMethod GetReport(ReportDR As %String, ByRef error As %String) As %String { s ReportDR=$g(ReportDR) //Set $ZTrap = \u0026#34;ErrorHandle\u0026#34; //基本信息 s ^TMP(\u0026#34;YY\u0026#34;,\u0026#34;ReportDR\u0026#34;)=ReportDR s RetStr=\u0026#34;\u0026#34; i \u0026#39;$l(ReportDR) q $$ReturnOut(\u0026#34;无此报告\u0026#34;) i \u0026#39;$l(ReportDR) q $$ReturnOut(\u0026#34;无此报告\u0026#34;) s ReportData=$g(^dbo.RPVisitNumberReportD(ReportDR)) i $lg(ReportData,22)\u0026#39;=3 q $$ReturnOut(\u0026#34;报告未审核\u0026#34;) s VisitNumberDR=$lg(ReportData,2) i \u0026#39;$l(VisitNumberDR) q $$ReturnOut(\u0026#34;无此报告\u0026#34;) s VisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LabNo=$lg(VisitNumberData,2) s gName=$lg(VisitNumberData,14) s sName=$lg(VisitNumberData,13) s patname=gName_\u0026#34; \u0026#34;_sName i gName=sName s patname=gName s spname=\u0026#34;\u0026#34; ;性别 s SpeciesDR=$lg(VisitNumberData,15) i $l(SpeciesDR) s spname=$lg(^dbo.BTSpeciesD(SpeciesDR),3) s patDOB=$lg(VisitNumberData,16) i (patDOB\u0026lt;10000000) s patDOB=$zd(patDOB,8) i $l(patDOB) s patDOB=##Class(LIS.Util.Common).FormatDate(patDOB) s Age=$lg(VisitNumberData,18) s AgeUnitDR=$lg(VisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s patage=Age_AgeUnit // s SpecimenDR=$lg(VisitNumberData,56),specmen=\u0026#34;\u0026#34; ;标本类型 i $l(SpecimenDR) s specmen=$lg($g(^dbo.BTSpecimenD(SpecimenDR)),3) s tsname=\u0026#34;\u0026#34;,TSCode=\u0026#34;\u0026#34; s TestSetDR=\u0026#34;\u0026#34; f s TestSetDR=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; d .i $l(tsname) s tsname=tsname_\u0026#34;+\u0026#34;_$lg(^dbo.BTTestSetD(TestSetDR),3),TSCode=TSCode_\u0026#34;+\u0026#34;_$lg(^dbo.BTTestSetD(TestSetDR),2) .e s tsname=$lg(^dbo.BTTestSetD(TestSetDR),3),TSCode=$lg(^dbo.BTTestSetD(TestSetDR),2) i $l(specmen,\u0026#34;(\u0026#34;)\u0026gt;1 s specmen=$p(specmen,\u0026#34;(\u0026#34;,1) // s patloc=\u0026#34;\u0026#34; ;科室 s LocationDR=$lg(VisitNumberData,22) i $l(LocationDR) s patloc=$lg($g(^dbo.BTLocationD(LocationDR)),3) //申请日期 s requestdate=$lg(VisitNumberData,24) i (requestdate\u0026lt;10000000) s requestdate=$zd(requestdate,8) i $l(requestdate) s requestdate=##Class(LIS.Util.Common).FormatDate(requestdate) // s (recdate,rectime,recusr,entrydate,entrytime,entryusr,authdate,authtime,authusr)=\u0026#34;\u0026#34; s recdate=$lg(VisitNumberData,66) ;接收日期 s rectime=$lg(VisitNumberData,67) ;接收时间 i $l(recdate) s recdate=##Class(LIS.Util.Common).FormatDate(recdate) i $l(rectime) s rectime=##Class(LIS.Util.Common).FormatTime(rectime) s ReceiveUserDR=$lg(VisitNumberData,68) i $l(ReceiveUserDR) s recusr=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s entrydate=$lg(ReportData,16) ;初审日期 s entrytime=$lg(ReportData,17) ;初审时间 i $l(entrydate) s entrydate=##Class(LIS.Util.Common).FormatDate(entrydate) i $l(entrytime) s entrytime=##Class(LIS.Util.Common).FormatTime(entrytime) s EntryUserDR=$lg(ReportData,18) i $l(EntryUserDR) s entryusr=$lg($g(^dbo.SYSUserD(EntryUserDR)),3) s authdate=$lg(ReportData,19) ;核收日期 s authtime=$lg(ReportData,20) ;核收时间 i $l(authdate) s authdate=##Class(LIS.Util.Common).FormatDate(authdate) i $l(authtime) s authtime=##Class(LIS.Util.Common).FormatTime(authtime) s AuthUserDR=$lg(ReportData,21) i $l(AuthUserDR) s authusr=$lg($g(^dbo.SYSUserD(AuthUserDR)),3) // s coldate=$lg(VisitNumberData,51) ;采集日期 s coltime=$lg(VisitNumberData,52) ;采集时间 i $l(coldate) s coldate=##Class(LIS.Util.Common).FormatDate(coldate) i $l(coltime) s coltime=##Class(LIS.Util.Common).FormatTime(coltime) s CollDT=\u0026#34;\u0026#34; i $l(coldate) s CollDT=coldate_\u0026#34; \u0026#34;_coltime // s (recDT,entryDT,authDT)=\u0026#34;\u0026#34; i $l(recdate) s recDT=recdate_\u0026#34; \u0026#34;_rectime i $l(entrydate) s entryDT=entrydate_\u0026#34; \u0026#34;_entrytime i $l(authdate) s authDT=authdate_\u0026#34; \u0026#34;_authtime // s debtor=$lg(VisitNumberData,3) ;登记号 s DoctorDR=$lg(VisitNumberData,23) s docname=\u0026#34;\u0026#34; ;医生 i $l(DoctorDR) s docname=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) //诊断 s patdiag=\u0026#34;\u0026#34; s DiseaseDR=\u0026#34;\u0026#34; f s DiseaseDR=$o(^dbo.RPVisitNumberDiagnoseI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,DiseaseDR)) q:DiseaseDR=\u0026#34;\u0026#34; d .i $l(patdiag) s patdiag=patdiag_\u0026#34;+\u0026#34;_$lg(^dbo.BTDiseaseD(DiseaseDR),4) .e s patdiag=$lg(^dbo.BTDiseaseD(DiseaseDR),4) //仪器,病区,床号,流水号 s Machine=\u0026#34;\u0026#34; //s MachineDR=$lg(ResultData,14) //i $l(MachineDR) s Machine=$lg($g(^dbo.BTMIMachineParameterD(MachineDR)),3) s bed=$lg(VisitNumberData,27) ;床号 s WardName=\u0026#34;\u0026#34; s WardDR=$lg(VisitNumberData,26) i $l(WardDR) s WardName=$lg($g(^dbo.BTWardD(WardDR)),3) s episode=$lg(ReportData,8) //检验科-门诊检验组\\Lab Manager#84322268 s Depart=\u0026#34;\u0026#34; s WorkGroupMachineDR=$lg(ReportData,4) i $l(WorkGroupMachineDR) s WorkGroupDR=$lg($g(^dbo.BTWorkGroupMachineD(WorkGroupMachineDR)),4) i $l(WorkGroupDR) s DepartPhone=$lg($g(^dbo.BTWorkGroupD(WorkGroupDR)),6) // 20141114 s AdmID=$lg(VisitNumberData,6) s AdmNo=$lg(VisitNumberData,5) s Notes=$lg(VisitNumberData,48) s requestNo=$p($lg(VisitNumberData,48),\u0026#34;^\u0026#34;) s PDFFileDR=$o(^dbo.RPVisitNumberReportFileI(\u0026#34;IndexMater\u0026#34;,ReportDR,\u0026#34;\u0026#34;)),PDFFile=\u0026#34;\u0026#34; i $l(PDFFileDR) s PDFFile=$lg($g(^dbo.RPVisitNumberReportFileD(PDFFileDR)),6)\t//YHR 20240409 回传PDF链接 S obj=##Class(LIS.Service.ENS.Data.ReportMsg).%New() s obj.OrdID=requestNo s obj.LabNo=LabNo s obj.ReportID=ReportDR ///报告ID s obj.ReportUrl=\u0026#34;\u0026#34; //报告地址 s obj.RecUser=recusr //接收者 s obj.RecUserCode=ReceiveUserDR //接收者代码 s obj.RecDate=recdate //接收日期 s obj.RecTime=rectime //接收时间 s obj.EntryUser=entryusr //录入者 s obj.EntryUserCode=EntryUserDR //录入者代码 s obj.EntryDate=entrydate //录入日期 s obj.EntryTime=entrytime //录入时间 s obj.AuthUser=authusr //审核者 s obj.AuthUserCode=AuthUserDR //审核者代码 s obj.AuthDate=authdate //审核日期 s obj.AuthTime=authtime //审核时间 s obj.Notes=Notes //报告备注 s obj.ImageFile=\u0026#34;\u0026#34; //图像的路径（多幅图使用@分割） s obj.MainWarnDesc=\u0026#34;\u0026#34; //危急值说明 s obj.PDFFile=PDFFile //结果 Set result = ##class(%ResultSet).%New(\u0026#34;LIS.Service.ENS.Business.ReportResult:QryTestSetResult\u0026#34;) Set sc = result.Execute(ReportDR) While (result.Next(.sc)) // go to the next row of the result set { If ($SYSTEM.Status.IsOK(sc)) // check if this succeeded without errors { s objRes=##Class(LIS.Service.ENS.Data.ResultMsg).%New() s objRes.LabNo=LabNo s objRes.TestSetCode=result.Data(\u0026#34;TestSetCode\u0026#34;) s objRes.TestCode=result.Data(\u0026#34;TestCode\u0026#34;) s objRes.TestName=result.Data(\u0026#34;TestName\u0026#34;) s objRes.TestEngName=result.Data(\u0026#34;TestSync\u0026#34;) s objRes.Result=result.Data(\u0026#34;Result\u0026#34;) s ResFlag=result.Data(\u0026#34;ResFlag\u0026#34;) i \u0026#39;$l(ResFlag) s ResFlag=\u0026#34;N\u0026#34; s objRes.ResultFlag=ResFlag s objRes.Units=result.Data(\u0026#34;Unit\u0026#34;) s Ranges=result.Data(\u0026#34;Ranges\u0026#34;) i \u0026#39;$l(Ranges) s Ranges=\u0026#34; \u0026#34; s objRes.Ranges=Ranges s MICFlag=result.Data(\u0026#34;MICFlag\u0026#34;) //whf add 2016-8-29 i MICFlag=\u0026#34;Y\u0026#34; { s objRes.MICFlag=\u0026#34;Y\u0026#34; s objRes.Result=result.Data(\u0026#34;OrganismCode\u0026#34;) s objRes.MICName=result.Data(\u0026#34;OrganismDesc\u0026#34;) } // s objRes.Sequence=result.Data(\u0026#34;Sequence\u0026#34;) //显示顺序 20141114 huhm ///细菌结果ID s SenResultId=result.Data(\u0026#34;SenResultId\u0026#34;) i $l(SenResultId) { s sen=##class(%ResultSet).%New(\u0026#34;LIS.Service.ENS.Business.ReportResult:QryTestSetResultSen\u0026#34;) Set st = sen.Execute(SenResultId) While (sen.Next(.st)) { If ($SYSTEM.Status.IsOK(st)) { //WCode,AntCode,AntName,SenCode,SenName,SenMethod,SenValue s objSen=##Class(LIS.Service.ENS.Data.OrgResultMsg).%New() s objSen.BugsCode=result.Data(\u0026#34;OrganismCode\u0026#34;) s objSen.AntiCode=sen.Data(\u0026#34;AntCode\u0026#34;) s objSen.AntiName=sen.Data(\u0026#34;AntName\u0026#34;) s objSen.Result=sen.Data(\u0026#34;SenName\u0026#34;) s objSen.KBRes=sen.Data(\u0026#34;SenMethod\u0026#34;) s objSen.MICRes=sen.Data(\u0026#34;SenValue\u0026#34;) s objSen.Order=sen.Data(\u0026#34;Order\u0026#34;) d objRes.OrgResultMsgs.Insert(objSen) // } } } d obj.ResultMsgs.Insert(objRes) } } s Input=\u0026#34;\u0026#34; //d obj.XMLExportToStream(.Input) //Set objStream=##class(%GlobalCharacterStream).%New() // d objStream.Write(\u0026#34;\u0026lt;ReportData\u0026gt;\u0026#34;) d obj.XMLExportToString(.Input) ;s retObj=##Class(UtilsController.LIS.UtilsControllerHttpSoap12Endpoint).%New() ;s Input=retObj.ReportMsg(Input) ;s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;NFYY\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;医院信息平台\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026#34;_Input_\u0026#34;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; s Input=\u0026#34;\u0026lt;Response\u0026gt;\u0026#34;_Input_\u0026#34;\u0026lt;/Response\u0026gt;\u0026#34; Set objStream=##class(%GlobalCharacterStream).%New() d objStream.Write(Input) s ^TMP(\u0026#34;Au\u0026#34;,LabNo)=Input ;s $NameSpace=\u0026#34;DHC-APP\u0026#34; ;s Input=##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;S00000046\u0026#34;,objStream) ;s $NameSpace=\u0026#34;DHC-LISDATA\u0026#34; s ^TMP(\u0026#34;AuReport\u0026#34;,LabNo)=Input q Input ErrorHandle s err=$tr(\u0026#34;查询异常.错误\u0026#34;_$tr($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;\u0026lt;\u0026gt;\u0026#34;) Quit $$ReturnOut(err) ReturnOut(err) //Set objStream=##class(%GlobalCharacterStream).%New() //d objStream.Write(\u0026#34;\u0026lt;ReportData\u0026gt;\u0026#34;) //d objStream.Write(\u0026#34;\u0026lt;ReturnValue\u0026gt;-1^\u0026#34;_err_\u0026#34;\u0026lt;/ReturnValue\u0026gt;\u0026#34;) //Do objStream.Write(\u0026#34;\u0026lt;/ReportData\u0026gt;\u0026#34;) q \u0026#34;-1^\u0026#34;_err } /// Creator： zlz /// CreatDate： 2020122 /// Description： 通过条码号得到标本信息 /// Input： 工作小组 /// Output： 医嘱信息 Query QryVisitNumberInfoByLabNo(LabNo, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Query(ROWSPEC = \u0026#34;VisitNumberDR,RegNo,AdmissionTypeDR,AdmissionType,AdmNo,MedicalRecordNo,AdmDate,AdmTime,CertTypeDR,CertType,CertNo,IDNumber,PaymentTypeDR,PaymentType,SurName,GivenName,SpeciesDR,BirthDate,BirthTime,Age,AgeUnitDR,AgeUnit,EthnicityDR,Ethnicity,HospitalDR,Hospital,LocationDR,Location,DoctorDR,Doctor,RequestDate,RequestTime,WardDR,Ward,BedNo,Symptom,MobileNo,PhoneNo,EMail,Height,Weight,BloodPressure,ClinicalConditionsDR,LMPDate,Pregnant,PregnantWeeks,AboDR,Abo,RhDR,Rh,Address,PostCode,InfectFlag,InfectAlert,SpecialFlag,PregnantNum,ChildbirthNum,ReqNotes,RequestNo,Urgent,CollectDate,CollectTime,CollectUserDR,CollectUser,AnatomicalSiteDR,AnatomicalSite,CollectPositon,SpecimenDR,Specimen,ContainerDR,Container,CollectNotes,H24UVolume,H24UTimePeriod,BodyTemp,Confidential,CarryDate,CarryTime,CarryUserDR,CarryUser,ReceiveDate,ReceiveTime,ReceiveUserDR,ReceiveUser,SpecimenQualityDR,SpecimenQuality,ReceiveNotes,InStorageDate,InStorageTime,InStorageUserDR,InStorageUser,OutStorageDate,OutStorageTime,OutStorageUserDR,OutStorageUser,OutStorageType,ReceiveHospitalDR,ReceiveHospital,AddDate,AddTime,AddUserDR,AddUser,FeeSum,AddType,AgeDesc,ArriveDate,ArriveTime,ArriveUserDR,ArriveUser,RUDiseaseDR,RUDisease,ArriveWorkGroupDR,ArriveWorkGroup,ConcessionFlag,ICDs,IsPrintBar,LinkLabNo,TestSetCode,HISOrderID\u0026#34;) { } /// Query的执行方法 /// d ##class(%ResultSet).RunQuery(\u0026#34;LIS.Service.ENS.TransReport\u0026#34;,\u0026#34;QryVisitNumberInfoByLabNo\u0026#34;,\u0026#34;00000044\u0026#34;) ClassMethod QryVisitNumberInfoByLabNoExecute(ByRef qHandle As %Binary, LabNo, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Status { Set repid=$I(^CacheTemp) If $Get(ind)=\u0026#34;\u0026#34; Set ind=1 s LabNo=$g(LabNo) s LabNoI=##Class(LIS.Util.Common).IndexData(LabNo) i $d(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,LabNoI)) d .s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,LabNoI,\u0026#34;\u0026#34;)) .s VisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) .s RegNo=$lg(VisitNumberData,3) .s AdmissionTypeDR=$lg(VisitNumberData,4) .s AdmissionType=##Class(LIS.Util.Common).GetParentColVal(AdmissionTypeDR,\u0026#34;dbo.BTAdmissionType\u0026#34;,3) .s AdmNo=$lg(VisitNumberData,5) .s MedicalRecordNo=$lg(VisitNumberData,6) .s AdmDate=$lg(VisitNumberData,7) .s AdmTime=$lg(VisitNumberData,8) .s CertTypeDR=$lg(VisitNumberData,9) .s CertType=##Class(LIS.Util.Common).GetParentColVal(AdmissionTypeDR,\u0026#34;dbo.BTCertType\u0026#34;,3) .s CertNo=$lg(VisitNumberData,10) .s IDNumber=$lg(VisitNumberData,11) .s PaymentTypeDR=$lg(VisitNumberData,12) .s PaymentType=##Class(LIS.Util.Common).GetParentColVal(PaymentTypeDR,\u0026#34;dbo.BTPaymentType\u0026#34;,3) .s SurName=$lg(VisitNumberData,13) .s GivenName=$lg(VisitNumberData,14) .s SpeciesDR=$lg(VisitNumberData,15) .s BirthDate=$lg(VisitNumberData,16) .s BirthTime=$lg(VisitNumberData,17) .s Age=$lg(VisitNumberData,18) .s AgeUnitDR=$lg(VisitNumberData,19) .s AgeUnit=##Class(LIS.Util.Common).GetParentColVal(AgeUnitDR,\u0026#34;dbo.BTAgeUnit\u0026#34;,3) .s EthnicityDR=$lg(VisitNumberData,20) .s Ethnicity=##Class(LIS.Util.Common).GetParentColVal(EthnicityDR,\u0026#34;dbo.BTEthnicity\u0026#34;,3) .s HospitalDR=$lg(VisitNumberData,21) .s Hospital=##Class(LIS.Util.Common).GetParentColVal(HospitalDR,\u0026#34;dbo.BTHospital\u0026#34;,3) .s LocationDR=$lg(VisitNumberData,22) .s Location=##Class(LIS.Util.Common).GetParentColVal(LocationDR,\u0026#34;dbo.BTLocation\u0026#34;,3) .s DoctorDR=$lg(VisitNumberData,23) .s Doctor=##Class(LIS.Util.Common).GetParentColVal(DoctorDR,\u0026#34;dbo.BTDoctor\u0026#34;,3) .s RequestDate=$lg(VisitNumberData,24) .s RequestTime=$lg(VisitNumberData,25) .s WardDR=$lg(VisitNumberData,26) .s Ward=##Class(LIS.Util.Common).GetParentColVal(WardDR,\u0026#34;dbo.BTWard\u0026#34;,3) .s BedNo=$lg(VisitNumberData,27) .s Symptom=$lg(VisitNumberData,28) .s MobileNo=$lg(VisitNumberData,29) .s PhoneNo=$lg(VisitNumberData,30) .s EMail=$lg(VisitNumberData,31) .s Height=$lg(VisitNumberData,32) .s Weight=$lg(VisitNumberData,33) .s BloodPressure=$lg(VisitNumberData,34) .s ClinicalConditionsDR=$lg(VisitNumberData,35) .s LMPDate=$lg(VisitNumberData,36) .s Pregnant=$lg(VisitNumberData,37) .s PregnantWeeks=$lg(VisitNumberData,38) .s AboDR=$lg(VisitNumberData,39) .s Abo=##Class(LIS.Util.Common).GetParentColVal(AboDR,\u0026#34;dbo.BTABOBG\u0026#34;,3) .s RhDR=$lg(VisitNumberData,40) .s Rh=##Class(LIS.Util.Common).GetParentColVal(RhDR,\u0026#34;dbo.BTRHBG\u0026#34;,3) .s Address=$lg(VisitNumberData,41) .s PostCode=$lg(VisitNumberData,42) .s InfectFlag=$lg(VisitNumberData,43) .s InfectAlert=$lg(VisitNumberData,44) .s SpecialFlag=$lg(VisitNumberData,45) .s PregnantNum=$lg(VisitNumberData,46) .s ChildbirthNum=$lg(VisitNumberData,47) .s ReqNotes=$lg(VisitNumberData,48) .s RequestNo=$lg(VisitNumberData,49) .s Urgent=$lg(VisitNumberData,50) .s CollectDate=$lg(VisitNumberData,51) .s CollectTime=$lg(VisitNumberData,52) .s CollectUserDR=$lg(VisitNumberData,53) .s CollectUser=##Class(LIS.Util.Common).GetParentColVal(CollectUserDR,\u0026#34;dbo.SYSUser\u0026#34;,3) .s AnatomicalSiteDR=$lg(VisitNumberData,54) .s AnatomicalSite=##Class(LIS.Util.Common).GetParentColVal(AnatomicalSiteDR,\u0026#34;dbo.BTAnatomicalSite\u0026#34;,3) .s CollectPositon=$lg(VisitNumberData,55) .s SpecimenDR=$lg(VisitNumberData,56) .s Specimen=##Class(LIS.Util.Common).GetParentColVal(SpecimenDR,\u0026#34;dbo.BTSpecimen\u0026#34;,3) .s ContainerDR=$lg(VisitNumberData,57) .s Container=##Class(LIS.Util.Common).GetParentColVal(ContainerDR,\u0026#34;dbo.BTContainer\u0026#34;,3) .s CollectNotes=$lg(VisitNumberData,58) .s H24UVolume=$lg(VisitNumberData,59) .s H24UTimePeriod=$lg(VisitNumberData,60) .s BodyTemp=$lg(VisitNumberData,61) .s Confidential=$lg(VisitNumberData,62) .s CarryDate=$lg(VisitNumberData,63) .s CarryTime=$lg(VisitNumberData,64) .s CarryUserDR=$lg(VisitNumberData,65) .s CarryUser=##Class(LIS.Util.Common).GetParentColVal(CarryUserDR,\u0026#34;dbo.SYSUser\u0026#34;,3) .s ReceiveDate=$lg(VisitNumberData,66) .s ReceiveTime=$lg(VisitNumberData,67) .s ReceiveUserDR=$lg(VisitNumberData,68) .s ReceiveUser=##Class(LIS.Util.Common).GetParentColVal(ReceiveUserDR,\u0026#34;dbo.SYSUser\u0026#34;,3) .s SpecimenQualityDR=$lg(VisitNumberData,69) .s SpecimenQuality=##Class(LIS.Util.Common).GetParentColVal(SpecimenQualityDR,\u0026#34;dbo.BTSpecimenQuality\u0026#34;,3) .s ReceiveNotes=$lg(VisitNumberData,70) .s InStorageDate=$lg(VisitNumberData,71) .s InStorageTime=$lg(VisitNumberData,72) .s InStorageUserDR=$lg(VisitNumberData,73) .s InStorageUser=##Class(LIS.Util.Common).GetParentColVal(InStorageUserDR,\u0026#34;dbo.SYSUser\u0026#34;,3) .s OutStorageDate=$lg(VisitNumberData,74) .s OutStorageTime=$lg(VisitNumberData,75) .s OutStorageUserDR=$lg(VisitNumberData,76) .s OutStorageUser=##Class(LIS.Util.Common).GetParentColVal(OutStorageUserDR,\u0026#34;dbo.SYSUser\u0026#34;,3) .s OutStorageType=$lg(VisitNumberData,77) .s ReceiveHospitalDR=$lg(VisitNumberData,78) .s ReceiveHospital=##Class(LIS.Util.Common).GetParentColVal(ReceiveHospitalDR,\u0026#34;dbo.BTHospital\u0026#34;,3) .s AddDate=$lg(VisitNumberData,79) .s AddTime=$lg(VisitNumberData,80) .s AddUserDR=$lg(VisitNumberData,81) .s AddUser=##Class(LIS.Util.Common).GetParentColVal(AddUserDR,\u0026#34;dbo.SYSUser\u0026#34;,3) .s FeeSum=$lg(VisitNumberData,82) .s AddType=$lg(VisitNumberData,83) .s AgeDesc=$lg(VisitNumberData,84) .s ArriveDate=$lg(VisitNumberData,85) .s ArriveTime=$lg(VisitNumberData,86) .s ArriveUserDR=$lg(VisitNumberData,87) .s ArriveUser=##Class(LIS.Util.Common).GetParentColVal(ArriveUserDR,\u0026#34;dbo.SYSUser\u0026#34;,3) .s RUDiseaseDR=$lg(VisitNumberData,88) .s RUDisease=##Class(LIS.Util.Common).GetParentColVal(RUDiseaseDR,\u0026#34;dbo.BTRUDisease\u0026#34;,3) .s ArriveWorkGroupDR=$lg(VisitNumberData,89) .s ArriveWorkGroup=##Class(LIS.Util.Common).GetParentColVal(ArriveWorkGroupDR,\u0026#34;dbo.BTWorkGroup\u0026#34;,3) .s ConcessionFlag=$lg(VisitNumberData,90) .s ICDs=$lg(VisitNumberData,91) .s IsPrintBar=$lg(VisitNumberData,92) .s LinkLabNo=$lg(VisitNumberData,93) .s TestSetCode=\u0026#34;\u0026#34; .s HISOrderID=\u0026#34;\u0026#34; .i $d(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR)) d ..s TestSetDR=\u0026#34;\u0026#34; f s TestSetDR=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; d ...s TestSetCodeOne=$lg($g(^dbo.BTTestSetD(TestSetDR)),2) ...i $l(TestSetCode) s TestSetCode=TestSetCode_\u0026#34;,\u0026#34;_TestSetCodeOne ...e s TestSetCode=TestSetCodeOne ...s VisTSDR=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR,\u0026#34;\u0026#34;)) ...s HISOrderIDOne=$lg(^dbo.RPVisitNumberTestSetD(VisTSDR),10) ...i $l(HISOrderID) s HISOrderID=HISOrderID_\u0026#34;,\u0026#34;_HISOrderIDOne ...e s HISOrderID=HISOrderIDOne .s Data=$lb(VisitNumberDR,RegNo,AdmissionTypeDR,AdmissionType,AdmNo,MedicalRecordNo,AdmDate,AdmTime,CertTypeDR,CertType,CertNo,IDNumber,PaymentTypeDR,PaymentType,SurName,GivenName,SpeciesDR,BirthDate,BirthTime,Age,AgeUnitDR,AgeUnit,EthnicityDR,Ethnicity,HospitalDR,Hospital,LocationDR,Location,DoctorDR,Doctor,RequestDate,RequestTime,WardDR,Ward,BedNo,Symptom,MobileNo,PhoneNo,EMail,Height,Weight,BloodPressure,ClinicalConditionsDR,LMPDate,Pregnant,PregnantWeeks,AboDR,Abo,RhDR,Rh,Address,PostCode,InfectFlag,InfectAlert,SpecialFlag,PregnantNum,ChildbirthNum,ReqNotes,RequestNo,Urgent,CollectDate,CollectTime,CollectUserDR,CollectUser,AnatomicalSiteDR,AnatomicalSite,CollectPositon,SpecimenDR,Specimen,ContainerDR,Container,CollectNotes,H24UVolume,H24UTimePeriod,BodyTemp,Confidential,CarryDate,CarryTime,CarryUserDR,CarryUser,ReceiveDate,ReceiveTime,ReceiveUserDR,ReceiveUser,SpecimenQualityDR,SpecimenQuality,ReceiveNotes,InStorageDate,InStorageTime,InStorageUserDR,InStorageUser,OutStorageDate,OutStorageTime,OutStorageUserDR,OutStorageUser,OutStorageType,ReceiveHospitalDR,ReceiveHospital,AddDate,AddTime,AddUserDR,AddUser,FeeSum,AddType,AgeDesc,ArriveDate,ArriveTime,ArriveUserDR,ArriveUser,RUDiseaseDR,RUDisease,ArriveWorkGroupDR,ArriveWorkGroup,ConcessionFlag,ICDs,IsPrintBar,LinkLabNo,TestSetCode,HISOrderID) .d OutPut Set qHandle=$lb(0,repid,0) Quit $$$OK OutPut Set ColFields=\u0026#34;VisitNumberDR,RegNo,AdmissionTypeDR,AdmissionType,AdmNo,MedicalRecordNo,AdmDate,AdmTime,CertTypeDR,CertType,CertNo,IDNumber,PaymentTypeDR,PaymentType,SurName,GivenName,SpeciesDR,BirthDate,BirthTime,Age,AgeUnitDR,AgeUnit,EthnicityDR,Ethnicity,HospitalDR,Hospital,LocationDR,Location,DoctorDR,Doctor,RequestDate,RequestTime,WardDR,Ward,BedNo,Symptom,MobileNo,PhoneNo,EMail,Height,Weight,BloodPressure,ClinicalConditionsDR,LMPDate,Pregnant,PregnantWeeks,AboDR,Abo,RhDR,Rh,Address,PostCode,InfectFlag,InfectAlert,SpecialFlag,PregnantNum,ChildbirthNum,ReqNotes,RequestNo,Urgent,CollectDate,CollectTime,CollectUserDR,CollectUser,AnatomicalSiteDR,AnatomicalSite,CollectPositon,SpecimenDR,Specimen,ContainerDR,Container,CollectNotes,H24UVolume,H24UTimePeriod,BodyTemp,Confidential,CarryDate,CarryTime,CarryUserDR,CarryUser,ReceiveDate,ReceiveTime,ReceiveUserDR,ReceiveUser,SpecimenQualityDR,SpecimenQuality,ReceiveNotes,InStorageDate,InStorageTime,InStorageUserDR,InStorageUser,OutStorageDate,OutStorageTime,OutStorageUserDR,OutStorageUser,OutStorageType,ReceiveHospitalDR,ReceiveHospital,AddDate,AddTime,AddUserDR,AddUser,FeeSum,AddType,AgeDesc,ArriveDate,ArriveTime,ArriveUserDR,ArriveUser,RUDiseaseDR,RUDisease,ArriveWorkGroupDR,ArriveWorkGroup,ConcessionFlag,ICDs,IsPrintBar,LinkLabNo\u0026#34; Set ^CacheTemp(repid,ind)=##Class(LIS.Util.Common).TransListNull(Data,ColFields) Set ind=ind+1 quit } ClassMethod QryVisitNumberInfoByLabNoClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = QryVisitNumberInfoByLabNoExecute ] { Set repid=$LIST(qHandle,2) Kill ^CacheTemp(repid) Quit $$$OK } ClassMethod QryVisitNumberInfoByLabNoFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = QryVisitNumberInfoByLabNoExecute ] { Set AtEnd=$LIST(qHandle,1) Set repid=$LIST(qHandle,2) Set ind=$LIST(qHandle,3) Set ind=$o(^CacheTemp(repid,ind)) If ind=\u0026#34;\u0026#34; {\tSet AtEnd=1 Set Row=\u0026#34;\u0026#34; } Else {\tSet Row=^CacheTemp(repid,ind) } // Save QHandle s qHandle=$lb(AtEnd,repid,ind) Quit $$$OK } } 平台组回传结果方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 /// HIS产品组内部相互调用的统一入口 Class web.DHCENS.EnsHISService Extends (%RegisteredObject, %XML.Adaptor) { /// Creator：WuXianPu /// CreatDate：2012—03-06 /// Description：平台提供给其他产品组调用统一入口 /// Table：Ens_Interface /// Input：Input:方法参数,KeyName:事件参数 /// Return：0^成功 15559-2-001^15559||2 /// Others：w ##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;SENDDOCORDITEMINFO\u0026#34;,\u0026#34;109||1\u0026#34;) ClassMethod DHCHisInterface(KeyName As %String, Input...) As %GlobalCharacterStream { s $zt=\u0026#34;err\u0026#34; s n = $zu(41) s method = $zu(41,n-2)\ts proc = ##class(%SYS.ProcessQuery).%OpenId($j) s ip = proc.ClientIPAddress s proc=\u0026#34;\u0026#34; q:(\u0026#34;\u0026#34;=KeyName) \u0026#34;-1^方法代码为空!\u0026#34; s rowId=$o(^User.EnsInterfaceMethodI(\u0026#34;MethodCode\u0026#34;,\u0026#34;classMethod\u0026#34;,KeyName,\u0026#34;\u0026#34;)) s methodObj=##class(User.EnsInterfaceMethod).%OpenId(rowId) if \u0026#39;$isobject(methodObj){ q \u0026#34;-1^方法不存在!\u0026#34; } s methodStatus=methodObj.methodStatus if (methodStatus=\u0026#34;N\u0026#34;) { q \u0026#34;-1^方法未启用!\u0026#34; } s className=methodObj.methodClassName s methodName=methodObj.methodName s methodInput=methodObj.methodInput s OutputType=$p($p(methodObj.methodOutput,$char(28),1),$char(2),1) s OutputDesc=$p($p(methodObj.methodOutput,$char(28),1),$char(2),2) s tmpInput=\u0026#34;\u0026#34;,tmpSubInput=\u0026#34;\u0026#34;,perInput=\u0026#34;\u0026#34;,IntInputDesc=\u0026#34;\u0026#34; f i=1:1:$g(Input,0){ s @(\u0026#34;Input\u0026#34;_i)=$g(Input(i),\u0026#34;\u0026lt;NULL\u0026gt;\u0026#34;) s tInputType=$p($p(methodInput,$char(28),i),$char(2),1) s tmpSubInput=$g(Input(i),\u0026#34;\u0026lt;NULL\u0026gt;\u0026#34;) s tmpIntInputDesc=$p($p(methodInput,$char(28),i),$char(2),3) if (IntInputDesc=\u0026#34;\u0026#34;){ s IntInputDesc=tmpIntInputDesc }else{ s IntInputDesc=IntInputDesc_$char(2)_tmpIntInputDesc } if (tInputType=\u0026#34;%GlobalCharacterStream\u0026#34;){ s tmpSubInput=tmpSubInput.Read() s tsc=Input(i).Rewind() } if (tmpInput=\u0026#34;\u0026#34;){ s tmpInput=\u0026#34;Input\u0026#34;_i s perInput=tmpSubInput }else{ s tmpInput=tmpInput_\u0026#34;,\u0026#34;_\u0026#34;Input\u0026#34;_i s perInput=perInput_\u0026#34;,\u0026#34;_tmpSubInput } } //启用日志记录标识功能 s EnsInterfaceFlag=methodObj.EnsInterfaceFlag if (EnsInterfaceFlag=\u0026#34;N\u0026#34;) { s exeStr=\u0026#34;rtn=##class(\u0026#34;_className_\u0026#34;).\u0026#34;_methodName_\u0026#34;(\u0026#34;_tmpInput_\u0026#34;)\u0026#34; s @exeStr s result=@\u0026#34;rtn\u0026#34; q result\t} s perStream=##class(%GlobalCharacterStream).%New() d perStream.Write(perInput) //接口表写数据 s @\u0026#34;KeyName\u0026#34;=rowId s @\u0026#34;Method\u0026#34;=method s @\u0026#34;Ip\u0026#34;=ip s @\u0026#34;PerStream\u0026#34;=perStream s @\u0026#34;IntInputDesc\u0026#34;=IntInputDesc s exeStr=\u0026#34;ensRtn=##class(web.DHCENS.STBLL.UTIL.EnsInterface).InsertEnsInterface(KeyName,Method,Ip,PerStream,IntInputDesc)\u0026#34; s @exeStr s resultStr=@\u0026#34;ensRtn\u0026#34; if (className=\u0026#34;web.DHCENS.STBLL.UTIL.EnsInterface\u0026#34;)\u0026amp;\u0026amp;(methodName=\u0026#34;InsertEnsInterface\u0026#34;){ if OutputType=\u0026#34;%GlobalCharacterStream\u0026#34; { set rtn=##class(web.DHCENS.STBLL.MANAGE.MergeInstance).SendMergeInfo(KeyName,perStream) do resultStr.CopyFrom(rtn) set sc=##class(web.DHCENS.STBLL.UTIL.EnsInterface).UpdateOutputResult($p(resultStr,\u0026#34;^\u0026#34;,2),\u0026#34;Y\u0026#34;,resultStr) } else { set stream=##class(%Stream.GlobalCharacter).%New() d stream.Write(resultStr) set rtn=##class(web.DHCENS.STBLL.MANAGE.MergeInstance).SendMergeInfo(KeyName,perStream) d stream.Write(\u0026#34;^\u0026#34;) do stream.CopyFrom(rtn) set sc=##class(web.DHCENS.STBLL.UTIL.EnsInterface).UpdateOutputResult($p(resultStr,\u0026#34;^\u0026#34;,2),\u0026#34;Y\u0026#34;,stream) } ;d ##class(web.DHCENS.STBLL.MANAGE.MergeInstance).SendMergeInfo(KeyName,perStream) q resultStr } s exeStr=\u0026#34;rtn=##class(\u0026#34;_className_\u0026#34;).\u0026#34;_methodName_\u0026#34;(\u0026#34;_tmpInput_\u0026#34;)\u0026#34; s @exeStr set result=@\u0026#34;rtn\u0026#34; if OutputType=\u0026#34;%GlobalCharacterStream\u0026#34; { set sc=##class(web.DHCENS.STBLL.UTIL.EnsInterface).UpdateOutputResult($p(resultStr,\u0026#34;^\u0026#34;,2),\u0026#34;Y\u0026#34;,result) } else { set stream=##class(%GlobalCharacterStream).%New() d stream.Write(result) set sc=##class(web.DHCENS.STBLL.UTIL.EnsInterface).UpdateOutputResult($p(resultStr,\u0026#34;^\u0026#34;,2),\u0026#34;Y\u0026#34;,stream) } s methodObj=\u0026#34;\u0026#34; q result err //set resultStr=@\u0026#34;ensRtn\u0026#34; //set stream=##class(%GlobalCharacterStream).%New() //d stream.Write(\u0026#34;-1^\u0026#34;_$ze) //set sc=##class(web.DHCENS.STBLL.UTIL.EnsInterface).UpdateOutputResult($p(resultStr,\u0026#34;^\u0026#34;,2),\u0026#34;N\u0026#34;,stream) q \u0026#34;-1^\u0026#34;_$ze } // -------------------------------------医生站调用（同步）----------------------------------------------------------- /// Creator：WuXianPu /// CreatDate：2012—05-24 /// Description：医生站叫号 /// Table： /// Input：标志^顺序号^登记号^姓名^日期^时间^科室Rowid^科室^医生Rowid^医生^状态^诊室IP^号别名称^诊室名称 /// Return：0^成功 /// Others: w ##class(web.DHCENS.EnsHISService).SetAdmCallInfo(\u0026#34;Y^5^377^辛维青^2011-05-06^09:58:46AM^72^心胸外科门诊^451^田凯华^复诊^二十^胸外科专家号(全天)^二十\u0026#34;) ClassMethod SendAdmCallInfo(Input As %String) As %String { Quit \u0026#34;0^成功\u0026#34; q:Input=\u0026#34;\u0026#34; \u0026#34;-1^输入信息不能为空\u0026#34; //set result=##class(web.DHCENS.BLL.Empi.Method.CallInfo).SetCallInfo(Input) } /// 结算前 ClassMethod DHCHisOpChargeSend(Input As %String) As %String { Quit \u0026#34;0^成功\u0026#34; } /// Creator：WuXianPu /// CreatDate：2012—05-10 /// Description：计算试管数量 /// Table： /// Input：医嘱RowID^医嘱RowID^医嘱RowID^ /// Return：0^成功,-1^失败 /// Others：w ##class(web.DHCENS.EnsHISService).GetAmountOfTube(\u0026#34;149||5^149||6\u0026#34;) ClassMethod GetAmountOfTube(Input As %String, DeptCode As %String = \u0026#34;\u0026#34;) As %String { Quit \u0026#34;0^成功\u0026#34; set result=##class(web.DHCENS.STBLL.LIS.METHOD.AmountOfTube).AmountOfTube(Input,DeptCode) Quit result } /// Creator：WuXianPu /// CreatDate：2012—03-06 /// Description：根据处方号查询处方状态(同步门诊发药机) /// Table： /// Input：处方号 /// Return： /// Others：w ##class(web.DHCENS.EnsHISService).StartSendDrugInfo(\u0026#34;34794\u0026#34;) ClassMethod StartSendDrugInfo(Input As %String) As %String { Quit \u0026#34;0^成功\u0026#34; //q:Input=\u0026#34;\u0026#34; \u0026#34;-1^输入信息不能为空\u0026#34; //set result=##class(web.DHCENS.BLL.Drug.Method.SelectPresStatus).SelectPresStatusByPresno(Input) //q result } /// Creator：WuXianPu /// CreatDate：2012—06-12 /// Description：HIS发送完成病人发药信息 /// Table： /// Input： /// Return：0^成功 /// Others：w ##class(web.DHCENS.EnsHISService).FinishSendDrugInfo(\u0026#34;\u0026#34;) ClassMethod FinishSendDrugInfo(Input As %String) As %String { Quit \u0026#34;0^成功\u0026#34; //set result=##class(web.DHCENS.BLL.Drug.Method.FinishPharmaceutist).FinishPharmaceutist(Input) //q result } // -------------------------------药房调用部分(同步)-------------------------------------------- /// Creator：WuXianPu /// CreatDate：2012—03-06 /// Description：发送HIS中药品医嘱信息(同步住院摆药机) /// Table：DHC_PhaCollected /// Input：住院药品发药表ROWID /// Return：0^成功 /// Others：w ##class(web.DHCENS.EnsHISService).DispenseIPDrugInfo(\u0026#34;34271\u0026#34;) ClassMethod DispenseIPDrugInfo(Input As %String) As %String { Quit \u0026#34;0^成功\u0026#34; ;q:Input=\u0026#34;\u0026#34; \u0026#34;-1^输入信息不能为空\u0026#34; set result=##class(web.DHCENS.STBLL.DRUG.METHOD.IPDrugOrdInfo).DispenseIPDrugInfo(Input) q result } // --------------------------------------------------------------------------------------------------------------- /// Creator：WuXianPu /// CreatDate：2012—11-10 /// Description：医生停医嘱，通知第三方系统此申请单作废 /// Table： /// Input： 病人RowID^医嘱号^血液类型信息^日期 /// Return：0^0不需要采血；0^1需要采血 /// Others: w ##class(web.DHCENS.EnsHISService).JudgeCollection(\u0026#34;\u0026#34;) ClassMethod JudgeCollectionBloodInfo(Input As %String) As %String { Quit \u0026#34;0^成功\u0026#34; //set result=##class(web.DHCENS.BLL.Blood.Method.JudgeCollection).JudgeCollection(Input) //q result } ClassMethod CreateEmergencyPageData(StartDate As %String, EndDate As %String) As %String { s:StartDate=\u0026#34;\u0026#34; StartDate=$zd(+$h,3) s Year=$p(StartDate,\u0026#34;-\u0026#34;,1) s Month=$p(StartDate,\u0026#34;-\u0026#34;,2) s SDate=$zdh(Year_\u0026#34;-\u0026#34;_Month_\u0026#34;-01\u0026#34;,3) s Mod4=Year#4 s Mod100=Year#100 if ((Month=\u0026#34;04\u0026#34;)||(Month=\u0026#34;06\u0026#34;)||(Month=\u0026#34;09\u0026#34;)||(Month=\u0026#34;11\u0026#34;)) { set EMonth=Month_\u0026#34;-30\u0026#34; } elseif((Month=\u0026#34;02\u0026#34;)\u0026amp;\u0026amp;(Mod4=\u0026#34;0\u0026#34;)\u0026amp;\u0026amp;(Mod100\u0026#39;=\u0026#34;0\u0026#34;)) { set EMonth=Month_\u0026#34;-29\u0026#34; } elseif((Month=\u0026#34;02\u0026#34;)\u0026amp;\u0026amp;(Mod4=\u0026#34;0\u0026#34;)\u0026amp;\u0026amp;(Mod100=\u0026#34;0\u0026#34;)) { set EMonth=Month_\u0026#34;-28\u0026#34; } else { set EMonth=Month_\u0026#34;-31\u0026#34; } s EDate=$zdh(Year_\u0026#34;-\u0026#34;_EMonth,3) k ^TmpDHCENS(\u0026#34;EmergencyPageData\u0026#34;) f i=SDate:1:EDate { s PrtRowid=\u0026#34;\u0026#34; f s PrtRowid=$o(^DHCINVPRT(0,\u0026#34;Date\u0026#34;,i,PrtRowid)) q:PrtRowid=\u0026#34;\u0026#34; d .s DHCBCIRowid=\u0026#34;\u0026#34; f s DHCBCIRowid=$o(^DHCBCI(0,\u0026#34;INV\u0026#34;,PrtRowid,DHCBCIRowid)) q:DHCBCIRowid=\u0026#34;\u0026#34; d ..s AdmDr=$p($g(^DHCBCI(DHCBCIRowid)),\u0026#34;^\u0026#34;,3) ..i AdmDr\u0026#39;=\u0026#34;\u0026#34; d ...s ^TmpDHCENS(\u0026#34;EmergencyPageData\u0026#34;,$zd(+$h,3),AdmDr)=\u0026#34;\u0026#34; } ;调用电子病历方法取得触犯条目，入参就诊号 f { s ID=$o(^TmpDHCENS(\u0026#34;EmergencyPageData\u0026#34;,$zd(+$h,3),ID)) q:ID=\u0026#34;\u0026#34; s status=##Class(EPRservice.BIL.BIEPRLogs).GetOutFristPageStatus(ID) i status=\u0026#34;finished\u0026#34; { set intnum=0,result=\u0026#34;Items\u0026#34;,AdmDate=\u0026#34;\u0026#34; set AdmDate=\u0026#34;\u0026#34; set status=\u0026#34;\u0026#34; k rset Set rset = ##class(%ResultSet).%New(\u0026#34;EPRservice.BIL.BIQuality:GetResultDetailList\u0026#34;)\tSet sc = rset.Execute(ID) While(rset.Next()) { s ItemRowId=rset.GetDataByName(\u0026#34;ExamEntry\u0026#34;) s ItemDesc=rset.GetDataByName(\u0026#34;EntryDesc\u0026#34;) s DocName=rset.GetDataByName(\u0026#34;DocName\u0026#34;) s DocRowId=rset.GetDataByName(\u0026#34;DocRowid\u0026#34;) s EntryScore=rset.GetDataByName(\u0026#34;EntryScore\u0026#34;) s result=result_\u0026#34;#\u0026#34;_ItemRowId_\u0026#34;:\u0026#34;_ItemDesc } s AdmDate=$p($g(^PAADM(ID)),\u0026#34;^\u0026#34;,6) s OnLoadDate=Year_\u0026#34;-\u0026#34;_Month ;调方法取得质控分数并进行判断，分数小于100的有问题 s flag=\u0026#34;\u0026#34;,ItemScore=\u0026#34;\u0026#34; s ItemScore=##Class(EPRservice.BIL.BIQuality).GetResultScore(ID) i ItemScore=100 d .s flag=\u0026#34;Y\u0026#34; e d .s flag=\u0026#34;N\u0026#34; set retStr=..DHCHisInterface(\u0026#34;SENDEMERGENCYADMFIRSTPAGEINFO\u0026#34;,ID_\u0026#34;^\u0026#34;_flag_\u0026#34;^\u0026#34;_result_\u0026#34;^\u0026#34;_AdmDate_\u0026#34;^\u0026#34;_OnLoadDate) set intnum=intnum+1 } } Quit intnum } /// creator:liyi /// creatdate:20121221 /// description:取当天（如果任务在早上凌晨，取前一天）完成病案归档操作的所有病案的adm,paamd_rowid /// input:argDateFrom argDateTo /// output: /// debug:w ##class(web.DHCENS.EnsHISService).GetRecordAdmList(\u0026#34;2012-10-01\u0026#34;,\u0026#34;2013-01-14\u0026#34;) /// debug:w ##class(web.DHCWMRInterface.ReceiptSrv).GetRecordAdmList(\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) ClassMethod GetRecordAdmList(argDateFrom As %String, argDateTo As %String) As %String { //New (argDateFrom,argDateTo) //Set return=\u0026#34;\u0026#34; Set $ZT=\u0026#34;GetRecordAdmListErr\u0026#34; Set:argDateFrom[\u0026#34;/\u0026#34; argDateFrom=$zdh(argDateFrom,4) Set:argDateFrom[\u0026#34;-\u0026#34; argDateFrom=$zdh(argDateFrom,3) Set:argDateFrom\u0026#39;=\u0026#34;\u0026#34; argDateFrom=+argDateFrom Set:argDateTo[\u0026#34;/\u0026#34; argDateTo=$zdh(argDateTo,4) Set:argDateTo[\u0026#34;-\u0026#34; argDateTo=$zdh(argDateTo,3) Set:argDateTo\u0026#39;=\u0026#34;\u0026#34; argDateTo=+argDateTo Set Count=0 //取当前系统的归档上架操作ID Set WorkItemId=\u0026#34;\u0026#34; /* For{ Set WorkItemId=$o(^DHCWMRWITM(WorkItemId)) Quit:WorkItemId=\u0026#34;\u0026#34; Continue:$p($g(^DHCWMRWITM(WorkItemId)),\u0026#34;^\u0026#34;,3)=\u0026#34;N\u0026#34; s:$p($g(^DHCWMRWITM(WorkItemId)),\u0026#34;^\u0026#34;,2)=\u0026#34;病案编目\u0026#34; StatusDr=WorkItemId //根据医院归档上架具体的描述来判断 } */ Set StatusDr=8 ;病案编目 //如果传入参数为空，前一天的归档操作的所有病案 if (argDateTo=\u0026#34;\u0026#34;)\u0026amp;\u0026amp;(argDateFrom=\u0026#34;\u0026#34;) { Set QueryDate=$p($h,\u0026#34;,\u0026#34;,1) Set MainVolumeId=\u0026#34;\u0026#34; For{ Set MainVolumeId=$o(^DHCWMRVOL(0,\u0026#34;VSDateStatus\u0026#34;,QueryDate,StatusDr,MainVolumeId)) Quit:MainVolumeId=\u0026#34;\u0026#34; Continue:$p($g(^DHCWMRVOL(MainVolumeId)),\u0026#34;^\u0026#34;,7)=\u0026#34;N\u0026#34; Set PaadmDr=$p($g(^DHCWMRVOL(MainVolumeId)),\u0026#34;^\u0026#34;,2) //Set return=$lb(PaadmDr,return) //此处调用提供的接口 do ##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;SENDINHOSPITALADMFIRSTPAGEINFO\u0026#34;,PaadmDr) Set Count=Count+1 } } //如果两个传入参数不为空 if (argDateFrom\u0026#39;=\u0026#34;\u0026#34;)\u0026amp;\u0026amp;(argDateTo\u0026#39;=\u0026#34;\u0026#34;) { ;Set QueryDate=argDateFrom for QueryDate=argDateFrom:1:argDateTo { Set MainVolumeId=\u0026#34;\u0026#34; for{\tSet MainVolumeId=$o(^DHCWMRVOL(0,\u0026#34;VSDateStatus\u0026#34;,QueryDate,StatusDr,MainVolumeId)) Quit:MainVolumeId=\u0026#34;\u0026#34; ;w MainVolumeId,! Continue:QueryDate\u0026gt;argDateTo Continue:$p($g(^DHCWMRVOL(MainVolumeId)),\u0026#34;^\u0026#34;,7)=\u0026#34;N\u0026#34; Set PaadmDr=$p($g(^DHCWMRVOL(MainVolumeId)),\u0026#34;^\u0026#34;,2) //Set return=$lb(PaadmDr,return) //此处调用提供的接口 do ##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;SENDINHOSPITALADMFIRSTPAGEINFO\u0026#34;,PaadmDr) Set Count=Count+1 } } } //如果开始日期为不为空，结束日期为空 if (argDateFrom\u0026#39;=\u0026#34;\u0026#34;)\u0026amp;\u0026amp;(argDateTo=\u0026#34;\u0026#34;) { Set CurrDate=$p($h,\u0026#34;,\u0026#34;,1) if (argDateFrom\u0026lt;=CurrDate) { Set QueryDate=argDateFrom Set MainVolumeId=\u0026#34;\u0026#34; for{ Set MainVolumeId=$o(^DHCWMRVOL(0,\u0026#34;VSDateStatus\u0026#34;,QueryDate,StatusDr,MainVolumeId)) Quit:MainVolumeId=\u0026#34;\u0026#34; Continue:QueryDate\u0026gt;argDateFrom Continue:$p($g(^DHCWMRVOL(MainVolumeId)),\u0026#34;^\u0026#34;,7)=\u0026#34;N\u0026#34; Set PaadmDr=$p($g(^DHCWMRVOL(MainVolumeId)),\u0026#34;^\u0026#34;,2) //Set return=$lb(PaadmDr,return) //此处调用提供的接口 do ##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;SENDINHOSPITALADMFIRSTPAGEINFO\u0026#34;,PaadmDr) Set Count=Count+1 } } } Quit Count GetRecordAdmListErr Quit -1 } } 平台组获取标本申请单信息 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 Class web.DHCENS.STBLL.SOAP.HISSystemServieSoap Extends %SOAP.WebClient [ ProcedureBlock ] { /// This is the URL used to access the web service. Parameter LOCATION = \u0026#34;https://10.49.1.109:1443/csp/hsb/DHC.Published.HISSystemServie.BS.HISSystemServie.cls\u0026#34;; /// This is the namespace used by the Service Parameter NAMESPACE = \u0026#34;http://www.dhcc.com.cn\u0026#34;; /// Use xsi:type attribute for literal types. Parameter OUTPUTTYPEATTRIBUTE = 1; /// Determines handling of Security header. Parameter SECURITYIN = \u0026#34;ALLOW\u0026#34;; /// This is the name of the Service Parameter SERVICENAME = \u0026#34;HISSystemServie\u0026#34;; /// This is the SOAP version supported by the service. Parameter SOAPVERSION = 1.1; Method HIPMessageServer(action As %String, message As %GlobalCharacterStream) As %GlobalCharacterStream [ Final, ProcedureBlock = 1, SoapBindingStyle = document, SoapBodyUse = literal, WebMethod ] { Quit ..WebMethod(\u0026#34;HIPMessageServer\u0026#34;).Invoke($this,\u0026#34;http://www.dhcc.com.cn/DHC.Published.HISSystemServie.BS.HISSystemServie.HIPMessageServer\u0026#34;,.action,.message) } /// /// input1 MES0022 input2 **4860462* 通过条码号获取检验申请单信息 /// input1 MES0024 input2 24041406012005 获取体检医嘱信息（体检） ClassMethod HIPMessageServerS(input1 As %String, input2 As %GlobalCharacterStream) As %GlobalCharacterStream { Try { S HSBSOAP=##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).%New() s HSBSOAP.SSLConfiguration=\u0026#34;SSLECP\u0026#34; s HSBSOAP.SSLCheckServerIdentity=\u0026#34;0\u0026#34; s Rtnstream=HSBSOAP.HIPMessageServer(input1,input2) } Catch { s Rtnstream=##class(%GlobalCharacterStream).%New() d Rtnstream.Write($ze)\t} q Rtnstream } /// w ##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).test().Read() ClassMethod test(input As %String) As %GlobalCharacterStream { s stream=##class(%GlobalCharacterStream).%New() ;d stream.Write(\u0026#34;**4860462*\u0026#34;) d stream.Write(\u0026#34;**8015327*\u0026#34;) // w ##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).HIPMessageServerS(\u0026#34;MES0026\u0026#34;,stream) s rtn=..HIPMessageServerS(\u0026#34;MES0026\u0026#34;,stream) ;b ;a101 Q rtn } /// w ##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).test1().Read() ClassMethod test1(input1 As %String, input2 As %String) As %GlobalCharacterStream { s stream=##class(%GlobalCharacterStream).%New() ;d stream.Write(\u0026#34;**4860462*\u0026#34;) d stream.Write(input2) // w ##class(web.DHCENS.STBLL.SOAP.HISSystemServieSoap).HIPMessageServerS(\u0026#34;MES0022\u0026#34;,stream) s rtn=..HIPMessageServerS(input1,stream) ;b ;a101 Q rtn } } 查询未核收医嘱 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 /// 新方法，方法说明此方法包含查询当前仪器结果以及已关联的报告结果 /// 此方法兼容当日全部仪器结果查询 /// /LabNo=L0002438\u0026amp;WorkGroupMachineDR=1 /// d ##Class(%ResultSet).RunQuery(\u0026#34;LIS.WS.BLL.DHCRPVisitNumberReport\u0026#34;,\u0026#34;QryWorkListByLabno\u0026#34;,\u0026#34;00000000484\u0026#34;,\u0026#34;7\u0026#34;,\u0026#34;2020-04-27\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;All\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;113^7^0^12^1\u0026#34;) /// d ##Class(%ResultSet).RunQuery(\u0026#34;LIS.WS.BLL.DHCRPVisitNumberReport\u0026#34;,\u0026#34;QryWorkListByLabno\u0026#34;,\u0026#34;**4868149*\u0026#34;,\u0026#34;3\u0026#34;,\u0026#34;20240409\u0026#34;,\u0026#34;8\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;1\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;8280^1^0^2^1\u0026#34;) Query QryWorkListByLabno(fLabno, WorkGroupMachineDR, FTransmitDate, fEpisodeNo, TestSetQueryDR, IsUnCheckTS, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Query(ROWSPEC = \u0026#34;MixLabNo,VisitNumberDR,Status,StatusDesc,AssayNo,AssayNo1,EpisodeNo,Labno,RegNo,RecordNo,PatName,Urgent,TestSetDesc,TestSetFee,ContainerDR,SpecimenDR,SpecimenDesc,AdmType,ReportDR,ResultFlag,WorkGroupMachineDR,TransmitDate,AcceptDate,AcceptTime,AcceptDT,ColStyler,InfectFlag,InfectAlert,AddType,HosptialDR,LocationDR,LocationName,DoctorDR,WardDR,BedNo,SpeciesDR,Age,AgeUnitDR,VisNumTSDR,Printed,ReceiveDate,ReceiveTime,ReceiveDT,AuthDT,AuthUserDR,AuthUserName,Readed,AdmTypeDR,Species,PrintedUserName,SpecimenQualityDR,SpecimenQualityDesc,AgeUnit,SplitStatus,RackNo,WorkGroupMachineName,CollectedFlag,LocationTelephone,WardName,WardPhoneNo,NoCheckList,CheckTSList,ContainerDesc,ContainerColor,Doctor,RequestDT,Symptom,IDNumber,Address,MobileNo,CollectDate,CollectTime,CollectDT,CollectUser\u0026#34;) { } ClassMethod QryWorkListByLabnoExecute(ByRef qHandle As %Binary, fLabno, WorkGroupMachineDR, FTransmitDate, fEpisodeNo, TestSetQueryDR, IsUnCheckTS, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Status { Set HospitalDR=$p(Sessions,\u0026#34;^\u0026#34;,5) Set repid=$i(^CacheTemp) Set ind=1 s FTransmitDate=$Tr(FTransmitDate,\u0026#34;-\u0026#34;),TestSetQueryDR=$g(TestSetQueryDR) s IsUnCheckTS=$g(IsUnCheckTS) i WorkGroupMachineDR=\u0026#34;ALL\u0026#34; s WorkGroupMachineDR=\u0026#34;\u0026#34; i TestSetQueryDR=\u0026#34;All\u0026#34; s TestSetQueryDR=\u0026#34;\u0026#34; i fEpisodeNo=\u0026#34;自动分配\u0026#34; s fEpisodeNo=\u0026#34;\u0026#34; k ^TMP($zn,$i,$j) s ^YHR(\u0026#34;QryWorkListByLabno\u0026#34;)=$lb(fLabno, WorkGroupMachineDR, FTransmitDate, fEpisodeNo, TestSetQueryDR, IsUnCheckTS, P6, P7, P8, P9, P10, P11, P12, P13, Sessions) s FindFlag=0 s CombineFlag=0 //检验查询 不区分日期 i $l(fLabno) { s TestSetQueryGroupDR=\u0026#34;\u0026#34; //不限制查询医嘱组 s LabNoStr=fLabno s LabNoIndex=0 s LabnoFlag=1 for { s LabNoIndex = LabNoIndex+1 q:LabNoIndex\u0026gt;$l(LabNoStr,\u0026#34;^\u0026#34;) s fLabno = $p(LabNoStr,\u0026#34;^\u0026#34;,LabNoIndex) s FindFlag = 1 s VisitNumberDR=\u0026#34;\u0026#34; for { s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(fLabno),VisitNumberDR)) q:VisitNumberDR=\u0026#34;\u0026#34; s WorkGPMiDR=\u0026#34;\u0026#34; for{ s WorkGPMiDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR, WorkGPMiDR)) q:WorkGPMiDR=\u0026#34;\u0026#34; s curWrokGoupDR=$lg(^dbo.BTWorkGroupMachineD(WorkGPMiDR),4) ;i $g(curWrokGoupDR)\u0026#39;=\u0026#34;\u0026#34;,curWrokGoupDR\u0026#39;=fWorkGroupDR continue ;i $l(WorkGroupMachineDR),WorkGroupMachineDR\u0026#39;=WorkGPMiDR continue s RptOrder=\u0026#34;\u0026#34; for { s RptOrder=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR, WorkGPMiDR,RptOrder)) q:RptOrder=\u0026#34;\u0026#34; s ReportDR=\u0026#34;\u0026#34; for { s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR, WorkGPMiDR,RptOrder,ReportDR)) q:ReportDR=\u0026#34;\u0026#34; d OupInfo } } } } } } k ^TMP($zn,$i,$j) Set qHandle=$lb(0,repid,0) Quit $$$OK OupInfo #;\ts RptOrder=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR, WorkGPMiDR,\u0026#34;\u0026#34;),-1) #;\ti \u0026#39;$l(RptOrder) Quit ///只查询本工作组医嘱 #;\ts ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR, WorkGPMiDR,RptOrder,\u0026#34;\u0026#34;)) s ReportTestSetType=\u0026#34;\u0026#34; s ReportData=$g(^dbo.RPVisitNumberReportD(ReportDR)) s SplitStatus=$lg(ReportData,44) s RackNo=$lg(ReportData,45) s TransmitDate=$lg(ReportData,3) i $L(FTransmitDate),FTransmitDate\u0026#39;=TransmitDate Q s WorkGPMiDR=$lg(ReportData,4) //兼容合并报告输出 i $l(WorkGroupMachineDR),WorkGroupMachineDR\u0026#39;=WorkGPMiDR q s VisitNumberDR=$lg(ReportData,2) //兼容合并报告输出 s WorkGroupDR=$LG($g(^dbo.BTWorkGroupMachineD(WorkGPMiDR)),4) s WorkGroupMachineName=$lg($G(^dbo.BTWorkGroupMachineD(WorkGPMiDR)),3) s TestSetDesc=\u0026#34;\u0026#34;,TestSetFee=0,CheckTSList=\u0026#34;\u0026#34; s ReportTypeFlag = 1 ///0代表不匹配报告类型 s TestSetDR=\u0026#34;\u0026#34; f s TestSetDR=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; d .s ReportType = $lg($g(^dbo.BTTestSetD(TestSetDR)),19) .i \u0026#39;$d(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexReportID\u0026#34;,ReportDR,TestSetDR)) Q .I $l(TestSetQueryDR),\u0026#39;$d(^dbo.BTWorkGroupMachineRuleTSI(\u0026#34;IndexMaster\u0026#34;,TestSetQueryDR,TestSetDR)) Q .s VisNumTSDR=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR,\u0026#34;\u0026#34;)) .i $lg($g(^dbo.RPVisitNumberTestSetD(VisNumTSDR)),4)\u0026#39;=1 q .s tWorkGroupMachineDR=$lg($g(^dbo.RPVisitNumberTestSetD(VisNumTSDR)),5) .i WorkGPMiDR\u0026#39;=tWorkGroupMachineDR q .s TestSetFee=TestSetFee+$lg($g(^dbo.RPVisitNumberTestSetD(VisNumTSDR)),8) .i $l(TestSetDesc) s TestSetDesc=TestSetDesc_\u0026#34;+\u0026#34;_$lg($g(^dbo.BTTestSetD(TestSetDR)),3) .e s TestSetDesc=$lg(^dbo.BTTestSetD(TestSetDR),3) .s CheckTSList=CheckTSList_\u0026#34;@\u0026#34;_$lg($g(^dbo.BTTestSetD(TestSetDR)),3)_\u0026#34;^\u0026#34;_$lg($g(^dbo.RPVisitNumberTestSetD(VisNumTSDR)),8) i $l(TestSetQueryDR),\u0026#39;$l(TestSetDesc) q //加上手工计费的价格 S PriceManual=0 s OrdItem=\u0026#34;\u0026#34; f s OrdItem=$o(^dbo.RPVisitNumberManualAccountI(\u0026#34;IndexOrdItem\u0026#34;,VisitNumberDR,OrdItem)) q:OrdItem=\u0026#34;\u0026#34; d .s OperateTypeDR=\u0026#34;\u0026#34; f s OperateTypeDR=$o(^dbo.RPVisitNumberManualAccountI(\u0026#34;IndexOrdItem\u0026#34;,VisitNumberDR,OrdItem,OperateTypeDR)) q:OperateTypeDR=\u0026#34;\u0026#34; d ..s VNMDR=\u0026#34;\u0026#34; f s VNMDR=$o(^dbo.RPVisitNumberManualAccountI(\u0026#34;IndexOrdItem\u0026#34;,VisitNumberDR,OrdItem,OperateTypeDR,VNMDR)) q:VNMDR=\u0026#34;\u0026#34; d ...s Quantity=$lg($g(^dbo.RPVisitNumberManualAccountD(VNMDR)),7) ...s MnualPrice=$lg($g(^dbo.RPVisitNumberManualAccountD(VNMDR)),8) ...s PriceManual=PriceManual+(Quantity*MnualPrice) i PriceManual\u0026gt;0 s TestSetFee=TestSetFee_\u0026#34;+\u0026#34;_PriceManual_\u0026#34;=\u0026#34;_(TestSetFee+PriceManual) ;i ReportTypeFlag=0 q i \u0026#39;$d(VisNumTSDR) d .s VisNumTSDR = \u0026#34;\u0026#34; s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s OutStorageType = $lg(RPVisitNumberData,77) s WGMdr=$lg(ReportData,4) i OutStorageType=4 ,\u0026#39;$d(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexWGMachineDR\u0026#34;,VisitNumberDR,WGMdr)),SplitStatus\u0026#39;=2 q ///4删除,标本多个报告的显示 s HosptialDR = $lg(RPVisitNumberData,21) s LocationDR = $lg(RPVisitNumberData,22),LocationName=\u0026#34;\u0026#34; s LocationTelephone=\u0026#34;\u0026#34; i $l(LocationDR) d .s LocationName = $lg($g(^dbo.BTLocationD(LocationDR)),3) .s LocationTelephone= $lg($g(^dbo.BTLocationD(LocationDR)),8) s DoctorDR = $lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) //申请时间 s RequestDate=$lg(RPVisitNumberData,24) i $l(RequestDate) s RequestDate=$e(RequestDate,1,4)_\u0026#34;-\u0026#34;_$e(RequestDate,5,6)_\u0026#34;-\u0026#34;_$e(RequestDate,7,8) s RequestTime=$lg(RPVisitNumberData,25) i $l(RequestTime) s RequestTime=$zt(RequestTime,1) s RequestDT=RequestDate_\u0026#34; \u0026#34;_RequestTime s WardDR = $lg(RPVisitNumberData,26) s WardName= \u0026#34;\u0026#34; s WardPhoneNo=\u0026#34;\u0026#34; i $l(WardDR) d .s WardName=$lg($g(^dbo.BTWardD(WardDR)),3) .s WardPhoneNo=$lg($g(^dbo.BTWardD(WardDR)),8) s BedNo = $lg(RPVisitNumberData,27) s Symptom=$lg(RPVisitNumberData,28) s SpeciesDR = $lg(RPVisitNumberData,15) s MixLabNo= $lg(RPVisitNumberData,94) s Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s Age = $lg(RPVisitNumberData,18) s AgeUnitDR = $lg(RPVisitNumberData,19) s AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$LG($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) //采集信息 s CollectDate=$lg(RPVisitNumberData,51) i $l(CollectDate) s CollectDate=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8) s CollectTime=$lg(RPVisitNumberData,52) i $l(CollectTime) s CollectTime=$zt(CollectTime,1) s CollectDT=\u0026#34;\u0026#34; i $l(CollectDate) s CollectDT=CollectDate_\u0026#34; \u0026#34;_CollectTime s CollectUserDR=$lg(RPVisitNumberData,53),CollectUser=\u0026#34;\u0026#34; i $l(CollectUserDR) s CollectUser=$lg($g(^dbo.SYSUserD(CollectUserDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) i $l(ReceiveDate) s ReceiveDate=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8) s ReceiveTime=$lg(RPVisitNumberData,67) i $l(ReceiveTime) s ReceiveTime=$zt(ReceiveTime,1) s ReceiveDT = \u0026#34;\u0026#34; i $l(ReceiveDate) s ReceiveDT=ReceiveDate_\u0026#34; \u0026#34;_ReceiveTime s SpecimenDR=$lg(RPVisitNumberData,56),SpecimenDesc=\u0026#34;\u0026#34; i $l(SpecimenDR) s SpecimenDesc=$lg($g(^dbo.BTSpecimenD(SpecimenDR)),3) s ContainerDR=$lg(RPVisitNumberData,57) ;管型 ContainerDR,ContainerDesc s (ContainerDesc,ContainerColor)=\u0026#34;\u0026#34; i $l(ContainerDR) d .s ContainerDesc=$lg($g(^dbo.BTContainerD(ContainerDR)),3) .s ContainerColor=$lg($g(^dbo.BTContainerD(ContainerDR)),6) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s Labno=$lg(RPVisitNumberData,2) s RegNo=$lg(RPVisitNumberData,3) s ReportTestSetType=\u0026#34;\u0026#34; s RecordNo=$lg(RPVisitNumberData,6) s Urgent=$lg(RPVisitNumberData,50) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),3) s LocationDR=$lg(RPVisitNumberData,22),LocationName=\u0026#34;\u0026#34; i $l(LocationDR) s LocationName=$lg($g(^dbo.BTLocationD(LocationDR)),3) i LocationName[\u0026#34;-\u0026#34; s LocationName=$p(LocationName,\u0026#34;-\u0026#34;,2) s EpisodeNo=$lg(ReportData,8) i $l(fEpisodeNo),fEpisodeNo\u0026#39;=EpisodeNo q s AssayNo1=$lg(ReportData,6) s Status=$lg(ReportData,22) s Printed=$lg(ReportData,30) s Readed=$lg(ReportData,31) s SpecimenQualityDR=$lg(RPVisitNumberData,69) s SpecimenQualityDesc=\u0026#34;\u0026#34; i $l(SpecimenQualityDR) s SpecimenQualityDesc=$lg($g(^dbo.BTSpecimenQualityD(SpecimenQualityDR)),3) i $d(^DHCLISReportPrint(ReportDR)) s Printed=1 //打印者查询 i $d(^dbo.RPVisitNumberReportPrintI(\u0026#34;IndexModuleID\u0026#34;,ReportDR))\u0026#39;=0 s Printed=1 s PrintedUserName=\u0026#34;\u0026#34; i Printed=1 d .s PrintDate = $o(^dbo.RPVisitNumberReportPrintI(\u0026#34;IndexMaster\u0026#34;,ReportDR,0)) .i $l(PrintDate) s PrintTime = $o(^dbo.RPVisitNumberReportPrintI(\u0026#34;IndexMaster\u0026#34;,ReportDR,PrintDate,0)) .i $l(PrintDate) s ReportPrintDR = $o(^dbo.RPVisitNumberReportPrintI(\u0026#34;IndexMaster\u0026#34;,ReportDR,PrintDate,PrintTime,\u0026#34;\u0026#34;)) .i $l($g(ReportPrintDR)) d ..S PrintUserDR = $lg(^dbo.RPVisitNumberReportPrintD(ReportPrintDR),5) ..i $l(PrintUserDR) s PrintedUserName = $lg(^dbo.SYSUserD(PrintUserDR),3) s StatusDesc=$s(Status=\u0026#34;1\u0026#34;:\u0026#34;登记\u0026#34;,Status=\u0026#34;2\u0026#34;:\u0026#34;初审\u0026#34;,Status=\u0026#34;3\u0026#34;:\u0026#34;\u0026lt;b\u0026gt;审核\u0026lt;/b\u0026gt;\u0026#34;,Status=\u0026#34;4\u0026#34;:\u0026#34;复查\u0026#34;,Status=\u0026#34;5\u0026#34;:\u0026#34;取消\u0026#34;,Status=\u0026#34;6\u0026#34;:\u0026#34;作废\u0026#34;,Status=\u0026#34;O\u0026#34;:\u0026#34;其他\u0026#34;,Status=\u0026#34;10\u0026#34;:\u0026#34;培养中\u0026#34;,Status=\u0026#34;11\u0026#34;:\u0026#34;鉴定中\u0026#34;,Status=\u0026#34;12\u0026#34;:\u0026#34;药敏中\u0026#34;) i Status=\u0026#34;6\u0026#34; Quit ///删除医嘱 s AcceptDate=$lg(ReportData,9),ColStyler=\u0026#34;\u0026#34; i $l(AcceptDate) s AcceptDate=$e(AcceptDate,1,4)_\u0026#34;-\u0026#34;_$e(AcceptDate,5,6)_\u0026#34;-\u0026#34;_$e(AcceptDate,7,8) s AcceptTime=$lg(ReportData,10) i $l(AcceptTime) s AcceptTime=$zt(AcceptTime,1) s AcceptDT = \u0026#34;\u0026#34; i $l(AcceptDate) s AcceptDT=AcceptDate_\u0026#34; \u0026#34;_AcceptTime s AuthDate = $lg(ReportData,19) i $l(AuthDate) s AuthDate=$e(AuthDate,1,4)_\u0026#34;-\u0026#34;_$e(AuthDate,5,6)_\u0026#34;-\u0026#34;_$e(AuthDate,7,8) s AuthTime = $lg(ReportData,20) i $l(AuthTime) s AuthTime=$zt(AuthTime,1) s AuthUserDR = $lg(ReportData,21) s AuthUserName=\u0026#34;\u0026#34; i $l(AuthUserDR) s AuthUserName=$lg($g(^dbo.SYSUserD(AuthUserDR)),3) s AuthDT = \u0026#34;\u0026#34; i $l(AuthDate) s AuthDT=AuthDate_\u0026#34; \u0026#34;_AuthTime i Status=1,+$tr($zd($h,3),\u0026#34;-\u0026#34;)\u0026gt;AcceptDate s ColStyler=\u0026#34;color:red;\u0026#34; //打印标记 i Status=3,Printed=1 s ColStyler=\u0026#34;color:#cc3399;\u0026#34; s ResultFlag=\u0026#34;N\u0026#34; //结果标记 ///仪器结果标记 s TransmitDate=$lg(ReportData,3) s tAssayNo=$lg(ReportData,6) i $l(tAssayNo),$d(^dbo.RPMachineResultI(\u0026#34;IndexMaster\u0026#34;,WorkGPMiDR,TransmitDate,##Class(LIS.Util.Common).IndexData(tAssayNo))),Status=\u0026#34;1\u0026#34; s ResultFlag=\u0026#34;Y\u0026#34; i $l(TransmitDate) s TransmitDate=$lg($g(^dbo.SYSUserD(TransmitDate)),3) ///感染标志 s InfectFlag=$lg(RPVisitNumberData,43) s InfectAlert=$lg(RPVisitNumberData,44) s AddType=$lg(RPVisitNumberData,83) i SplitStatus=\u0026#34;2\u0026#34; s TestSetDesc=\u0026#34;\u0026#34; //拆分报告不显示医嘱 //身份证 s IDNumber=$lg(RPVisitNumberData,11) //地址 s Address=$lg(RPVisitNumberData,41) //联系电话 s MobileNo=$lg(RPVisitNumberData,29) //报告是否收藏 s CollectedFlag=##class(LIS.WS.BLL.DHCCollectReport).isCollectedMTHD(ReportDR,RegNo) S NoCheckList=\u0026#34;\u0026#34; i IsUnCheckTS=1 s NoCheckList=##Class(LISSP.DHCRPVisitNumber).GetUnCheckTSInfo(fLabno,\u0026#34;\u0026#34;,Sessions,\u0026#34;1\u0026#34;) //查询 i $e(fLabno)=\u0026#34;*\u0026#34;,$d(^LISTMPDATA(\u0026#34;WHSYZ\u0026#34;,Labno)) d\t//YHR 20240409 接收标本时查询老系统未核收医嘱 .s AllTSList=\u0026#34;\u0026#34; .s TestSetDR=\u0026#34;\u0026#34; f s TestSetDR=$o(^LISTMPDATA(\u0026#34;WHSYZ\u0026#34;,fLabno,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; d ..s AllTSList=AllTSList_TestSetDR_\u0026#34;@@\u0026#34; ..b ;a103 .s NoCheckList=##Class(LISSP.DHCRPVisitNumber).GetUnCheckTSInfo(fLabno,AllTSList,Sessions,\u0026#34;1\u0026#34;) //查询 Set Data=$lb(MixLabNo,VisitNumberDR,Status,StatusDesc,tAssayNo,AssayNo1,EpisodeNo,Labno,RegNo,RecordNo,PatName,Urgent,TestSetDesc,TestSetFee,ContainerDR,SpecimenDR,SpecimenDesc,AdmType,ReportDR,ResultFlag,WorkGPMiDR,TransmitDate,AcceptDate,AcceptTime,AcceptDT,ColStyler,InfectFlag,InfectAlert,AddType,HosptialDR,LocationDR,LocationName,DoctorDR,WardDR,BedNo,SpeciesDR,Age,AgeUnitDR,VisNumTSDR,Printed,ReceiveDate,ReceiveTime,ReceiveDT,AuthDT,AuthUserDR,AuthUserName,Readed,AdmTypeDR,Species,PrintedUserName,SpecimenQualityDR,SpecimenQualityDesc,AgeUnit,SplitStatus,RackNo,WorkGroupMachineName,CollectedFlag,LocationTelephone,WardName,WardPhoneNo,NoCheckList,CheckTSList,ContainerDesc,ContainerColor,Doctor,RequestDT,Symptom,IDNumber,Address,MobileNo,CollectDate,CollectTime,CollectDT,CollectUser) ;set ColFields=\u0026#34;MixLabNo,VisitNumberDR,Status,StatusDesc,tAssayNo,AssayNo1,EpisodeNo,Labno,RegNo,MedicalRecordNo,PatName,Urgent,TestSetDesc,TestSetFee,ContainerDR,SpecimenDR,SpecimenDesc,AdmType,ReportDR,ResultFlag,WorkGPMiDR,TransmitDate,AcceptDate,AcceptTime,AcceptDT,ColStyler,InfectFlag,InfectAlert,AddType,HosptialDR,LocationDR,LocationName,DoctorDR,WardDR,BedNo,SpeciesDR,Age,AgeUnitDR,VisNumTSDR,Printed,ReceiveDate,ReceiveTime,ReceiveDT,AuthDT,AuthUserDR,AuthUserName,Readed,AdmTypeDR,Species,PrintedUserName,SpecimenQualityDR,SpecimenQualityDesc,AgeUnit,SplitStatus,RackNo,WorkGroupMachineName,CollectedFlag,LocationTelephone,WardName,WardPhoneNo,NoCheckList,CheckTSList,ContainerDesc,ContainerColor,Doctor,RequestDT,Symptom,IDNumber,Address,MobileNo\u0026#34; Set ^CacheTemp(repid,ind)=Data Set ind=ind+1 Quit } ClassMethod QryWorkListByLabnoClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = QryWorkListByLabnoExecute ] { Set repid=$li(qHandle,2) Kill ^CacheTemp(repid) Quit $$$OK } ClassMethod QryWorkListByLabnoFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = QryWorkListByLabnoExecute ] { Set AtEnd=$li(qHandle,1) Set repid=$li(qHandle,2) Set ind=$li(qHandle,3) Set ind=$o(^CacheTemp(repid,ind)) If ind=\u0026#34;\u0026#34; {\tSet AtEnd=1 Set Row=\u0026#34;\u0026#34; } else {\tSet Row=^CacheTemp(repid,ind) } Set qHandle=$lb(AtEnd,repid,ind) Quit $$$OK } 补充内容 json读取解析方法 1 Set objItems=##class(LIS.Util.COM.JSONUtils).%New().FromJSON(Param) json编写方法 1 2 3 4 5 6 7 S Main={} s Main.\u0026#34;receivestatus\u0026#34;=ResultCode s Date=$h s Main.\u0026#34;receivedate\u0026#34;=$tr($zd($p(Date,\u0026#34;,\u0026#34;,1),3),\u0026#34;-\u0026#34;,\u0026#34;.\u0026#34;) s Main.\u0026#34;receivetime\u0026#34;=$tr($zd($p(Date,\u0026#34;,\u0026#34;,1),3),\u0026#34;-\u0026#34;,\u0026#34;.\u0026#34;)_\u0026#34; \u0026#34;_$zt($p(Date,\u0026#34;,\u0026#34;,2),1) s Main.\u0026#34;labno\u0026#34;=Labno set OutStr=Main.%ToJSON() 将数据转成流数据 1 2 s stream=##class(%GlobalCharacterStream).%New() d stream.Write(OutStr) 切换命名空间方法 1 2 3 4 5 6 s CurNamespace=$ZUTIL(5) s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() NEW $NAMESPACE s $NAMESPACE= WebNamespace s Input=##Class(LISAPP.LIS.BLL.DHCReceiveInterface).GetLabNoInfoSFHIS(Labno,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) s $NAMESPACE= CurNamespace xml读取方法 1 s obj= ##class(LIS.Util.COM.XML).FromXML(Input) xml编写方法 1 2 3 4 5 6 7 8 9 s RequestXML=##class(LIS.Util.COM.XML).New(\u0026#34;Request\u0026#34;) s OrdersXML=##class(LIS.Util.COM.XML).New(\u0026#34;Orders\u0026#34;) s objVisitNumber=##class(LIS.Util.COM.XML).New(\u0026#34;OrderList\u0026#34;) s RequestXML.ResultCode=\u0026#34;-1\u0026#34; s RequestXML.ResultContent=\u0026#34;查询标本信息失败:HIS条码信息不存在！\u0026#34; //YHR 20240410 老系统查询返回信息为空时返回 d OrdersXML.Insert(objVisitNumber) d RequestXML.Insert(OrdersXML) s RetValue=RequestXML.ToXMLStream() } 附录 字段对照 序号 字段名称 字段说明 是否必填 备注 ResultCode 返回代码 0：成功，非0:失败 ResultContent 失败原因 Orders OrderList 1 LabNo 标本条码号 是 2 ArcimCode 医嘱代码 是 3 ArcimDesc 医嘱名称 是 4 OrderQty 医嘱数量 是 5 BillCode 账单状态代码 否 P:计费，非P：未计费。仅对门诊或急诊标本有效。 6 SpecimenTypeCode 标本类型代码 是 7 SpecimenTypeDesc 标本类型名称 是 8 SpVolume 标本采集量 否 9 ColInfo 标本采集说明 否 10 ColDate 标本采集日期 否 格式:YYYY-MM-DD,如：2018-05-12 11 ColTime 标本采集时间 否 12 SpecUserCode 标本采集用户代码 否 13 Container 标本采集容器代码 否 14 GTSeq 糖耐量序号 否 15 SpecFlag 特殊标志 否 16 VerifyDate 医嘱申请日期 否 17 VerifyTime 医嘱申请时间 18 AppDeptCode 申请科室代码 是 19 AppDeptDesc 申请科室名称 是 20 RecDeptCode 接收科室代码 否 21 RecDeptDesc 接收科室名称 否 22 TSPrice 医嘱费用 是 23 OrderStatus 医嘱状态 是 E 执行V 审核D 停止 24 DocCode 申请医生代码 是 25 DocDesc 申请医生姓名 是 26 RepLoct 取报告地点 否 27 RepDate 取报告日期 否 28 RepTime 取报告时间 否 29 Note 医嘱申请说明 否 30 AdmNo 就诊号 否 31 AdmDate 就诊日期 否 格式:YYYY-MM-DD,如：2018-05-12 32 AdmTime 就诊时间 否 33 AdmTypeCode 就诊类型代码 是 I住院,O门诊,H体检,E急诊,N新生儿,R科研,P药理,G其他 34 AdmTypeDesc 就诊类型名称 否 35 FeeType 费用类型 否 36 PatientWard 病房 否 37 BedNo 床号 否 38 Diagnose 诊断 否 39 RegisterNo 登记号/病人ID 否 40 PatientName 姓名 是 41 SexCode 性别代码 是 42 SexDesc 性别名称 是 43 DOB 出生日期 是 格式:YYYY-MM-DD,如：2018-05-12 44 Age 年龄 是 45 AgeUnit 年龄描述 是 46 DocumentID 病案号 否 47 PatientAddress 地址 否 48 IdentityCardNo 就诊卡号 否 49 Telephone 联系电话 否 50 SpecUserCode 采集人代码 否 51 SpecUserName 采集人名称 否 52 StartDate 要求执行日期 否 53 StartTime 要求执行时间 否 54 SendFlag 标识 否 NW:申请，CA:取消 55 SpecRemark 采集说明备注 否 56 CarryDate 运送日期 否 57 CarryTime 运送时间 否 58 CarryUserDR 运送人代码 否 59 CarryUserName 运送人名称 否 60 CarryNote 运送说明 否 ‍\n","date":"2025-01-12T00:00:00Z","image":"https://work.717170.xyz/p/%E7%AC%AC%E4%B8%89%E6%96%B9his%E5%92%8C%E4%BD%93%E6%A3%80%E6%8E%A5%E5%8F%A3%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B920250112235959/assets/image-20240416202732597-20241220161447-o63hdgy_hu_738184e886be166.png","permalink":"https://work.717170.xyz/p/%E7%AC%AC%E4%B8%89%E6%96%B9his%E5%92%8C%E4%BD%93%E6%A3%80%E6%8E%A5%E5%8F%A3%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B920250112235959/","title":"第三方his和体检接口相关内容"},{"content":"‍\ntitle: 功能对应路径\nslug: 功能对应路径 20250110002410\ndescription:\ndate: 2025-01-10\nlastmod: 2025-01-10\nimage: /img/title.jpg\nmath:\nlicense:\nhidden: false\ndraft: false\npassword:\ncategories: [\u0026quot;\u0026quot;]\ntags: [\u0026quot;\u0026quot;]\n结果异常改变打印颜色 HIS.DHCReportPrint\n在此处添加异常结果信息\n更新模板所有字段 HIS.DHCReportPrintBase\nlis 设置默认打印机 HIS.DHCReportPrintBarCode\n1.设置打印机名称为 tiaoma\n2.创建打印机副本命名为条码\n3.修改代码默认打印机名称\n模板设计器增加可用元素 HIS.DHCReportPrint // 添加可用参数\nHIS.DHCReportPrintBase //更新 global\n初始化字符串位置\n拼接 RetStr 字符串\n保存标本登记存储过程 LISSP.DHCRPVisitNumber\n接收用户提示不存在\n自动任务（lis 和 his 信息同步，拒收） TASK.LisRealTimeInterface\nw ##Class(TASK.LISRealTimeTask).Do()\n#\n同步 his 数据 LIS.Util.SyncData\n同步病区和科室数据，利用sql进行数据同步\n标本接收核收 （LISSP.DHCRPVisitNumber).ReceiveVisitNumber\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Param.P0 C:集中接收 H:核收 Param.P1检测号(流水号/条码号) Param.P2细菌鉴定号 Param.P3流水号 Param.P4核收者 Param.P5接收备注ReceiveNotes Param.P6接收质量SpecimenQualityDR Param.P7接收医嘱列表VisTSDRLists Param.P8工作小组idWorkGroupMachineDR Param.P9 CarryUserDR Param.P10接收时间TransmitDate Param.P11 CheckTestSetDRList Param.P12 RackNo Param.P13接收IP Param.P14 ExParaList 格式：送达人信息@ w ##Class(LISSP.DHCRPVisitNumber).ReceiveVisitNumber(\u0026#34;1000253031\u0026#34;,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P11\u0026gt;@\u0026lt;/P11\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;P14\u0026gt;@\u0026lt;/P14\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P13\u0026gt;10.20.25.174\u0026lt;/P13\u0026gt;\u0026lt;P0\u0026gt;H\u0026lt;/P0\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P3\u0026gt;22\u0026lt;/P3\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P10\u0026gt;2023-08-23\u0026lt;/P10\u0026gt;\u0026lt;P8\u0026gt;6\u0026lt;/P8\u0026gt;\u0026lt;P4\u0026gt;11627\u0026lt;/P4\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;11627^4^0^13^1\u0026#34;) BS 标本接收 HIS.DHCReceiveWebService——ReceiveAllHIS\nHIS.DHCReceiveProcess——ReceiveAllBS\nHIS.DHCReceiveCommon——CheckSampleInfo\n标本审核 w ##Class(LISSP.DHCRPVisitNumberReport).SaveResult(\u0026ldquo;2507\u0026rdquo;,\u0026quot; A ^^^^^81^^^^^^^^^ 127.0.0.1 611^^1017^^测试^^^^^^^^A^^^^*10~9/L^^^^4^^^^^^2017-11-01^^09:02:32^^1^^^^^^^^^^^^^^^^^^2507@@ \u0026ldquo;,\u0026rdquo; 11327^^21 \u0026ldquo;)\n微生物审核 LIS.WS.BLL.DHCRPMicReportSave\n/// w ##Class(IDP.WS.BLL.DHCIDPResult).EndIDPReportMTHD(\u0026ldquo;1597887@715\u0026rdquo;, \u0026ldquo;3\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;8280\u0026rdquo;, \u0026ldquo;11521\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;1159540161\u0026rdquo;)\n保存条码医嘱信息 HIS.DHCReceiveCommon——SaveLabNoTSInfo\n//签收生成上传信息\n报告处理页面功能 (检验)LIS.WS.BLL.DHCRPReportManage.QryWorkList\n(微生物)LIS.WS.BLL.DHCRPMicNumberReport.QryLabInformatin\n参考范围方法 LISSP.BLL.DHCCommonInterface\n保存标本登记存储过程 LISSP.DHCRPVisitNumber\n首页功能显示 LISSTAT.LIS.QryST.HomePage\n报告查询 老 LIS.WS.BLL.DHCRPQueryReport\n新 LIS.WS.BLL.DHCReportQuery\n新 LIS.WS.BLL.DHCLISReportPrint\t自助程序\n标本状态查询 LIS.WS.BLL.DHCStatSample\n输血打印 申请单 HIS.DHCReportPrintReqForm\n发血单 HIS.DHCReportPrintXM\n审批单 HIS.DHCBDPrintBigReqform\n配血单 HIS.DHCReportPrintXMMethod\n取血单 HIS.DHCReportPrintTakeRecordPack\n服务器问题弹窗 LIS.WS.DHCLISServiceBase\n获取工作小组最大流水号 w ##class(LISSP.DHCRPVisitNumberReport).GetMaxEpisodeNo(\u0026ldquo;12\u0026rdquo;)\n通过编号规则获取流水号 编号规则面向所有需要编号的业务提供服务，只需要维护规则业务调用接口得到编号即可，走号不与业务耦合 调用接口, 通过规则主键得到下一号: w ##class(LIS.WS.BLL.DHCLISRuleNo).GetNextNoByRowIDMTHD(\u0026ldquo;1\u0026rdquo;) 调用接口, 通过规则代码得到下一号: w ##class(LIS.WS.BLL.DHCLISRuleNo).GetNextNoByCodeMTHD(\u0026ldquo;001\u0026rdquo;, \u0026ldquo;\u0026rdquo;) 调用接口, 取消号的使用释放可用号: w ##class(LIS.WS.BLL.DHCLISRuleNo).CancelNoUse(\u0026rdquo;\u0026quot;, \u0026ldquo;\u0026quot;)或 CancelNoUseByRowIDMTHD(\u0026rdquo;\u0026quot;, \u0026ldquo;\u0026rdquo;)\n自动核收方法 w ##Class(LIS.Common.DHCVisitNumber).ReceiveLabNoByWGMWithMsg(\u0026ldquo;4\u0026rdquo;, \u0026ldquo;1000100975\u0026rdquo;, \u0026ldquo;\u0026rdquo;)\n///标本核收 s retVal =$$ReceiveLabno^MI.MIF000(mi, epis, RackNo) i retVal\u0026rsquo;= 1 Quit\n检验公共消息接口 d ##Class(TASK.LISRealTimeTask).Do()\n检验仪器自启任务 d ##Class(MI.Common.MachineControl).StartAll()\n主动上传方法 复查 LIS.Common.DHCVisitNumber\u0026ndash;CreateUploadRecordMTHD\n拒收 LISSP.DHCRPVisitNumber\u0026ndash;RejectVisitNumber\n外送方法 LIS.Service.ENS.SaveReport\n查询 his 用户信息 LIS.WS.BLL.HISSSUser\n根据就诊号, 化验项目, 审核日期查询对照码结果 web.DHCENS.STBLL.Method.GetResult\n标本状态查询 d ##Class(%ResultSet).RunQuery(\u0026ldquo;LIS.WS.BLL.DHCStatSample\u0026rdquo;, \u0026ldquo;QryStatSample\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;9000000762\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;20\u0026rdquo;, \u0026ldquo;1\u0026rdquo;, \u0026ldquo;11370121\u0026rdquo;)\n回退拒收标本 w ##Class(LISSP.DHCRPVisitNumber).RejectVisitNumber(\u0026ldquo;00000000574\u0026rdquo;, \u0026ldquo; 5 ​\u0026lt;/P2\u0026gt;​ ​\u0026lt;P10\u0026gt;​ ​\u0026lt;/P10\u0026gt;​ ​\u0026lt;P11\u0026gt;​ ​\u0026lt;/P11\u0026gt;​ ​\u0026lt;P13\u0026gt;​ ​\u0026lt;/P13\u0026gt;​ ​\u0026lt;P4\u0026gt;​ ​\u0026lt;/P4\u0026gt;​ ​\u0026lt;P14\u0026gt;​ ​\u0026lt;/P14\u0026gt;​ ​\u0026lt;P0\u0026gt;​ 19 ​\u0026lt;/P0\u0026gt;​ ​\u0026lt;P1\u0026gt;​ ​\u0026lt;/P1\u0026gt;​ ​\u0026lt;P9\u0026gt;​ ​\u0026lt;/P9\u0026gt;​ ​\u0026lt;P7\u0026gt;​ ​\u0026lt;/P7\u0026gt;​ ​\u0026lt;P5\u0026gt;​ 113.140.81.66 ​\u0026lt;/P5\u0026gt;​ ​\u0026lt;/Data\u0026gt;​\u0026quot;, \u0026quot;1137012^1\u0026rdquo;)\nHIS 导入数据 DHCLIS.DHCBTData\n查询仪器监控数据 \u0026ldquo;LIS.WS.BLL.DHCMachineParameter\u0026rdquo;, \u0026ldquo;QryMachineTransferResult\u0026rdquo;\n^TMPMACHRESULT(MachID, SttDate),-1)\n标本核收界面通过登记号查询信息 /// d ##Class(%ResultSet).RunQuery(\u0026ldquo;LIS.WS.BLL.DHCHisOrderItem\u0026rdquo;, \u0026ldquo;QryHisOrderItemListByRegNo\u0026rdquo;, \u0026ldquo;0000000006\u0026rdquo;, \u0026ldquo;13\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;\u0026rdquo;, \u0026ldquo;82803021\u0026rdquo;)\n基础数据查询公用方法 LIS.WS.BLL.DHCLISBaseCore\n推送 otmsg 消息 LISSP.BLL.DHCOTMsgStock\t微生物审核调用 LISSP.BLL.DealMsgQueue\t普通审核调用\n定时任务 【dhc-app】web.DHCLisRealTimeInterface\nd ##Class(LIS.WS.DHCLISServiceBase).ManaInvoke(\u0026ldquo;TASK.LISRealTimeTask\u0026rdquo;, \u0026ldquo;Do\u0026rdquo;) 新\n报表授权 zn \u0026ldquo;%sys\u0026rdquo;\nd ##class(BSP.SMP.DHCManageRolesAndUsers).GrantRolesSQLPrivilege()\n保存危急值处理消息 w ##Class(DHCLIS.DHCCommon).SaveTransPanicNotice(37, \u0026ldquo;01697\u0026rdquo;, \u0026ldquo;fasf231312^afdafsa\u0026rdquo;, \u0026ldquo;\u0026rdquo;)\n通用根据条件query查询数据 LISSTAT.LIS.ComQuery.Condition\n​​\n","date":"2025-01-12T00:00:00Z","image":"https://work.717170.xyz/p/%E5%8A%9F%E8%83%BD%E5%AF%B9%E5%BA%94%E8%B7%AF%E5%BE%8420250112235959/assets/image-20230327182228977-20241227020427-8nbvjef_hu_4be4909f822ffffb.png","permalink":"https://work.717170.xyz/p/%E5%8A%9F%E8%83%BD%E5%AF%B9%E5%BA%94%E8%B7%AF%E5%BE%8420250112235959/","title":"功能对应路径"},{"content":" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 /// d ##class(MI.TEST.THBB).THBB(\u0026#34;3333133\u0026#34;) ClassMethod THBB(VisitNumberReportDR) { // 审核标本 ;s VisitNumberReportDR=\u0026#34;3333133\u0026#34; s Sessions=\u0026#34;1^25^0^2^16\u0026#34; s VisitNumberDR=$lg($g(^dbo.RPVisitNumberReportD(VisitNumberReportDR)),2) s VisitNumber=$lg($g(^dbo.RPVisitNumberD(VisitNumberDR)),2) w \u0026#34;处理标本:\u0026#34;_VisitNumber_\u0026#34;,报告ID为:\u0026#34;_VisitNumberReportDR,! d ..RecordGlobal(\u0026#34;处理标本:\u0026#34;_VisitNumber_\u0026#34;,报告ID为:\u0026#34;_VisitNumberReportDR) s Status=$lg($g(^dbo.RPVisitNumberReportD(VisitNumberReportDR)),22) i Status=\u0026#34;3\u0026#34; d QXSH s Status=$lg($g(^dbo.RPVisitNumberReportD(VisitNumberReportDR)),22) i ((Status=\u0026#34;5\u0026#34;)||(Status=\u0026#34;2\u0026#34;)) d FHDJ s Status=$lg($g(^dbo.RPVisitNumberReportD(VisitNumberReportDR)),22) i Status\u0026#39;=1 q // 清除结果 // \u0026#34;3333126\u0026#34;,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P0\u0026gt;\u0026lt;/P0\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;1^25^0^2^16\u0026#34; s Param=\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P0\u0026gt;\u0026lt;/P0\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34; s ret=##class(LISSP.DHCRPVisitNumberReport).ClearResult(VisitNumberReportDR,Param,Sessions) i ret=1 d .w VisitNumber_\u0026#34;清除结果成功\u0026#34;,! .d ..RecordGlobal(VisitNumber_\u0026#34;清除结果成功\u0026#34;) ;b ;清除结果 // 回退标本 // \u0026#34;8000000023\u0026#34;,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P0\u0026gt;1\u0026lt;/P0\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P5\u0026gt;10.82.2.3\u0026lt;/P5\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P2\u0026gt;^1022^1106\u0026lt;/P2\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;1^25^0^2^16\u0026#34; s TestSetDRs=\u0026#34;\u0026#34; s TestSetDR=\u0026#34;\u0026#34; f s TestSetDR=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; d .s TestSetDRs=TestSetDRs_\u0026#34;^\u0026#34;_TestSetDR s Param=\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P0\u0026gt;1\u0026lt;/P0\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P5\u0026gt;10.82.2.3\u0026lt;/P5\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P2\u0026gt;\u0026#34;_TestSetDRs_\u0026#34;\u0026lt;/P2\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34; s ret=##Class(LISSP.DHCRPVisitNumber).RejectVisitNumber(VisitNumber,Param,Sessions) i ret=1 w \u0026#34;回退标本成功\u0026#34;,! ;b ;回退标本 q QXSH w VisitNumber_\u0026#34;该标本为审核状态，取消审核中\u0026#34;,! d ..RecordGlobal(VisitNumber_\u0026#34;该标本为审核状态，取消审核中\u0026#34;) // 取消审核 // \u0026#34;3333180\u0026#34;,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P3\u0026gt;2\u0026lt;/P3\u0026gt;\u0026lt;P1\u0026gt;1\u0026lt;/P1\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P0\u0026gt;72\u0026lt;/P0\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P2\u0026gt;10.82.2.3\u0026lt;/P2\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;1^25^0^2^16\u0026#34; s WorkGroupMachineDR=$lg($g(^dbo.RPVisitNumberReportD(VisitNumberReportDR)),4) i \u0026#39;$l(WorkGroupMachineDR) s WorkGroupMachineDR=\u0026#34;-1\u0026#34; s Param=\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P3\u0026gt;2\u0026lt;/P3\u0026gt;\u0026lt;P1\u0026gt;1\u0026lt;/P1\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P0\u0026gt;\u0026#34;_WorkGroupMachineDR_\u0026#34;\u0026lt;/P0\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P2\u0026gt;10.82.2.3\u0026lt;/P2\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34; s ret=##class(LISSP.DHCRPVisitNumberReport).ReportUndo(VisitNumberReportDR,Param,Sessions) s successFlag=$p(ret,\u0026#34;^\u0026#34;,1) i ret\u0026#39;=1 q w VisitNumber_\u0026#34;取消审核成功\u0026#34;,! d ..RecordGlobal(VisitNumber_\u0026#34;取消审核成功\u0026#34;) q FHDJ w VisitNumber_\u0026#34;将标本返回登记状态\u0026#34;,! d ..RecordGlobal(VisitNumber_\u0026#34;将标本返回登记状态\u0026#34;) // 返回登记 s Status=$lg($g(^dbo.RPVisitNumberReportD(VisitNumberReportDR)),22) s objReport=##class(dbo.RPVisitNumberReport).%OpenId(VisitNumberReportDR) s objReport.Status=\u0026#34;1\u0026#34; s rc=objReport.%Save() q } /// d ##class(MI.TEST.THBB).SearchVisitNumber() ClassMethod SearchVisitNumber() { // IndexRequestDate\tRPVisitNumber\tHospitalDR, RequestDate s RequestDate=\u0026#34;\u0026#34; f s RequestDate=$o(^dbo.RPVisitNumberI(\u0026#34;IndexRequestDate\u0026#34;,16,RequestDate)) q:RequestDate=\u0026#34;\u0026#34; d .s VisitNumberDR=\u0026#34;\u0026#34; f s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexRequestDate\u0026#34;,16,RequestDate,VisitNumberDR)) q:VisitNumberDR=\u0026#34;\u0026#34; d ..d ReportInfo q ReportInfo s fWorkGPMiDR=\u0026#34;\u0026#34; f s fWorkGPMiDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,fWorkGPMiDR)) q:fWorkGPMiDR=\u0026#34;\u0026#34; d .s fOrderNo=\u0026#34;\u0026#34; f s fOrderNo=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,fWorkGPMiDR,fOrderNo)) q:fOrderNo=\u0026#34;\u0026#34; d ..s ReportDR=\u0026#34;\u0026#34; f s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,fWorkGPMiDR,fOrderNo,ReportDR)) q:ReportDR=\u0026#34;\u0026#34; d ...d ..THBB(ReportDR) q ReportInfo1 s fWorkGPMiDR=\u0026#34;76\u0026#34; s fOrderNo=\u0026#34;\u0026#34; f s fOrderNo=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,fWorkGPMiDR,fOrderNo)) q:fOrderNo=\u0026#34;\u0026#34; d .s ReportDR=\u0026#34;\u0026#34; f s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,fWorkGPMiDR,fOrderNo,ReportDR)) q:ReportDR=\u0026#34;\u0026#34; d ..d ..THBB(ReportDR) q } ClassMethod RecordGlobal(str) { i \u0026#39;$d(^LISTMPData(\u0026#34;THBB\u0026#34;)) d .s Num=1 e s Num=$o(^LISTMPData(\u0026#34;THBB\u0026#34;,\u0026#34;\u0026#34;),-1)+1 s DateTime=$zdt($h,8) s ^LISTMPData(\u0026#34;THBB\u0026#34;,Num,DateTime)=str q } ","date":"2025-01-12T00:00:00Z","image":"https://work.717170.xyz/img/title.jpg","permalink":"https://work.717170.xyz/p/%E6%89%B9%E9%87%8F%E5%8F%96%E6%B6%88%E5%AE%A1%E6%A0%B8%E6%8A%A5%E5%91%8A20250112235959/","title":"批量取消审核报告"},{"content":" MI.MIF000\nI $L(CurMiDR) S IsSendToMI=0//YHR 20250101 不同工作组仪器获取数据\n​​\n‍\n","date":"2025-01-12T00:00:00Z","image":"https://work.717170.xyz/p/%E5%8F%8C%E5%90%91%E4%BB%AA%E5%99%A8%E8%B7%A8%E5%B7%A5%E4%BD%9C%E7%BB%84%E6%9F%A5%E8%AF%A2%E4%B8%8A%E4%BC%A0%E4%BF%A1%E6%81%AF20250112235959/assets/image-20250104102449-p7wll0q_hu_2d8a7bcbaf9d6257.png","permalink":"https://work.717170.xyz/p/%E5%8F%8C%E5%90%91%E4%BB%AA%E5%99%A8%E8%B7%A8%E5%B7%A5%E4%BD%9C%E7%BB%84%E6%9F%A5%E8%AF%A2%E4%B8%8A%E4%BC%A0%E4%BF%A1%E6%81%AF20250112235959/","title":"双向仪器跨工作组查询上传信息"},{"content":"更新位置 获取东华共库模式标本信息获取 LISProxy.BLL.RPVisitNumber.cls(GetLISInerLabNoInfo+7): s RetVal=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).GetILabTestSetInfo(BarCode)\nLISProxy.BLL.RPVisitNumber.cls(GetLISInerLabNoInfo+35): s RetVal=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).GetILabTestSetInfo(BarCode)\nLISProxy.BLL.RPVisitNumber.cls(GetLISInerLabNoInfo+42): s RetVal=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).GetInnerLabNoInfo(BarCode)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 /// Creator: /// CreatDate:\t2021-11-22 /// Description:h获取东华供库模式标本信息获取 /// Table:\t无 /// Global:\t/// Input:\t条码号 /// Return:\t/// Others:\tW ##Class(LISProxy.BLL.RPVisitNumber).GetSampleInfo(\u0026#34;1212\u0026#34;) ClassMethod GetLISInerLabNoInfo(BarCode As %String, SYSCode As %String) As %GlobalCharacterStream { s CurNamespace=$ZUTIL(5) s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() b //中间表取数据 i $d(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,BarCode)) { s RetVal=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).GetILabTestSetInfo(BarCode) } elseif SYSCode=\u0026#34;HIS1\u0026#34; { NEW $NAMESPACE s $NAMESPACE= WebNamespace s RetVal=##class(LISAPP.LIS.BLL.DHCReceiveInterface).GetLabNoInfo(BarCode) s $NAMESPACE= CurNamespace } elseif SYSCode=\u0026#34;HIS3\u0026#34; { //s RetVal=##class(MI.TEST.ReceiveVisitNumber).GetXML(BarCode) //NEW $NAMESPACE s ^DHCLIS(\u0026#34;BARCODE\u0026#34;,1)=BarCode s $NAMESPACE= \u0026#34;DHC-APP\u0026#34; //s RetVal=##class(LISAPP.LIS.BLL.DHCReceiveInterface).GetLabNoInfo(BarCode) set stream=##class(%GlobalCharacterStream).%New() s messageCode=\u0026#34;MES0068\u0026#34; s xml=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;1\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;20\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;GetPatOrdListRt\u0026gt;\u0026lt;SpecimenID\u0026gt;\u0026#34;_BarCode_\u0026#34;\u0026lt;/SpecimenID\u0026gt;\u0026lt;UpdateUserCode\u0026gt;demo\u0026lt;/UpdateUserCode\u0026gt;\u0026lt;UpdateDate\u0026gt;2024-12-19\u0026lt;/UpdateDate\u0026gt;\u0026lt;UpdateTime\u0026gt;10:00:00\u0026lt;/UpdateTime\u0026gt;\u0026lt;/GetPatOrdListRt\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; //\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;1\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;20\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;GetPatOrdListRt\u0026gt;\u0026lt;SpecimenID\u0026gt;6080005712\u0026lt;/SpecimenID\u0026gt;\u0026lt;UpdateUserCode\u0026gt;demo\u0026lt;/UpdateUserCode\u0026gt;\u0026lt;UpdateDate\u0026gt;2024-12-19\u0026lt;/UpdateDate\u0026gt;\u0026lt;UpdateTime\u0026gt;10:00:00\u0026lt;/UpdateTime\u0026gt;\u0026lt;/GetPatOrdListRt\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt; do stream.Write(xml) s RetVal=##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;S00000064\u0026#34;,messageCode,stream).Read() s $NAMESPACE= \u0026#34;dhc-lisdata\u0026#34; s ^DHCLIS(\u0026#34;BARCODE\u0026#34;)=RetVal s ret=##class(LIS.WS.BLL.DHCENSLabInterface).SaveRequestTestSet(RetVal) s RetVal=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).GetILabTestSetInfo(BarCode) } elseif SYSCode=\u0026#34;OTH\u0026#34; { s RetVal=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).GetInnerLabNoInfo(BarCode) } elseif SYSCode=\u0026#34;YG\u0026#34; { s RetVal=##Class(LISProxy.BLL.ReceiveYGVisitNmber).GetLabNoInfo(BarCode) } q RetVal } ​​\n执行医嘱 HIS.DHCReceiveInterface.cls(ExecOrdItem+8)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 /// Creator： huangliangliang /// CreatDate： 202100202 /// Description:： 执行医嘱 /// Input： Labno 条码号（必传） TestSetList 执行医嘱列表（格式如下医嘱主键@S@第三方或HIS医嘱主键@S@医嘱价格@I@医嘱主键@S@第三方或HIS医嘱主键@S@医嘱价格） UserCode 用户代码（执行医嘱用户） /// Output： /// Return： 1成功 其他失败 /// Others： /// w ##class(HIS.DHCReceiveInterface).GetLabNoInfo ClassMethod ExecOrdItem(Labno As %String, Usercode As %String, TestSetList As %String(MAXLEN=1000)) As %String { // 获取条码类型 s LabNoType=##class(LIS.Common.DHCVisitNumber).GetLabNoType(Labno) s retValue=1 //中间表模式 i $d(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,Labno)) { s retValue=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).SetILabTestSetState(Labno,TestSetList,\u0026#34;5\u0026#34;,Usercode) } i LabNoType=\u0026#34;HIS1\u0026#34; { // 获取his NameSpace s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() s $Namespace= WebNamespace s retValue=##Class(LISAPP.LIS.BLL.DHCReceiveInterface).ExecOrdItem(Labno,Usercode,TestSetList) s $Namespace=\u0026#34;DHC-LISDATA\u0026#34; } elseif LabNoType=\u0026#34;HIS2\u0026#34; //老系统条码 { //保存标本医嘱 s ExceTSList=\u0026#34;\u0026#34; s SplitStr=\u0026#34;@S@\u0026#34;,ItemSpitStr=\u0026#34;@I@\u0026#34; f z=1:1:$l(TestSetList,ItemSpitStr) { s TSItem=$p(TestSetList,ItemSpitStr,z) i \u0026#39;$l(TSItem) continue s HISOrderID=$p(TSItem,SplitStr,1) s OrdId=$p(TSItem,SplitStr,1) s OrdSubId=$p(TSItem,SplitStr,2) s TestSetDR=$p(TSItem,SplitStr,3) s TestSetCode=$lg($g(^dbo.BTTestSetD(TestSetDR)),2) S TestSetFee=$p(TSItem,SplitStr,7) S $p(TSItem,SplitStr,3)=TestSetCode //s TSItem=$replace(TSItem,SplitStr,\u0026#34;|\u0026#34;) S ExceTSList=TSItem_\u0026#34;^\u0026#34;_ExceTSList } s ServiceObj=##Class(TransReportService.TransReportServiceSoap).%New() s retValue=ServiceObj.ExecOrdItem(Labno,Usercode,ExceTSList) i retValue=0 s retValue=1 } elseif LabNoType=\u0026#34;T\u0026#34; { // 通过体检webservice获取xml // 解析组装标准xml 是否让平台直接修改提供标准格式 // s LabNoInfo=\u0026#34;\u0026#34;_Labno } elseif LabNoType=\u0026#34;EME\u0026#34; { //\u0026#34;应急预留\u0026#34; } else { s Msg=\u0026#34;未获取到可识别条码类型！\u0026#34; } q retValue } ​​\n保存回插更新中间表状态 HIS.DHCReceiveCommon.cls(SaveLabNoReportInfo+189)\n1 2 //更新中间表数据 s IRet=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).SetILabTSAcceptInfo(objVisitNumberReport.RowID) ​​\n获取条码信息及医嘱信息 HIS.DHCReceiveInterface.cls(GetLabNoInfo+10)\nHIS.DHCReceiveInterface.cls(GetLabNoInfo+46)\n1 2 3 4 5 6 //尝试中间表取数据 i $d(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,Labno)) { s VisitNumberStream=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).GetILabTestSetInfo(Labno,RetType,UserCode) q VisitNumberStream } 1 2 3 4 5 6 elseif LabNoType=\u0026#34;HIS\u0026#34; { s VisitNumberStream=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).GetInnerLabNoInfo(Labno,RetType,UserCode) } ​​\n​​\n检验内部执行 LISProxy.BLL.RPVisitNumber.cls(OrderLISInerItemExec+10): s RetVal=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).SetILabTestSetState(BarCode,TestSetList,\u0026ldquo;5\u0026rdquo;,UserCode)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 /// Creator: /// CreatDate:\t2021-11-22 /// Description:检验内部执行 /// Table:\t无 /// Global:\t/// Input:\t条码号 工号 医嘱列表 系统类型 /// Return:\t/// Others:\tW ##Class(LISProxy.BLL.RPVisitNumber).GetSampleInfo(\u0026#34;1212\u0026#34;) ClassMethod OrderLISInerItemExec(BarCode As %String, UserCode As %String, TestSetList As %String, SYSCode As %String) As %GlobalCharacterStream { s BarCode=$g(BarCode),UserCode=$g(UserCode),TestSetList=$g(TestSetList),SYSCode=$g(SYSCode) s CurNamespace=$ZUTIL(5) s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() s RetVal=\u0026#34;1\u0026#34; //中间表取数据 i $d(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,BarCode)) { s RetVal=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).SetILabTestSetState(BarCode,TestSetList,\u0026#34;5\u0026#34;,UserCode) } elseif SYSCode=\u0026#34;HIS1\u0026#34; { NEW $NAMESPACE s $NAMESPACE= WebNamespace s RetVal=##Class(LISAPP.LIS.BLL.DHCReceiveInterface).ExecOrdItem(BarCode,UserCode,TestSetList) s $NAMESPACE= CurNamespace } elseif SYSCode=\u0026#34;OTH\u0026#34; { //s RetVal=1 // 默认返回1 } q RetVal } ​​\n取消医嘱执行 HIS.DHCReceiveInterface.cls(CancelOrdItem+8)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 /// Creator： huangliangliang /// CreatDate： 202100202 /// Description:： 取消医嘱执行 /// Input： Labno 条码号（必传） HISOrderID 医嘱rowid UserCode 用户代码（执行医嘱用户） /// Output： /// Return： 1成功 其他失败 /// Others： /// w ##class(HIS.DHCReceiveInterface).CancelOrdItem /// / ClassMethod CancelOrdItem(Labno, HISOrderID, UserCode) As %String { // 获取条码类型 s LabNoType=##class(LIS.Common.DHCVisitNumber).GetLabNoType(Labno) s ret=1 //中间表模式 i $d(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,Labno)) { s ret=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).SetILabTSStateByHISOrderID(Labno,HISOrderID,\u0026#34;7\u0026#34;) //q ret } i LabNoType=\u0026#34;HIS1\u0026#34; { // 获取his NameSpace s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() s $Namespace= WebNamespace s ret=##Class(LISAPP.LIS.BLL.DHCReceiveInterface).CancelOrdItem(Labno, HISOrderID, UserCode) i ret=0 s ret=1 s $Namespace=\u0026#34;DHC-LISDATA\u0026#34; } elseif LabNoType=\u0026#34;HIS2\u0026#34; //老系统条码 { s ServiceObj=##Class(TransReportService.TransReportServiceSoap).%New() s ret=ServiceObj.RejectLabReport(Labno, HISOrderID, UserCode) } q ret } ​​\n取消LIS内部医嘱执行 1 2 3 LISProxy.BLL.RPVisitNumber.cls(CancelLISInerOrdItem+10): s RetVal=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).SetILabTestSetState(BarCode,TestSetList,\u0026#34;5\u0026#34;,UserCode) LISProxy.BLL.RPVisitNumber.cls(CancelLISInerOrdItem+11): s ret=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).SetILabTSStateByHISOrderID(BarCode,TestSetList,\u0026#34;7\u0026#34;) LISProxy.BLL.RPVisitNumber.cls(CancelLISInerOrdItem+18): .s ret=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).SetILabTSStateByHISOrderID(BarCode,HISOrderID,\u0026#34;7\u0026#34;) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 /// Creator: /// CreatDate:\t2021-11-22 /// Description:取消LIS内部医嘱执行 /// Table:\t无 /// Global:\t/// Input:\t条码号 工号 医嘱列表 系统类型 /// Return:\t/// Others:\tW ##Class(LISProxy.BLL.RPVisitNumber).GetSampleInfo(\u0026#34;1212\u0026#34;) ClassMethod CancelLISInerOrdItem(BarCode As %String, UserCode As %String, TestSetList As %String, SYSCode As %String) As %GlobalCharacterStream { s BarCode=$g(BarCode),UserCode=$g(UserCode),TestSetList=$g(TestSetList),SYSCode=$g(SYSCode) s CurNamespace=$ZUTIL(5) s WebNamespace=##Class(OTH.SYSParameter).GetWebNamespace() s RetVal=1 //中间表取数据 i $d(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,BarCode)) { s RetVal=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).SetILabTestSetState(BarCode,TestSetList,\u0026#34;5\u0026#34;,UserCode) s ret=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).SetILabTSStateByHISOrderID(BarCode,TestSetList,\u0026#34;7\u0026#34;) s SplitStr=\u0026#34;@I@\u0026#34; s ErrorInfo=\u0026#34;\u0026#34; f i=1:1:$l(TestSetList,SplitStr) d q:$l(ErrorInfo) .s HISOrderID=$p(TestSetList,SplitStr,i) .i \u0026#39;$l(HISOrderID) q .s ret=##Class(LIS.WS.BLL.DHCReceiveInerLanNoInfo).SetILabTSStateByHISOrderID(BarCode,HISOrderID,\u0026#34;7\u0026#34;) .i ret\u0026#39;=0 s ErrorInfo=ret i $l(ErrorInfo) s RetVal=ErrorInfo } elseif SYSCode=\u0026#34;HIS1\u0026#34; { NEW $NAMESPACE s $NAMESPACE=WebNamespace s SplitStr=\u0026#34;@I@\u0026#34; s ErrorInfo=\u0026#34;\u0026#34; f i=1:1:$l(TestSetList,SplitStr) d q:$l(ErrorInfo) .s HISOrderID=$p(TestSetList,SplitStr,i) .i \u0026#39;$l(HISOrderID) q .s ret=##class(LISAPP.LIS.BLL.DHCReceiveInterface).CancelOrdItem(BarCode,HISOrderID,UserCode) .i ret\u0026#39;=0 s ErrorInfo=ret s $NAMESPACE=CurNamespace i $l(ErrorInfo) s RetVal=ErrorInfo } elseif SYSCode=\u0026#34;OTH\u0026#34; { //s RetVal=1 // 默认返回1 } q RetVal } ​​\n设置体检标本号类型 w ##Class(LIS.Common.DHCVisitNumber).GetLabNoType(Labno)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 /// Others w ##Class(LIS.Common.DHCVisitNumber).GetLabNoType(Labno) /// 入参条码号 /// 出参说明如下 /// 东华HIS Parameter DHCS = \u0026#34;HIS1\u0026#34;; /// 东华老HIS Parameter DHCO = \u0026#34;HIS2\u0026#34;; /// 第三方HIS系统 Parameter HIS = \u0026#34;HIS3\u0026#34;; /// 第三方体检系统 Parameter PES1 = \u0026#34;PES1\u0026#34;; /// 第三方体检系统 Parameter PES2 = \u0026#34;PES2\u0026#34;; /// 其它系统 Parameter OTH = \u0026#34;OTH\u0026#34;; ClassMethod GetLabNoType(LabNo) As %String { //默认东华HIS条码类型 s RetType=##Class(LIS.ENUM.SYSCode).#DHCS //手工条码 i $e(LabNo)=\u0026#34;9\u0026#34; s RetType=##Class(LIS.ENUM.SYSCode).#OTH i $e(LabNo)=\u0026#34;8\u0026#34; s RetType=##Class(LIS.ENUM.SYSCode).#OTH\t//YHR 20241226 设置8开头的为分院手工登记标本 i $e(LabNo)=\u0026#34;K\u0026#34; s RetType=##Class(LIS.ENUM.SYSCode).#PES1 i $e(LabNo)=\u0026#34;6\u0026#34; d .s RetType=##Class(LIS.ENUM.SYSCode).#HIS //体检系统接口 i ($e(LabNo)=\u0026#34;O\u0026#34;)||($e(LabNo)=\u0026#34;E\u0026#34;) s RetType=##Class(LIS.ENUM.SYSCode).#YG //东华老HIS系统条码 //i $e(LabNo)=\u0026#34;7\u0026#34;,$L(LabNo)=8 s RetType=##Class(LIS.ENUM.SYSCode).#DHCO Q RetType } ​​\n发送体检报告到体检 触发方法 ​​\n1 2 3 //YHR 20241231 推送结果到体检 i $e(Labno)=6 d .try{s ret=##Class(LIS.Service.ENS.TransReport).SendToTiJian(VisitNumberReportDR)}catch{} 1 2 3 4 5 6 7 8 9 10 11 12 /// d ##class(LIS.Service.ENS.TransReport).SendToTiJian(\u0026#34;3333385\u0026#34;) ClassMethod SendToTiJian(ReportDR) { s xml=..GetReportNew(ReportDR) zn \u0026#34;dhc-app\u0026#34; set stream=##class(%GlobalCharacterStream).%New() do stream.Write(xml) s messageCode=\u0026#34;MES0069\u0026#34; s ret=##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;S00000064\u0026#34;,messageCode,stream) zn \u0026#34;dhc-lisdata\u0026#34; q \u0026#34;\u0026#34; } 调用方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 /// Creator： liuzf /// CreateDate： 2016-04-27 /// Description： 发送标本结果到体检 /// Table： 无 /// Input： 检验号 /// Output： 无 /// Return： 错误信息 /// Others： 无 /// w ##Class(LIS.Service.ENS.TransReport).GetReportNew(\u0026#34;3333181\u0026#34;,\u0026#34;\u0026#34;) ClassMethod GetReportNew(ReportDR As %String, ByRef error As %String) As %String { s ReportDR=$g(ReportDR) //Set $ZTrap = \u0026#34;ErrorHandle\u0026#34; //基本信息 s ^TMP(\u0026#34;YY\u0026#34;,\u0026#34;ReportDR\u0026#34;)=ReportDR s RetStr=\u0026#34;\u0026#34; i \u0026#39;$l(ReportDR) q $$ReturnOut(\u0026#34;无此报告\u0026#34;) i \u0026#39;$l(ReportDR) q $$ReturnOut(\u0026#34;无此报告\u0026#34;) s ReportData=$g(^dbo.RPVisitNumberReportD(ReportDR)) i $lg(ReportData,22)\u0026#39;=3 q $$ReturnOut(\u0026#34;报告未审核\u0026#34;) s VisitNumberDR=$lg(ReportData,2) i \u0026#39;$l(VisitNumberDR) q $$ReturnOut(\u0026#34;无此报告\u0026#34;) s VisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LabNo=$lg(VisitNumberData,2) s gName=$lg(VisitNumberData,14) s sName=$lg(VisitNumberData,13) s patname=gName_\u0026#34; \u0026#34;_sName i gName=sName s patname=gName s spname=\u0026#34;\u0026#34; ;性别 s SpeciesDR=$lg(VisitNumberData,15) i $l(SpeciesDR) s spname=$lg(^dbo.BTSpeciesD(SpeciesDR),3) s patDOB=$lg(VisitNumberData,16) i (patDOB\u0026lt;10000000) s patDOB=$zd(patDOB,8) i $l(patDOB) s patDOB=##Class(LIS.Util.Common).FormatDate(patDOB) s Age=$lg(VisitNumberData,18) s AgeUnitDR=$lg(VisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s patage=Age_AgeUnit // s SpecimenDR=$lg(VisitNumberData,56),specmen=\u0026#34;\u0026#34; ;标本类型 i $l(SpecimenDR) s specmen=$lg($g(^dbo.BTSpecimenD(SpecimenDR)),3) s tsname=\u0026#34;\u0026#34;,TSCode=\u0026#34;\u0026#34; s TestSetDR=\u0026#34;\u0026#34; f s TestSetDR=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; d .i $l(tsname) s tsname=tsname_\u0026#34;+\u0026#34;_$lg(^dbo.BTTestSetD(TestSetDR),3),TSCode=TSCode_\u0026#34;+\u0026#34;_$lg(^dbo.BTTestSetD(TestSetDR),2) .e s tsname=$lg(^dbo.BTTestSetD(TestSetDR),3),TSCode=$lg(^dbo.BTTestSetD(TestSetDR),2) i $l(specmen,\u0026#34;(\u0026#34;)\u0026gt;1 s specmen=$p(specmen,\u0026#34;(\u0026#34;,1) // s patloc=\u0026#34;\u0026#34; ;科室 s LocationDR=$lg(VisitNumberData,22) i $l(LocationDR) s patloc=$lg($g(^dbo.BTLocationD(LocationDR)),3) //申请日期 s requestdate=$lg(VisitNumberData,24) i (requestdate\u0026lt;10000000) s requestdate=$zd(requestdate,8) i $l(requestdate) s requestdate=##Class(LIS.Util.Common).FormatDate(requestdate) // s (recdate,rectime,recusr,entrydate,entrytime,entryusr,authdate,authtime,authusr)=\u0026#34;\u0026#34; s recdate=$lg(VisitNumberData,66) ;接收日期 s rectime=$lg(VisitNumberData,67) ;接收时间 i $l(recdate) s recdate=##Class(LIS.Util.Common).FormatDate(recdate) i $l(rectime) s rectime=##Class(LIS.Util.Common).FormatTime(rectime) s ReceiveUserDR=$lg(VisitNumberData,68) i $l(ReceiveUserDR) s recusr=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s entrydate=$lg(ReportData,16) ;初审日期 s entrytime=$lg(ReportData,17) ;初审时间 i $l(entrydate) s entrydate=##Class(LIS.Util.Common).FormatDate(entrydate) i $l(entrytime) s entrytime=##Class(LIS.Util.Common).FormatTime(entrytime) s EntryUserDR=$lg(ReportData,18) i $l(EntryUserDR) s entryusr=$lg($g(^dbo.SYSUserD(EntryUserDR)),3) s authdate=$lg(ReportData,19) ;核收日期 s authtime=$lg(ReportData,20) ;核收时间 i $l(authdate) s authdate=##Class(LIS.Util.Common).FormatDate(authdate) i $l(authtime) s authtime=##Class(LIS.Util.Common).FormatTime(authtime) s AuthUserDR=$lg(ReportData,21) i $l(AuthUserDR) s authusr=$lg($g(^dbo.SYSUserD(AuthUserDR)),3) // s coldate=$lg(VisitNumberData,51) ;采集日期 s coltime=$lg(VisitNumberData,52) ;采集时间 i $l(coldate) s coldate=##Class(LIS.Util.Common).FormatDate(coldate) i $l(coltime) s coltime=##Class(LIS.Util.Common).FormatTime(coltime) s CollDT=\u0026#34;\u0026#34; i $l(coldate) s CollDT=coldate_\u0026#34; \u0026#34;_coltime // s (recDT,entryDT,authDT)=\u0026#34;\u0026#34; i $l(recdate) s recDT=recdate_\u0026#34; \u0026#34;_rectime i $l(entrydate) s entryDT=entrydate_\u0026#34; \u0026#34;_entrytime i $l(authdate) s authDT=authdate_\u0026#34; \u0026#34;_authtime // s debtor=$lg(VisitNumberData,3) ;登记号 s DoctorDR=$lg(VisitNumberData,23) s docname=\u0026#34;\u0026#34; ;医生 i $l(DoctorDR) s docname=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) //诊断 s patdiag=\u0026#34;\u0026#34; s DiseaseDR=\u0026#34;\u0026#34; f s DiseaseDR=$o(^dbo.RPVisitNumberDiagnoseI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,DiseaseDR)) q:DiseaseDR=\u0026#34;\u0026#34; d .i $l(patdiag) s patdiag=patdiag_\u0026#34;+\u0026#34;_$lg(^dbo.BTDiseaseD(DiseaseDR),4) .e s patdiag=$lg(^dbo.BTDiseaseD(DiseaseDR),4) //仪器,病区,床号,流水号 s Machine=\u0026#34;\u0026#34; //s MachineDR=$lg(ResultData,14) //i $l(MachineDR) s Machine=$lg($g(^dbo.BTMIMachineParameterD(MachineDR)),3) s bed=$lg(VisitNumberData,27) ;床号 s WardName=\u0026#34;\u0026#34; s WardDR=$lg(VisitNumberData,26) i $l(WardDR) s WardName=$lg($g(^dbo.BTWardD(WardDR)),3) s episode=$lg(ReportData,8) //检验科-门诊检验组\\Lab Manager#84322268 s Depart=\u0026#34;\u0026#34; s WorkGroupMachineDR=$lg(ReportData,4) i $l(WorkGroupMachineDR) s WorkGroupDR=$lg($g(^dbo.BTWorkGroupMachineD(WorkGroupMachineDR)),4) i $l(WorkGroupDR) s DepartPhone=$lg($g(^dbo.BTWorkGroupD(WorkGroupDR)),6) // 20141114 s AdmID=$lg(VisitNumberData,6) s AdmNo=$lg(VisitNumberData,5) s Notes=$lg(VisitNumberData,48) s requestNo=$p($lg(VisitNumberData,48),\u0026#34;^\u0026#34;) S obj=##Class(LIS.Service.ENS.Data.ReportMsg).%New() s obj.OrdID=requestNo //s obj.OEORIARCItmMastDesc=\u0026#34;\u0026#34; //s obj.PAADMVisitNumber=\u0026#34;\u0026#34; s obj.LabNo=LabNo s obj.PAADMVisitNumber=AdmNo s obj.ReportID=ReportDR ///报告ID s obj.ReportUrl=\u0026#34;\u0026#34; //报告地址 s obj.RecUser=recusr //接收者 s obj.RecUserCode=ReceiveUserDR //接收者代码 s obj.RecDate=recdate //接收日期 s obj.RecTime=rectime //接收时间 s obj.EntryUser=entryusr //录入者 s obj.EntryUserCode=EntryUserDR //录入者代码 s obj.EntryDate=entrydate //录入日期 s obj.EntryTime=entrytime //录入时间 s obj.AuthUser=authusr //审核者 s obj.AuthUserCode=AuthUserDR //审核者代码 s obj.AuthDate=authdate //审核日期 s obj.AuthTime=authtime //审核时间 s obj.Notes=Notes //报告备注 s obj.ImageFile=\u0026#34;\u0026#34; //图像的路径（多幅图使用@分割） s obj.MainWarnDesc=\u0026#34;\u0026#34; //危急值说明 //结果 Set result = ##class(%ResultSet).%New(\u0026#34;LIS.Service.ENS.Business.ReportResult:QryTestSetResult\u0026#34;) Set sc = result.Execute(ReportDR) While (result.Next(.sc)) // go to the next row of the result set { If ($SYSTEM.Status.IsOK(sc)) // check if this succeeded without errors { s objRes=##Class(LIS.Service.ENS.Data.ResultMsg).%New() s objRes.LabNo=LabNo s objRes.TestSetCode=result.Data(\u0026#34;TestSetCode\u0026#34;) s objRes.TestCode=result.Data(\u0026#34;TestCode\u0026#34;) s objRes.TestName=result.Data(\u0026#34;TestName\u0026#34;) s objRes.TestEngName=result.Data(\u0026#34;TestSync\u0026#34;) s objRes.Result=result.Data(\u0026#34;Result\u0026#34;) s ResFlag=result.Data(\u0026#34;ResFlag\u0026#34;) i \u0026#39;$l(ResFlag) s ResFlag=\u0026#34;N\u0026#34; s objRes.ResultFlag=ResFlag s objRes.Units=result.Data(\u0026#34;Unit\u0026#34;) s Ranges=result.Data(\u0026#34;Ranges\u0026#34;) i \u0026#39;$l(Ranges) s Ranges=\u0026#34; \u0026#34; s objRes.Ranges=Ranges s MICFlag=result.Data(\u0026#34;MICFlag\u0026#34;) //whf add 2016-8-29 i MICFlag=\u0026#34;Y\u0026#34; { s objRes.MICFlag=\u0026#34;Y\u0026#34; s objRes.Result=result.Data(\u0026#34;OrganismCode\u0026#34;) s objRes.MICName=result.Data(\u0026#34;OrganismDesc\u0026#34;) } // s objRes.Sequence=result.Data(\u0026#34;Sequence\u0026#34;) //显示顺序 20141114 huhm s objRes.OrdID=result.Data(\u0026#34;PAADMVisitNumber\u0026#34;) s objRes.OEORIARCItmMastDesc=result.Data(\u0026#34;OEORIARCItmMastDesc\u0026#34;) //TestSetCode s objRes.OEORIOrderItemID=result.Data(\u0026#34;TestSetCode\u0026#34;) ///细菌结果ID s SenResultId=result.Data(\u0026#34;SenResultId\u0026#34;) i $l(SenResultId) { s sen=##class(%ResultSet).%New(\u0026#34;LIS.Service.ENS.Business.ReportResult:QryTestSetResultSen\u0026#34;) Set st = sen.Execute(SenResultId) While (sen.Next(.st)) { If ($SYSTEM.Status.IsOK(st)) { //WCode,AntCode,AntName,SenCode,SenName,SenMethod,SenValue s objSen=##Class(LIS.Service.ENS.Data.OrgResultMsg).%New() s objSen.BugsCode=result.Data(\u0026#34;OrganismCode\u0026#34;) s objSen.AntiCode=sen.Data(\u0026#34;AntCode\u0026#34;) s objSen.AntiName=sen.Data(\u0026#34;AntName\u0026#34;) s objSen.Result=sen.Data(\u0026#34;SenName\u0026#34;) s objSen.KBRes=sen.Data(\u0026#34;SenMethod\u0026#34;) s objSen.MICRes=sen.Data(\u0026#34;SenValue\u0026#34;) s objSen.Order=sen.Data(\u0026#34;Order\u0026#34;) d objRes.OrgResultMsgs.Insert(objSen) // } } } d obj.ResultMsgs.Insert(objRes) } } s Input=\u0026#34;\u0026#34; //d obj.XMLExportToStream(.Input) //Set objStream=##class(%GlobalCharacterStream).%New() // d objStream.Write(\u0026#34;\u0026lt;ReportData\u0026gt;\u0026#34;) d obj.XMLExportToString(.Input) ;s retObj=##Class(UtilsController.LIS.UtilsControllerHttpSoap12Endpoint).%New() ;s Input=retObj.ReportMsg(Input) ;s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;NFYY\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;医院信息平台\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026#34;_Input_\u0026#34;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; s Input=\u0026#34;\u0026lt;Response\u0026gt;\u0026#34;_Input_\u0026#34;\u0026lt;/Response\u0026gt;\u0026#34; Set objStream=##class(%GlobalCharacterStream).%New() d objStream.Write(Input) s ^TMP(\u0026#34;Au\u0026#34;,LabNo)=Input ;s $NameSpace=\u0026#34;DHC-APP\u0026#34; ;s Input=##class(web.DHCENS.EnsHISService).DHCHisInterface(\u0026#34;S00000046\u0026#34;,objStream) ;s $NameSpace=\u0026#34;DHC-LISDATA\u0026#34; s ^TMP(\u0026#34;AuReport\u0026#34;,LabNo)=Input q Input ErrorHandle s err=$tr(\u0026#34;查询异常.错误\u0026#34;_$tr($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;\u0026lt;\u0026gt;\u0026#34;) Quit $$ReturnOut(err) ReturnOut(err) //Set objStream=##class(%GlobalCharacterStream).%New() //d objStream.Write(\u0026#34;\u0026lt;ReportData\u0026gt;\u0026#34;) //d objStream.Write(\u0026#34;\u0026lt;ReturnValue\u0026gt;-1^\u0026#34;_err_\u0026#34;\u0026lt;/ReturnValue\u0026gt;\u0026#34;) //Do objStream.Write(\u0026#34;\u0026lt;/ReportData\u0026gt;\u0026#34;) q \u0026#34;-1^\u0026#34;_err } 更新导入类 业务类 LIS.WS.BLL.DHCReceiveInerLanNoInfo\nlass LIS.WS.BLL.DHCReceiveInerLanNoInfo Extends %RegisteredObject { /// 获取检验手工申请标本信息 /// 获取标本信息 ClassMethod GetInnerLabNoInfo(Labno As %String, RetType As %String, UserCode As %String, Output Msg As %String(MAXLEN=32767)) As %GlobalCharacterStream { // 标本xml s RetType=$g(RetType),UserCode=$g(UserCode) s Msg=\u0026#34;\u0026#34; s RetXML=##class(LIS.Util.COM.XML).New(\u0026#34;Response\u0026#34;) s Header=##class(LIS.Util.COM.XML).New(\u0026#34;Header\u0026#34;) s objVisitNumber=##class(LIS.Util.COM.XML).New(\u0026#34;Body\u0026#34;) s OrderList=##class(LIS.Util.COM.XML).New(\u0026#34;OrderList\u0026#34;) s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) { s Header.ResultCode=\u0026#34;-1\u0026#34; s Header.ResultContent=\u0026#34;条码信息不存在\u0026#34; d RetXML.Insert(Header) d RetXML.Insert(objVisitNumber) q RetXML.ToXMLStream() } s VisitNumberObjData=##class(dbo.RPVisitNumber).%OpenId(VisitNumberDR) s HospitalDR=VisitNumberObjData.HospitalDR s HospitalCode=\u0026#34;\u0026#34; i $l(HospitalDR) s HospitalCode=$lg($g(^dbo.BTHospitalD(HospitalDR)),2) s objVisitNumber.HospitalCode=HospitalCode s TestSetDR=\u0026#34;\u0026#34; f { S TestSetDR=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR)) Q:TestSetDR=\u0026#34;\u0026#34; s RowID=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR,\u0026#34;\u0026#34;)) i $l(RowID) { s OderItem=##class(LIS.Util.COM.XML).New(\u0026#34;OderItem\u0026#34;) s objTestSets=##class(dbo.RPVisitNumberTestSet).%OpenId(RowID) s OderItem.HISOrderID=\u0026#34;\u0026#34; s OderItem.TestSetCode=$lg($g(^dbo.BTTestSetD(TestSetDR)),2) s OderItem.OrdItmStat=\u0026#34;\u0026#34; s OderItem.Biled=0 s OderItem.TestSetFee=objTestSets.TestSetFee d OrderList.Insert(OderItem) } } D objVisitNumber.Insert(OrderList) //只取医嘱信息 i RetType=\u0026#34;0\u0026#34; { s Header.ResultCode=\u0026#34;0\u0026#34; s Header.ResultContent=\u0026#34;\u0026#34; d RetXML.Insert(Header) d RetXML.Insert(objVisitNumber) q RetXML.ToXMLStream() } //获取标本信息 s objVisitNumber.VisitNumber=VisitNumberObjData.VisitNumber s objVisitNumber.RegNo=VisitNumberObjData.RegNo s AdmissionTypeDR=VisitNumberObjData.AdmissionTypeDR S AdmissionTypeCode=\u0026#34;\u0026#34; i $l(AdmissionTypeDR) s AdmissionTypeCode=$lg($g(^dbo.BTAdmissionTypeD(AdmissionTypeDR)),2) s objVisitNumber.AdmissionTypeCode=AdmissionTypeCode s objVisitNumber.AdmNo=VisitNumberObjData.AdmNo s objVisitNumber.MedicalRecordNo=VisitNumberObjData.MedicalRecordNo s objVisitNumber.AdmDate=VisitNumberObjData.AdmDate s AdmTime=VisitNumberObjData.AdmTime i $l(AdmTime) s AdmTime=$zt(AdmTime,1) s objVisitNumber.AdmTime=AdmTime //s objVisitNumber.CertTypeDR=CertTypeDR //证件类型 预留？ s objVisitNumber.IDNumber=VisitNumberObjData.IDNumber //s objVisitNumber.PaymentTypeDR=PaymentTypeDR //支付类型 预留？ s objVisitNumber.SurName=VisitNumberObjData.SurName s objVisitNumber.GivenName=VisitNumberObjData.GivenName s SpeciesDR=VisitNumberObjData.SpeciesDR s (SexCode,SexName)=\u0026#34;\u0026#34; i $l(SpeciesDR) s SexCode=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),2),SexName=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s objVisitNumber.SpeciesCode=SexCode s objVisitNumber.SpeciesDesc=SexName s objVisitNumber.BirthDate=VisitNumberObjData.BirthDate //s objVisitNumber.BirthTime=BirthTime s objVisitNumber.Age=VisitNumberObjData.Age s AgeUnitDR=VisitNumberObjData.AgeUnitDR s (AgeCode,AgeUnitName)=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeCode=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),2),AgeUnitName=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s objVisitNumber.AgeUnitCode=AgeCode s objVisitNumber.AgeUnitDesc=AgeUnitName //s objVisitNumber.EthnicityDR=EthnicityDR //民族 预留？ s LocDR=VisitNumberObjData.LocationDR s (LocCode,LocDesc)=\u0026#34;\u0026#34; i $l(LocDR) s LocCode=$lg($g(^dbo.BTLocationD(LocDR)),2),LocDesc=$lg($g(^dbo.BTLocationD(LocDR)),3) s objVisitNumber.LocationCode=LocCode s objVisitNumber.LocationDesc=LocDesc s DoctorDR=VisitNumberObjData.DoctorDR s (drcode,drname)=\u0026#34;\u0026#34; i $l(DoctorDR) s drcode=$lg($g(^dbo.BTDoctorD(DoctorDR)),2),drname=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s objVisitNumber.DoctorCode=drcode s objVisitNumber.DoctorDesc=drname s objVisitNumber.RequestDate=VisitNumberObjData.RequestDate s RequestTime=VisitNumberObjData.RequestTime i $l(RequestTime) s RequestTime=$zt(RequestTime,1) s objVisitNumber.RequestTime=RequestTime s WardDR=VisitNumberObjData.WardDR s (WardCode,WardDesc)=\u0026#34;\u0026#34; i $l(WardDR) s WardCode=$lg($g(^dbo.BTWardD(WardDR)),2),WardDesc=$lg($g(^dbo.BTWardD(WardDR)),3) s objVisitNumber.WardCode=WardCode s objVisitNumber.WardDesc=WardDesc s objVisitNumber.BedNo=VisitNumberObjData.BedNo s objVisitNumber.Symptom=VisitNumberObjData.Symptom //Symptom 诊断获取公共CLS ？？？ s objVisitNumber.MobileNo=VisitNumberObjData.MobileNo s objVisitNumber.PhoneNo=VisitNumberObjData.PhoneNo s objVisitNumber.EMail=VisitNumberObjData.EMail s objVisitNumber.Address=VisitNumberObjData.Address s objVisitNumber.PostCode=VisitNumberObjData.PostCode s objVisitNumber.ReqNotes=VisitNumberObjData.ReqNotes s objVisitNumber.CarryDate=VisitNumberObjData.CarryDate s CarryTime=VisitNumberObjData.CarryTime i $l(CarryTime) s CarryTime=$zt(CarryTime,1) s objVisitNumber.CarryTime=CarryTime s CarryUserDR=VisitNumberObjData.CarryUserDR s (CarryUserCode,CarryUserDesc)=\u0026#34;\u0026#34; i $l(CarryUserDR) s CarryUserCode=$lg($g(^dbo.SYSUserD(CarryUserDR)),2),CarryUserDesc=$lg($g(^dbo.SYSUserD(CarryUserDR)),3) s objVisitNumber.CarryUserCode=CarryUserCode s objVisitNumber.CarryUserDesc=CarryUserDesc s objVisitNumber.Urgent=VisitNumberObjData.Urgent s CollectUserDR=VisitNumberObjData.CollectUserDR s (ColUserCode,ColUserName)=\u0026#34;\u0026#34; i $l(CollectUserDR) s CarryUserCode=$lg($g(^dbo.SYSUserD(CollectUserDR)),2),CarryUserDesc=$lg($g(^dbo.SYSUserD(CollectUserDR)),3) s objVisitNumber.CollectDate=VisitNumberObjData.CollectDate s CollectTime=VisitNumberObjData.CollectTime i $l(CollectTime) s CollectTime=$zt(CollectTime,1) s objVisitNumber.CollectTime=CollectTime s objVisitNumber.CollectUserCode=ColUserCode s objVisitNumber.CollectUserCode=ColUserName s SpecimenDR=VisitNumberObjData.SpecimenDR s ContainerDR=VisitNumberObjData.ContainerDR s (SpecCode,ConCode)=\u0026#34;\u0026#34; i $l(SpecimenDR) s SpecCode=$lg($g(^dbo.BTSpecimenD(SpecimenDR)),2) i $l(ContainerDR) s ConCode=$lg($g(^dbo.BTContainerD(ContainerDR)),2) s objVisitNumber.SpecimenCode=SpecCode s objVisitNumber.SpecimenDesc=\u0026#34;\u0026#34; s objVisitNumber.ContainerCode=ConCode s objVisitNumber.CollectNotes=\u0026#34;\u0026#34; s objVisitNumber.H24UVolume=\u0026#34;\u0026#34; s objVisitNumber.H24UTimePeriod=\u0026#34;\u0026#34; s objVisitNumber.BodyTemp=\u0026#34;\u0026#34; s objVisitNumber.Confidential=\u0026#34;\u0026#34; s objVisitNumber.AgeDesc=VisitNumberObjData.AgeDesc s objVisitNumber.ICDs=VisitNumberObjData.ICDs s Header.ResultCode=\u0026#34;0\u0026#34; s Header.ResultContent=\u0026#34;\u0026#34; d RetXML.Insert(Header) d RetXML.Insert(objVisitNumber) q RetXML.ToXMLStream() } /// 获取中间表标本信息 ClassMethod GetILabTestSetInfo(Labno As %String, RetType As %String, UserCode As %String, Output Msg As %String(MAXLEN=32767)) As %GlobalCharacterStream { s Labno=$g(Labno),RetType=$g(RetType),UserCode=$g(UserCode) // 标本xml s RetXML=##class(LIS.Util.COM.XML).New(\u0026#34;Response\u0026#34;) s Header=##class(LIS.Util.COM.XML).New(\u0026#34;Header\u0026#34;) s objVisitNumber=##class(LIS.Util.COM.XML).New(\u0026#34;Body\u0026#34;) s OrderList=##class(LIS.Util.COM.XML).New(\u0026#34;OrderList\u0026#34;) s VisitNumberDR=$o(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,Labno,\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) { s Header.ResultCode=\u0026#34;1\u0026#34; s Header.ResultContent=\u0026#34;中间表条码信息不存在！\u0026#34; d RetXML.Insert(Header) q RetXML.ToXMLStream() } s VisitNumberObjData=##class(dbo.RILabTestSet).%OpenId(VisitNumberDR) s PatDR=VisitNumberObjData.VisitNumberDR s PatObjData=##class(dbo.RILabRequest).%OpenId(PatDR) s objVisitNumber.HospitalCode=VisitNumberObjData.HospitalCode S RetTSRowID=\u0026#34;\u0026#34; s LabTestSetRowID=\u0026#34;\u0026#34; f { S LabTestSetRowID=$o(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,Labno,LabTestSetRowID)) Q:LabTestSetRowID=\u0026#34;\u0026#34; s OderItem=##class(LIS.Util.COM.XML).New(\u0026#34;OderItem\u0026#34;) s TestSetCode=$lg($g(^dbo.RILabTestSetD(LabTestSetRowID)),2) s OderItem.HISOrderID=$lg($g(^dbo.RILabTestSetD(LabTestSetRowID)),4) s OderItem.TestSetCode=TestSetCode s OderItem.OrdItmStat=\u0026#34;\u0026#34; S TSBiled=$lg($g(^dbo.RILabTestSetD(LabTestSetRowID)),44) i TSBiled=2 s TSBiled=0 //已计费 s OderItem.Biled=TSBiled s OderItem.TestSetFee=$lg($g(^dbo.RILabTestSetD(LabTestSetRowID)),43) d OrderList.Insert(OderItem) S RetTSRowID=LabTestSetRowID } D objVisitNumber.Insert(OrderList) //只取医嘱信息 i RetType=\u0026#34;0\u0026#34; { s Header.ResultCode=\u0026#34;0\u0026#34; s Header.ResultContent=\u0026#34;\u0026#34; d RetXML.Insert(Header) d RetXML.Insert(objVisitNumber) q RetXML.ToXMLStream() } //获取标本信息 s objVisitNumber.VisitNumber=VisitNumberObjData.BarCode s objVisitNumber.RegNo=PatObjData.RegNo s objVisitNumber.AdmissionTypeCode=PatObjData.AdmissionType s objVisitNumber.AdmNo=PatObjData.AdmNo s objVisitNumber.MedicalRecordNo=PatObjData.MedicalRecordNo s objVisitNumber.AdmDate=PatObjData.AdmDate s objVisitNumber.AdmTime=PatObjData.AdmTime //s objVisitNumber.CertTypeDR=CertTypeDR //证件类型 预留？ s objVisitNumber.IDNumber=PatObjData.IDNumber //s objVisitNumber.PaymentTypeDR=PaymentTypeDR //支付类型 预留？ s objVisitNumber.SurName=PatObjData.SurName s objVisitNumber.GivenName=PatObjData.GivenName s objVisitNumber.SpeciesCode=PatObjData.SpeciesID s objVisitNumber.SpeciesDesc=PatObjData.SpeciesName s objVisitNumber.BirthDate=PatObjData.BirthDate //s objVisitNumber.BirthTime=BirthTime s objVisitNumber.Age=PatObjData.Age s objVisitNumber.AgeUnitCode=PatObjData.AgeUnit s objVisitNumber.AgeUnitDesc=PatObjData.AgeUnit s objVisitNumber.Symptom=PatObjData.Symptom //Symptom 诊断获取公共CLS ？？？ s objVisitNumber.MobileNo=PatObjData.MobileNo s objVisitNumber.PhoneNo=PatObjData.PhoneNo s objVisitNumber.EMail=PatObjData.email s objVisitNumber.Address=PatObjData.Address s objVisitNumber.PostCode=PatObjData.PostCode i $l(RetTSRowID) d .s objVisitNumber.LocationCode=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),15) .s objVisitNumber.LocationDesc=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),16) .s objVisitNumber.DoctorCode=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),20) .s objVisitNumber.DoctorDesc=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),21) .s objVisitNumber.RequestDate=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),22) .s objVisitNumber.RequestTime=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),23) .s objVisitNumber.WardCode=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),17) .s objVisitNumber.WardDesc=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),18) .s objVisitNumber.BedNo=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),19) .s objVisitNumber.ReqNotes=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),46) .s objVisitNumber.CarryDate=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),35) .s objVisitNumber.CarryTime=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),36) .s objVisitNumber.CarryUserCode=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),37) .s objVisitNumber.CarryUserDesc=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),38) .i \u0026#39;$l(objVisitNumber.CarryDate)\u0026amp;\u0026amp;$d(^dbo.RPTransportItemI(\u0026#34;IndexBarcode\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno))) d ..s CarryInfo=##class(LIS.WS.BLL.DHCRPTransport).QryTransportByBarCode(Labno) ..s objVisitNumber.CarryDate=$p(CarryInfo,\u0026#34;^\u0026#34;,10) ..s objVisitNumber.CarryTime=$p(CarryInfo,\u0026#34;^\u0026#34;,11) ..s objVisitNumber.CarryUserCode=$p(CarryInfo,\u0026#34;^\u0026#34;,8) ..s objVisitNumber.CarryUserDesc=$p(CarryInfo,\u0026#34;^\u0026#34;,9) .s objVisitNumber.CarryDate=$tr(objVisitNumber.CarryDate,\u0026#34;-\u0026#34;) .s objVisitNumber.Urgent=VisitNumberObjData.Urgent .s objVisitNumber.CollectDate=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),29) .s CollectTime=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),30) .s objVisitNumber.CollectTime=CollectTime .s objVisitNumber.CollectUserCode=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),31) .s objVisitNumber.CollectUserDesc=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),32) .s objVisitNumber.SpecimenCode=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),10) .s objVisitNumber.SpecimenDesc=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),11) .s objVisitNumber.ContainerCode=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),12) .s objVisitNumber.ContainerDesc=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),13) .s objVisitNumber.CollectNotes=$lg($g(^dbo.RILabTestSetD(RetTSRowID)),14) .s objVisitNumber.H24UVolume=\u0026#34;\u0026#34; .s objVisitNumber.H24UTimePeriod=\u0026#34;\u0026#34; .s objVisitNumber.BodyTemp=\u0026#34;\u0026#34; .s objVisitNumber.Confidential=\u0026#34;\u0026#34; s Header.ResultCode=\u0026#34;0\u0026#34; s Header.ResultContent=\u0026#34;\u0026#34; d RetXML.Insert(Header) d RetXML.Insert(objVisitNumber) q RetXML.ToXMLStream() } /// 设置中间表状态 ClassMethod SetILabTestSetState(Labno As %String, recTSList, TestSetState, Usercode) As %String { s Labno=$g(Labno),recTSList=$g(recTSList),TestSetState=$g(TestSetState),Usercode=$g(Usercode) s retValue=1 s UserDR=\u0026#34;\u0026#34; i $l(Usercode)\ts Usercode = $zcvt(Usercode,\u0026#34;U\u0026#34;) s UserDR=$o(^dbo.SYSUserI(\u0026#34;IndexCode\u0026#34;,##Class(LIS.Util.Common).IndexData(Usercode))) s SplitStr=\u0026#34;@S@\u0026#34;,ItemSpitStr=\u0026#34;@I@\u0026#34; s HISOrderList=\u0026#34;\u0026#34; f z=1:1:$l(recTSList,ItemSpitStr) { s TSItem=$p(recTSList,ItemSpitStr,z) i \u0026#39;$l(TSItem) continue s TestSetDR=$p(TSItem,SplitStr,1) s ckHISOrderID=$p(TSItem,SplitStr,2) s LabTestSetRowID=\u0026#34;\u0026#34; f { S LabTestSetRowID=$o(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,Labno,LabTestSetRowID)) Q:LabTestSetRowID=\u0026#34;\u0026#34; s TestSetCode=$lg($g(^dbo.RILabTestSetD(LabTestSetRowID)),2) s HISOrderID=$lg($g(^dbo.RILabTestSetD(LabTestSetRowID)),3) i $l(ckHISOrderID),ckHISOrderID\u0026#39;=HISOrderID continue s VTSObjData=##class(dbo.RILabTestSet).%OpenId(LabTestSetRowID) s VTSObjData.TestSetState=TestSetState i TestSetState=5 { s VTSObjData.ReceiveDate=$zd($h,8) s VTSObjData.ReceiveTime=$p($h,\u0026#34;,\u0026#34;,2) s VTSObjData.ReceiveUserID=UserDR } s sc=VTSObjData.%Save() } } Q retValue } /// 设置中间表状态 ClassMethod SetILabTSAcceptInfo(ReportDR As %String) As %String { s retValue=1 s VisitNumberDR=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),2) s WorkGroupMachineDR=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),4) s AssayNo=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),6) s TransmitDate=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),3) s AcceptDate=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),9) s AcceptTime=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),10) s LabNo=$lg($g(^dbo.RPVisitNumberD(VisitNumberDR)),2) s TestSetDR=\u0026#34;\u0026#34;,TSList=\u0026#34;\u0026#34; f s TestSetDR=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexReportID\u0026#34;,ReportDR,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; d .s VSRowID=$o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexReportID\u0026#34;,ReportDR,TestSetDR,\u0026#34;\u0026#34;)) .s HISOrderID=$lg($g(^dbo.RPVisitNumberTestSetD(VSRowID)),10) .s TSList=HISOrderID_\u0026#34;,\u0026#34;_TSList s LabTestSetRowID=\u0026#34;\u0026#34; f { S LabTestSetRowID=$o(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,LabNo,LabTestSetRowID)) Q:LabTestSetRowID=\u0026#34;\u0026#34; s TestSetCode=$lg($g(^dbo.RILabTestSetD(LabTestSetRowID)),2) s ckHISOrderID=$lg($g(^dbo.RILabTestSetD(LabTestSetRowID)),3) i $l(ckHISOrderID),(\u0026#34;,\u0026#34;_TSList_\u0026#34;,\u0026#34;)\u0026#39;[(\u0026#34;,\u0026#34;_ckHISOrderID_\u0026#34;,\u0026#34;) continue s VTSObjData=##class(dbo.RILabTestSet).%OpenId(LabTestSetRowID) s VTSObjData.WorkGroupMachineDR=WorkGroupMachineDR s VTSObjData.AssayNo=AssayNo s VTSObjData.TransmitDate=TransmitDate s VTSObjData.AcceptDate=AcceptDate s VTSObjData.AcceptTime=AcceptTime s sc=VTSObjData.%Save() } Q retValue } /// 设置中间表状态 ClassMethod SetILabTSStateByHISOrderID(Labno As %String, HISOrderID, TestSetState) As %String { s retValue=1 s LabTestSetRowID=\u0026#34;\u0026#34; f { S LabTestSetRowID=$o(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,Labno,LabTestSetRowID)) Q:LabTestSetRowID=\u0026#34;\u0026#34; s TestSetCode=$lg($g(^dbo.RILabTestSetD(LabTestSetRowID)),2) s ckHISOrderID=$lg($g(^dbo.RILabTestSetD(LabTestSetRowID)),3) i $l(ckHISOrderID),ckHISOrderID\u0026#39;=HISOrderID continue s VTSObjData=##class(dbo.RILabTestSet).%OpenId(LabTestSetRowID) s VTSObjData.TestSetState=TestSetState s sc=VTSObjData.%Save() } Q retValue } } 更新状态类 通过XML串，把第三方系统医嘱保存到dbo.RI_LabRequest,dbo.RI_LabTestSet表中。\nLIS.WS.BLL.DHCENSLabInterface\n通过XML串，把第三方系统医嘱保存到dbo.RI_LabRequest,dbo.RI_LabTestSet表中。 /// Creator? DaiYi /// CreatDate? 2020-10-28 /// Description: 保存医嘱数据到中间表 /// Table? dbo.RI_LabRequest,dbo.RI_LabTestSet Class LIS.WS.BLL.DHCENSLabInterface Extends %RegisteredObject { /// Creator? DaiYi /// CreatDate? 2024-11-15 /// Description: 按照平台组新的结构保存医嘱数据到中间表 /// Table? dbo.RI_LabRequest,dbo.RI_LabTestSet /// Input? Input:医嘱信息XML串 /// Return? ret:保存是否成功 /// Others? 无 /// s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;成功\u0026lt;/ResultContent\u0026gt;\u0026lt;Orders\u0026gt;\u0026lt;OrderList\u0026gt;\u0026lt;OrdID\u0026gt;\u0026lt;/OrdID\u0026gt;\u0026lt;LabNo\u0026gt;1600904130\u0026lt;/LabNo\u0026gt;\u0026lt;ArcimCode\u0026gt;L002\u0026lt;/ArcimCode\u0026gt;\u0026lt;ArcimDesc\u0026gt;血常规\u0026lt;/ArcimDesc\u0026gt;\u0026lt;OrderQty\u0026gt;1\u0026lt;/OrderQty\u0026gt;\u0026lt;BillCode\u0026gt;P\u0026lt;/BillCode\u0026gt;\u0026lt;SpecimenTypeCode\u0026gt;\u0026lt;/SpecimenTypeCode\u0026gt;\u0026lt;SpecimenTypeDesc\u0026gt;\u0026lt;/SpecimenTypeDesc\u0026gt;\u0026lt;SpVolume\u0026gt;\u0026lt;/SpVolume\u0026gt;\u0026lt;ColInfo\u0026gt;\u0026lt;/ColInfo\u0026gt;\u0026lt;Container\u0026gt;\u0026lt;/Container\u0026gt;\u0026lt;GTSeq\u0026gt;\u0026lt;/GTSeq\u0026gt;\u0026lt;SpecFlag\u0026gt;\u0026lt;/SpecFlag\u0026gt;\u0026lt;VerifyDate\u0026gt;2016-04-26\u0026lt;/VerifyDate\u0026gt;\u0026lt;VerifyTime\u0026gt;13:43:09\u0026lt;/VerifyTime\u0026gt;\u0026lt;ColDate\u0026gt;\u0026lt;/ColDate\u0026gt;\u0026lt;ColTime\u0026gt;\u0026lt;/ColTime\u0026gt;\u0026lt;AppDeptCode\u0026gt;\u0026lt;/AppDeptCode\u0026gt;\u0026lt;AppDeptDesc\u0026gt;体检科\u0026lt;/AppDeptDesc\u0026gt;\u0026lt;RecDeptCode\u0026gt;\u0026lt;/RecDeptCode\u0026gt;\u0026lt;RecDeptDesc\u0026gt;\u0026lt;/RecDeptDesc\u0026gt;\u0026lt;TSPrice\u0026gt;20\u0026lt;/TSPrice\u0026gt;\u0026lt;OrderStatus\u0026gt;E\u0026lt;/OrderStatus\u0026gt;\u0026lt;DocCode\u0026gt;\u0026lt;/DocCode\u0026gt;\u0026lt;DocDesc\u0026gt;\u0026lt;/DocDesc\u0026gt;\u0026lt;RepLoct\u0026gt;\u0026lt;/RepLoct\u0026gt;\u0026lt;RepDate\u0026gt;\u0026lt;/RepDate\u0026gt;\u0026lt;RepTime\u0026gt;\u0026lt;/RepTime\u0026gt;\u0026lt;Note\u0026gt;\u0026lt;/Note\u0026gt;\u0026lt;AdmNo\u0026gt;\u0026lt;/AdmNo\u0026gt;\u0026lt;AdmDate\u0026gt;2016-04-26\u0026lt;/AdmDate\u0026gt;\u0026lt;AdmTime\u0026gt;13:43:09\u0026lt;/AdmTime\u0026gt;\u0026lt;AdmTypeCode\u0026gt;\u0026lt;/AdmTypeCode\u0026gt;\u0026lt;AdmTypeDesc\u0026gt;体检\u0026lt;/AdmTypeDesc\u0026gt;\u0026lt;FeeType\u0026gt;\u0026lt;/FeeType\u0026gt;\u0026lt;PatientWard\u0026gt;\u0026lt;/PatientWard\u0026gt;\u0026lt;BedNo\u0026gt;\u0026lt;/BedNo\u0026gt;\u0026lt;Diagnose\u0026gt;\u0026lt;/Diagnose\u0026gt;\u0026lt;RegisterNo\u0026gt;16009041\u0026lt;/RegisterNo\u0026gt;\u0026lt;PatientName\u0026gt;测试（童）\u0026lt;/PatientName\u0026gt;\u0026lt;SexCode\u0026gt;M\u0026lt;/SexCode\u0026gt;\u0026lt;SexDesc\u0026gt;男\u0026lt;/SexDesc\u0026gt;\u0026lt;DOB\u0026gt;1987-04-26\u0026lt;/DOB\u0026gt;\u0026lt;Age\u0026gt;29岁\u0026lt;/Age\u0026gt;\u0026lt;DocumentID\u0026gt;D16008409\u0026lt;/DocumentID\u0026gt;\u0026lt;PatientAddress\u0026gt;\u0026lt;/PatientAddress\u0026gt;\u0026lt;IdentityCardNo\u0026gt;\u0026lt;/IdentityCardNo\u0026gt;\u0026lt;Telephone\u0026gt;\u0026lt;/Telephone\u0026gt;\u0026lt;SpecUserCode\u0026gt;\u0026lt;/SpecUserCode\u0026gt;\u0026lt;StartDate\u0026gt;\u0026lt;/StartDate\u0026gt;\u0026lt;StartTime\u0026gt;\u0026lt;/StartTime\u0026gt;\u0026lt;SendFlag\u0026gt;NW\u0026lt;/SendFlag\u0026gt;\u0026lt;/OrderList\u0026gt;\u0026lt;/Orders\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; /// w ##class(LIS.WS.BLL.DHCENSLabInterface).SaveRequestTestSet(\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;Orders\u0026gt;\u0026lt;OrderList\u0026gt;\u0026lt;AppDeptDesc\u0026gt;\u0026lt;/AppDeptDesc\u0026gt;\u0026lt;IdentityCardNo\u0026gt;360730199608051156\u0026lt;/IdentityCardNo\u0026gt;\u0026lt;SpecimenTypeDesc\u0026gt;\u0026lt;/SpecimenTypeDesc\u0026gt;\u0026lt;Age\u0026gt;23岁\u0026lt;/Age\u0026gt;\u0026lt;RecDeptCode\u0026gt;\u0026lt;/RecDeptCode\u0026gt;\u0026lt;OrderStatus\u0026gt;\u0026lt;/OrderStatus\u0026gt;\u0026lt;SpVolume\u0026gt;\u0026lt;/SpVolume\u0026gt;\u0026lt;Telephone\u0026gt;\u0026lt;/Telephone\u0026gt;\u0026lt;DOB\u0026gt;1997-01-01\u0026lt;/DOB\u0026gt;\u0026lt;PatientWard\u0026gt;\u0026lt;/PatientWard\u0026gt;\u0026lt;LabNo\u0026gt;9000000114\u0026lt;/LabNo\u0026gt;\u0026lt;ContainerDesc\u0026gt;\u0026lt;/ContainerDesc\u0026gt;\u0026lt;SexCode\u0026gt;1\u0026lt;/SexCode\u0026gt;\u0026lt;SpecUserName\u0026gt;\u0026lt;/SpecUserName\u0026gt;\u0026lt;FeeType\u0026gt;\u0026lt;/FeeType\u0026gt;\u0026lt;TSPrice\u0026gt;\u0026lt;/TSPrice\u0026gt;\u0026lt;ColTime\u0026gt;\u0026lt;/ColTime\u0026gt;\u0026lt;OrderQty\u0026gt;1\u0026lt;/OrderQty\u0026gt;\u0026lt;StartDate\u0026gt;\u0026lt;/StartDate\u0026gt;\u0026lt;BedNo\u0026gt;\u0026lt;/BedNo\u0026gt;\u0026lt;AdmTypeCode\u0026gt;\u0026lt;/AdmTypeCode\u0026gt;\u0026lt;ArcimCode\u0026gt;BGJY000001\u0026lt;/ArcimCode\u0026gt;\u0026lt;RecDeptDesc\u0026gt;\u0026lt;/RecDeptDesc\u0026gt;\u0026lt;PatientAddress\u0026gt;\u0026lt;/PatientAddress\u0026gt;\u0026lt;StartTime\u0026gt;\u0026lt;/StartTime\u0026gt;\u0026lt;VerifyDate\u0026gt;2020-11-19\u0026lt;/VerifyDate\u0026gt;\u0026lt;AppDeptCode\u0026gt;4659\u0026lt;/AppDeptCode\u0026gt;\u0026lt;Container\u0026gt;\u0026lt;/Container\u0026gt;\u0026lt;DocumentID\u0026gt;\u0026lt;/DocumentID\u0026gt;\u0026lt;AdmDate\u0026gt;2020-11-20\u0026lt;/AdmDate\u0026gt;\u0026lt;AdmTime\u0026gt;09:00:00\u0026lt;/AdmTime\u0026gt;\u0026lt;ColDate\u0026gt;\u0026lt;/ColDate\u0026gt;\u0026lt;BillCode\u0026gt;B\u0026lt;/BillCode\u0026gt;\u0026lt;ColInfo\u0026gt;\u0026lt;/ColInfo\u0026gt;\u0026lt;ArcimDesc\u0026gt;血常规\u0026lt;/ArcimDesc\u0026gt;\u0026lt;DocDesc\u0026gt;\u0026lt;/DocDesc\u0026gt;\u0026lt;Note\u0026gt;\u0026lt;/Note\u0026gt;\u0026lt;PatientName\u0026gt;测试\u0026lt;/PatientName\u0026gt;\u0026lt;Diagnose\u0026gt;\u0026lt;/Diagnose\u0026gt;\u0026lt;AdmTypeDesc\u0026gt;\u0026lt;/AdmTypeDesc\u0026gt;\u0026lt;SpecUserCode\u0026gt;\u0026lt;/SpecUserCode\u0026gt;\u0026lt;GTSeq\u0026gt;\u0026lt;/GTSeq\u0026gt;\u0026lt;DocCode\u0026gt;9803\u0026lt;/DocCode\u0026gt;\u0026lt;OrdID\u0026gt;1481\u0026lt;/OrdID\u0026gt;\u0026lt;SexDesc\u0026gt;男\u0026lt;/SexDesc\u0026gt;\u0026lt;VerifyTime\u0026gt;07:11:17\u0026lt;/VerifyTime\u0026gt;\u0026lt;SpecimenTypeCode\u0026gt;\u0026lt;/SpecimenTypeCode\u0026gt;\u0026lt;AdmNo\u0026gt;45887462\u0026lt;/AdmNo\u0026gt;\u0026lt;RegisterNo\u0026gt;635761\u0026lt;/RegisterNo\u0026gt;\u0026lt;/OrderList\u0026gt;\u0026lt;/Orders\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;MessageID\u0026gt;123\u0026lt;/MessageID\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34;) /// w ##class(LIS.WS.BLL.DHCENSLabInterface).SaveRequestTestSet(^TMP(\u0026#34;LIS\u0026#34;)) ClassMethod SaveRequestTestSet(Input) { s ^tmp(\u0026#34;SaveRequestTestSet\u0026#34;)=Input s Input=$g(Input) i \u0026#39;$l(Input) q Ret s repid=$i(^CacheTemp) s RetValue=0 //默认返回值为1 TSTART Set $ZTrap = \u0026#34;ErrorHandle1\u0026#34; s ResXML = ##class(LIS.Util.COM.XML).FromXML(Input,\u0026#34;Y\u0026#34;) s MessageID=ResXML.Header.MessageID s xmlDataInfo=ResXML.Body.PATPatientInfo s xmlDataAdmInfo=ResXML.Body.PATAdmInfo s xmlDataOrdListRt=ResXML.Body.SendPatOrdListRt.OrderList s xmlDataMDiagnose=ResXML.Body.PAADMDiagnose //获取病人信息。 i $l(xmlDataAdmInfo) { s RegNo=xmlDataInfo.PATPatientID s BedNo=\u0026#34;\u0026#34; //xmlDataAdmInfo.PAADMCurBedNo s Diagnose=\u0026#34;\u0026#34; //xmlDataMDiagnose.DiagDesc s PatName=xmlDataInfo.PATName s SexCode=xmlDataInfo.PATSexCode i SexCode=1 s SexCode=\u0026#34;M\u0026#34; i SexCode=2 s SexCode=\u0026#34;F\u0026#34; s SexDesc=xmlDataInfo.PATSexDesc s DOB=xmlDataInfo.PATDob s Age=xmlDataInfo.PATAge s DocumentID=xmlDataInfo.PATDocumentNo s PatientAddress=xmlDataInfo.PATWorkPlaceName s IdentityCardNo=xmlDataInfo.PATIdentityNum s Telephone=xmlDataInfo.PATTelephone s StartDate=\u0026#34;\u0026#34; s StartTime=\u0026#34;\u0026#34; s HospCode =xmlDataInfo.HospitalCode i HospCode=\u0026#34;\u0026#34; s HospCode=\u0026#34;XMYQ\u0026#34; } b //获取医嘱信息 i xmlDataOrdListRt.Length()\u0026gt;0 { s i=0 f i=0:1:xmlDataOrdListRt.Length()-1 { s TSItem=xmlDataOrdListRt.Get(i) //s i=i+1 s OrderID=TSItem.OEORIOrderItemID //b ;9 s LabNo=TSItem.OEORISpecimenID s ArcimCode=TSItem.OEORIARCItmMastCode s ArcimDesc=TSItem.OEORIARCItmMastDesc s OrderQty=TSItem.OEORIOrderQty s BillCode=TSItem.BillStatus i BillCode=\u0026#34;P\u0026#34; s BillCode=2 s SpecimenTypeCode=TSItem.OEORISpecimenCode s SpecimenTypeDesc=TSItem.OEORISpecimenDesc s SpVolume=TSItem.SpVolume s ColInfo=TSItem.ColInfo s Container=TSItem.Container s ContainerDesc=TSItem.ContainerDesc s GTSeq=TSItem.GTSeq s SpecFlag=TSItem.SpecFlag s VerifyDate=TSItem.VerifyDate s VerifyTime=TSItem.VerifyTime s ColDate=TSItem.ColDate s ColTime=TSItem.ColTime s AppDeptCode= TSItem.AppDeptCode s AppDeptDesc=TSItem.AppDeptDesc s RecDeptCode=TSItem.RecDeptCode s RecDeptDesc=TSItem.RecDeptDesc s TSPrice=TSItem.TSPrice ///E:执行，V:审核，D:停止。只有V状态的医嘱是能出报告 ///1：登记，2：打印条码，3：采集，4：标本运送，5：标本接收，6：停止，7：作废，8.拒收，9.核收，10.HIS已执行 s OrderStatus=TSItem.OrderStatus i OrderStatus=\u0026#34;V\u0026#34; s OrderStatus =1 i OrderStatus=\u0026#34;D\u0026#34; s OrderStatus =6 i OrderStatus=\u0026#34;E\u0026#34; s OrderStatus =10 s OrderStatus=2 s DocCode=TSItem.DocCode s DocDesc=TSItem.DocDesc s Note=TSItem.Note s SpecUserCode=TSItem.SpecUserCode s SpecUserName=TSItem.SpecUserDesc s AdmNo=$P(xmlDataAdmInfo.PAADMVisitNumber,\u0026#34;_\u0026#34;) s AdmDate=xmlDataAdmInfo.PAADMStartDate s AdmTime=xmlDataAdmInfo.PAADMStartTime s AdmTypeCode=xmlDataAdmInfo.PAADMTypeCode i AdmTypeCode=\u0026#34;\u0026#34; s AdmTypeCode=\u0026#34;H\u0026#34; s AdmTypeDesc=xmlDataAdmInfo.PAADMTypeDesc s FeeType=xmlDataAdmInfo.PAADMFeeTypeCode s PatientWard=xmlDataAdmInfo.PAADMAdmWardCode b //保存信息 i AdmTypeCode=\u0026#34;\u0026#34; s RetValue=\u0026#34;病人类型字段：AdmTypeCode为空，不能进行信息保存！\u0026#34; i AdmNo=\u0026#34;\u0026#34; s RetValue=\u0026#34;就诊号字段：AdmNo为空，不能进行信息保存！\u0026#34; i RetValue\u0026#39;=0 q i $l(AdmTypeCode),$l(AdmNo),$D(^dbo.RILabRequestI(\u0026#34;PKRIRequest\u0026#34;,1,AdmTypeCode,AdmNo)) d .s LabRequestRowId=$o(^dbo.RILabRequestI(\u0026#34;PKRIRequest\u0026#34;,1,AdmTypeCode,AdmNo,\u0026#34;\u0026#34;)) .s ObjLabRequest=##class(dbo.RILabRequest).%OpenId(LabRequestRowId) e d .s ObjLabRequest=##class(dbo.RILabRequest).%New() s ObjLabRequest.VisitNumberFrom=\u0026#34;1\u0026#34; s ObjLabRequest.AdmissionType=AdmTypeCode s ObjLabRequest.RegNo=RegNo s ObjLabRequest.AdmNo=AdmNo s ObjLabRequest.MedicalRecordNo=DocumentID s ObjLabRequest.AdmDate=AdmDate s ObjLabRequest.AdmTime=AdmTime s ObjLabRequest.IDNumber=IdentityCardNo s ObjLabRequest.PaymentType=FeeType s ObjLabRequest.SurName=PatName s ObjLabRequest.GivenName=PatName s ObjLabRequest.SpeciesID=SexCode s ObjLabRequest.SpeciesName=SexDesc s ObjLabRequest.BirthDate=$p(DOB,\u0026#34; \u0026#34;,1) s ObjLabRequest.BirthTime=$p(DOB,\u0026#34; \u0026#34;,2) s ObjLabRequest.Age=+Age s ObjLabRequest.AgeUnit=$e(Age,$l(Age)-1,$l(Age)) s ObjLabRequest.Symptom=Diagnose s ObjLabRequest.MobileNo=Telephone s ObjLabRequest.Address=PatientAddress s sc=ObjLabRequest.%Save() s VisitNumberDR=\u0026#34;\u0026#34; If ($SYSTEM.Status.IsOK(sc)){ s RetValue=0 s VisitNumberDR=$o(^dbo.RILabRequestI(\u0026#34;PKRIRequest\u0026#34;,1,AdmTypeCode,AdmNo,\u0026#34;\u0026#34;)) } Else { s RetValue=\u0026#34;-1^标本主表信息保存失败:\u0026#34;_$SYSTEM.Status.GetErrorText(sc) } i OrderID=\u0026#34;\u0026#34; s RetValue=\u0026#34;医嘱OrderID字段为空，不能进行医嘱保存:\u0026#34; i RetValue\u0026#39;=0 q b //保存子表（医嘱表）信息 i $d(^dbo.RILabTestSetI(\u0026#34;PKRITestSet\u0026#34;,VisitNumberDR,OrderID)) d .s RILabTestSetRowId=$o(^dbo.RILabTestSetI(\u0026#34;PKRITestSet\u0026#34;,VisitNumberDR,OrderID,\u0026#34;\u0026#34;)) .s objLabTestSet=##class(dbo.RILabTestSet).%OpenId(RILabTestSetRowId) e d .s objLabTestSet=##class(dbo.RILabTestSet).%New() s objLabTestSet.VisitNumberDR=VisitNumberDR s objLabTestSet.TestSetCode=ArcimCode s objLabTestSet.TestSetName=ArcimDesc s objLabTestSet.TestSetRowID=OrderID s objLabTestSet.Sequence=OrderQty s objLabTestSet.BarCode=LabNo s objLabTestSet.TestSetState=OrderStatus s objLabTestSet.SpecimenCode=SpecimenTypeCode s objLabTestSet.SpecimenName=SpecimenTypeDesc s objLabTestSet.ContainerCode=Container s objLabTestSet.ContainerName=ContainerDesc s objLabTestSet.CollectNotes=ColInfo s objLabTestSet.LocationCode=AppDeptCode s objLabTestSet.LocationName=AppDeptDesc s objLabTestSet.WardCode=PatientWard s objLabTestSet.BedNo=BedNo s objLabTestSet.DotorID=DocCode s objLabTestSet.DotorName=DocDesc s objLabTestSet.RequestDate=VerifyDate s objLabTestSet.RequestTime=VerifyTime s objLabTestSet.CollectDate=ColDate s objLabTestSet.CollectTime=ColTime s objLabTestSet.CollectUserID=SpecUserCode s objLabTestSet.CollectUserName=SpecUserName s objLabTestSet.TestSetFee=TSPrice s objLabTestSet.TestSetFeeFlag=BillCode s objLabTestSet.ReqNotes=Note s objLabTestSet.OrdDeptID=RecDeptCode s objLabTestSet.OrdDeptName=RecDeptDesc ;s HospitaID=$o(^dbo.BTHospitalI(\u0026#34;IndexCode\u0026#34;,\u0026#34; \u0026#34;_HospCode,\u0026#34;\u0026#34;)) s objLabTestSet.HospitalCode=HospCode s sc=objLabTestSet.%Save() b ;1 If ($SYSTEM.Status.IsOK(sc)){ s RetValue=0 b ;4 } Else { b ;5 s RetValue=$SYSTEM.Status.GetErrorText(sc) } } } b ;2 i RetValue\u0026#39;=0 s Ret=\u0026#34;\u0026lt;Response\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;ResultCode\u0026gt;1\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;\u0026#34;_RetValue_\u0026#34;\u0026lt;/ResultContent\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Response\u0026gt;\u0026#34; e s Ret=\u0026#34;\u0026lt;Response\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;保存成功！\u0026lt;/ResultContent\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Response\u0026gt;\u0026#34; If RetValue\u0026#39;=0 TROLLBACK q Ret TCOMMIT q Ret ErrorHandle1 TROLLBACK s RetValue=\u0026#34;保存错误\u0026#34;_$tr($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE b ;00 s Ret=\u0026#34;\u0026lt;Response\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;ResultCode\u0026gt;1\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;\u0026#34;_RetValue_\u0026#34;\u0026lt;/ResultContent\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Response\u0026gt;\u0026#34; Quit Ret } /// Creator? DaiYi /// CreatDate? 2020-10-28 /// Description: 保存医嘱数据到中间表 /// Table? dbo.RI_LabRequest,dbo.RI_LabTestSet /// Input? Input:医嘱信息XML串 /// Return? ret:保存是否成功 /// Others? 无 /// s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;成功\u0026lt;/ResultContent\u0026gt;\u0026lt;Orders\u0026gt;\u0026lt;OrderList\u0026gt;\u0026lt;OrdID\u0026gt;\u0026lt;/OrdID\u0026gt;\u0026lt;LabNo\u0026gt;1600904130\u0026lt;/LabNo\u0026gt;\u0026lt;ArcimCode\u0026gt;L002\u0026lt;/ArcimCode\u0026gt;\u0026lt;ArcimDesc\u0026gt;血常规\u0026lt;/ArcimDesc\u0026gt;\u0026lt;OrderQty\u0026gt;1\u0026lt;/OrderQty\u0026gt;\u0026lt;BillCode\u0026gt;P\u0026lt;/BillCode\u0026gt;\u0026lt;SpecimenTypeCode\u0026gt;\u0026lt;/SpecimenTypeCode\u0026gt;\u0026lt;SpecimenTypeDesc\u0026gt;\u0026lt;/SpecimenTypeDesc\u0026gt;\u0026lt;SpVolume\u0026gt;\u0026lt;/SpVolume\u0026gt;\u0026lt;ColInfo\u0026gt;\u0026lt;/ColInfo\u0026gt;\u0026lt;Container\u0026gt;\u0026lt;/Container\u0026gt;\u0026lt;GTSeq\u0026gt;\u0026lt;/GTSeq\u0026gt;\u0026lt;SpecFlag\u0026gt;\u0026lt;/SpecFlag\u0026gt;\u0026lt;VerifyDate\u0026gt;2016-04-26\u0026lt;/VerifyDate\u0026gt;\u0026lt;VerifyTime\u0026gt;13:43:09\u0026lt;/VerifyTime\u0026gt;\u0026lt;ColDate\u0026gt;\u0026lt;/ColDate\u0026gt;\u0026lt;ColTime\u0026gt;\u0026lt;/ColTime\u0026gt;\u0026lt;AppDeptCode\u0026gt;\u0026lt;/AppDeptCode\u0026gt;\u0026lt;AppDeptDesc\u0026gt;体检科\u0026lt;/AppDeptDesc\u0026gt;\u0026lt;RecDeptCode\u0026gt;\u0026lt;/RecDeptCode\u0026gt;\u0026lt;RecDeptDesc\u0026gt;\u0026lt;/RecDeptDesc\u0026gt;\u0026lt;TSPrice\u0026gt;20\u0026lt;/TSPrice\u0026gt;\u0026lt;OrderStatus\u0026gt;E\u0026lt;/OrderStatus\u0026gt;\u0026lt;DocCode\u0026gt;\u0026lt;/DocCode\u0026gt;\u0026lt;DocDesc\u0026gt;\u0026lt;/DocDesc\u0026gt;\u0026lt;RepLoct\u0026gt;\u0026lt;/RepLoct\u0026gt;\u0026lt;RepDate\u0026gt;\u0026lt;/RepDate\u0026gt;\u0026lt;RepTime\u0026gt;\u0026lt;/RepTime\u0026gt;\u0026lt;Note\u0026gt;\u0026lt;/Note\u0026gt;\u0026lt;AdmNo\u0026gt;\u0026lt;/AdmNo\u0026gt;\u0026lt;AdmDate\u0026gt;2016-04-26\u0026lt;/AdmDate\u0026gt;\u0026lt;AdmTime\u0026gt;13:43:09\u0026lt;/AdmTime\u0026gt;\u0026lt;AdmTypeCode\u0026gt;\u0026lt;/AdmTypeCode\u0026gt;\u0026lt;AdmTypeDesc\u0026gt;体检\u0026lt;/AdmTypeDesc\u0026gt;\u0026lt;FeeType\u0026gt;\u0026lt;/FeeType\u0026gt;\u0026lt;PatientWard\u0026gt;\u0026lt;/PatientWard\u0026gt;\u0026lt;BedNo\u0026gt;\u0026lt;/BedNo\u0026gt;\u0026lt;Diagnose\u0026gt;\u0026lt;/Diagnose\u0026gt;\u0026lt;RegisterNo\u0026gt;16009041\u0026lt;/RegisterNo\u0026gt;\u0026lt;PatientName\u0026gt;测试（童）\u0026lt;/PatientName\u0026gt;\u0026lt;SexCode\u0026gt;M\u0026lt;/SexCode\u0026gt;\u0026lt;SexDesc\u0026gt;男\u0026lt;/SexDesc\u0026gt;\u0026lt;DOB\u0026gt;1987-04-26\u0026lt;/DOB\u0026gt;\u0026lt;Age\u0026gt;29岁\u0026lt;/Age\u0026gt;\u0026lt;DocumentID\u0026gt;D16008409\u0026lt;/DocumentID\u0026gt;\u0026lt;PatientAddress\u0026gt;\u0026lt;/PatientAddress\u0026gt;\u0026lt;IdentityCardNo\u0026gt;\u0026lt;/IdentityCardNo\u0026gt;\u0026lt;Telephone\u0026gt;\u0026lt;/Telephone\u0026gt;\u0026lt;SpecUserCode\u0026gt;\u0026lt;/SpecUserCode\u0026gt;\u0026lt;StartDate\u0026gt;\u0026lt;/StartDate\u0026gt;\u0026lt;StartTime\u0026gt;\u0026lt;/StartTime\u0026gt;\u0026lt;SendFlag\u0026gt;NW\u0026lt;/SendFlag\u0026gt;\u0026lt;/OrderList\u0026gt;\u0026lt;/Orders\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; /// w ##class(LIS.WS.BLL.DHCENSLabInterface).SaveRequestTestSet(\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;Orders\u0026gt;\u0026lt;OrderList\u0026gt;\u0026lt;AppDeptDesc\u0026gt;\u0026lt;/AppDeptDesc\u0026gt;\u0026lt;IdentityCardNo\u0026gt;360730199608051156\u0026lt;/IdentityCardNo\u0026gt;\u0026lt;SpecimenTypeDesc\u0026gt;\u0026lt;/SpecimenTypeDesc\u0026gt;\u0026lt;Age\u0026gt;23岁\u0026lt;/Age\u0026gt;\u0026lt;RecDeptCode\u0026gt;\u0026lt;/RecDeptCode\u0026gt;\u0026lt;OrderStatus\u0026gt;\u0026lt;/OrderStatus\u0026gt;\u0026lt;SpVolume\u0026gt;\u0026lt;/SpVolume\u0026gt;\u0026lt;Telephone\u0026gt;\u0026lt;/Telephone\u0026gt;\u0026lt;DOB\u0026gt;1997-01-01\u0026lt;/DOB\u0026gt;\u0026lt;PatientWard\u0026gt;\u0026lt;/PatientWard\u0026gt;\u0026lt;LabNo\u0026gt;9000000114\u0026lt;/LabNo\u0026gt;\u0026lt;ContainerDesc\u0026gt;\u0026lt;/ContainerDesc\u0026gt;\u0026lt;SexCode\u0026gt;1\u0026lt;/SexCode\u0026gt;\u0026lt;SpecUserName\u0026gt;\u0026lt;/SpecUserName\u0026gt;\u0026lt;FeeType\u0026gt;\u0026lt;/FeeType\u0026gt;\u0026lt;TSPrice\u0026gt;\u0026lt;/TSPrice\u0026gt;\u0026lt;ColTime\u0026gt;\u0026lt;/ColTime\u0026gt;\u0026lt;OrderQty\u0026gt;1\u0026lt;/OrderQty\u0026gt;\u0026lt;StartDate\u0026gt;\u0026lt;/StartDate\u0026gt;\u0026lt;BedNo\u0026gt;\u0026lt;/BedNo\u0026gt;\u0026lt;AdmTypeCode\u0026gt;\u0026lt;/AdmTypeCode\u0026gt;\u0026lt;ArcimCode\u0026gt;BGJY000001\u0026lt;/ArcimCode\u0026gt;\u0026lt;RecDeptDesc\u0026gt;\u0026lt;/RecDeptDesc\u0026gt;\u0026lt;PatientAddress\u0026gt;\u0026lt;/PatientAddress\u0026gt;\u0026lt;StartTime\u0026gt;\u0026lt;/StartTime\u0026gt;\u0026lt;VerifyDate\u0026gt;2020-11-19\u0026lt;/VerifyDate\u0026gt;\u0026lt;AppDeptCode\u0026gt;4659\u0026lt;/AppDeptCode\u0026gt;\u0026lt;Container\u0026gt;\u0026lt;/Container\u0026gt;\u0026lt;DocumentID\u0026gt;\u0026lt;/DocumentID\u0026gt;\u0026lt;AdmDate\u0026gt;2020-11-20\u0026lt;/AdmDate\u0026gt;\u0026lt;AdmTime\u0026gt;09:00:00\u0026lt;/AdmTime\u0026gt;\u0026lt;ColDate\u0026gt;\u0026lt;/ColDate\u0026gt;\u0026lt;BillCode\u0026gt;B\u0026lt;/BillCode\u0026gt;\u0026lt;ColInfo\u0026gt;\u0026lt;/ColInfo\u0026gt;\u0026lt;ArcimDesc\u0026gt;血常规\u0026lt;/ArcimDesc\u0026gt;\u0026lt;DocDesc\u0026gt;\u0026lt;/DocDesc\u0026gt;\u0026lt;Note\u0026gt;\u0026lt;/Note\u0026gt;\u0026lt;PatientName\u0026gt;测试\u0026lt;/PatientName\u0026gt;\u0026lt;Diagnose\u0026gt;\u0026lt;/Diagnose\u0026gt;\u0026lt;AdmTypeDesc\u0026gt;\u0026lt;/AdmTypeDesc\u0026gt;\u0026lt;SpecUserCode\u0026gt;\u0026lt;/SpecUserCode\u0026gt;\u0026lt;GTSeq\u0026gt;\u0026lt;/GTSeq\u0026gt;\u0026lt;DocCode\u0026gt;9803\u0026lt;/DocCode\u0026gt;\u0026lt;OrdID\u0026gt;1481\u0026lt;/OrdID\u0026gt;\u0026lt;SexDesc\u0026gt;男\u0026lt;/SexDesc\u0026gt;\u0026lt;VerifyTime\u0026gt;07:11:17\u0026lt;/VerifyTime\u0026gt;\u0026lt;SpecimenTypeCode\u0026gt;\u0026lt;/SpecimenTypeCode\u0026gt;\u0026lt;AdmNo\u0026gt;45887462\u0026lt;/AdmNo\u0026gt;\u0026lt;RegisterNo\u0026gt;635761\u0026lt;/RegisterNo\u0026gt;\u0026lt;/OrderList\u0026gt;\u0026lt;/Orders\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;MessageID\u0026gt;123\u0026lt;/MessageID\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34;) /// w ##class(LIS.WS.BLL.DHCENSLabInterface).SaveRequestTestSet(^tmp(\u0026#34;SaveRequestTestSet\u0026#34;)) ClassMethod SaveRequestTestSetV1(Input) { s ^tmp(\u0026#34;SaveRequestTestSet\u0026#34;)=Input s Input=$g(Input) s Input=$P(Input,\u0026#34;\u0026lt;Body\u0026gt;\u0026#34;,2) s Input=$P(Input,\u0026#34;\u0026lt;/Body\u0026gt;\u0026#34;,1) S Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;成功\u0026lt;/ResultContent\u0026gt;\u0026#34;_Input_\u0026#34;\u0026lt;/Request\u0026gt;\u0026#34; //s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;成功\u0026lt;/ResultContent\u0026gt;\u0026lt;Orders\u0026gt;\u0026lt;OrderList\u0026gt;\u0026lt;OrdID\u0026gt;\u0026lt;/OrdID\u0026gt;\u0026lt;LabNo\u0026gt;1600904130\u0026lt;/LabNo\u0026gt;\u0026lt;ArcimCode\u0026gt;L002\u0026lt;/ArcimCode\u0026gt;\u0026lt;ArcimDesc\u0026gt;血常规\u0026lt;/ArcimDesc\u0026gt;\u0026lt;OrderQty\u0026gt;1\u0026lt;/OrderQty\u0026gt;\u0026lt;BillCode\u0026gt;P\u0026lt;/BillCode\u0026gt;\u0026lt;SpecimenTypeCode\u0026gt;SP001\u0026lt;/SpecimenTypeCode\u0026gt;\u0026lt;SpecimenTypeDesc\u0026gt;血清\u0026lt;/SpecimenTypeDesc\u0026gt;\u0026lt;SpVolume\u0026gt;\u0026lt;/SpVolume\u0026gt;\u0026lt;ColInfo\u0026gt;\u0026lt;/ColInfo\u0026gt;\u0026lt;Container\u0026gt;\u0026lt;/Container\u0026gt;\u0026lt;GTSeq\u0026gt;\u0026lt;/GTSeq\u0026gt;\u0026lt;SpecFlag\u0026gt;\u0026lt;/SpecFlag\u0026gt;\u0026lt;VerifyDate\u0026gt;2016-04-26\u0026lt;/VerifyDate\u0026gt;\u0026lt;VerifyTime\u0026gt;13:43:09\u0026lt;/VerifyTime\u0026gt;\u0026lt;ColDate\u0026gt;\u0026lt;/ColDate\u0026gt;\u0026lt;ColTime\u0026gt;\u0026lt;/ColTime\u0026gt;\u0026lt;AppDeptCode\u0026gt;\u0026lt;/AppDeptCode\u0026gt;\u0026lt;AppDeptDesc\u0026gt;体检科\u0026lt;/AppDeptDesc\u0026gt;\u0026lt;RecDeptCode\u0026gt;\u0026lt;/RecDeptCode\u0026gt;\u0026lt;RecDeptDesc\u0026gt;\u0026lt;/RecDeptDesc\u0026gt;\u0026lt;TSPrice\u0026gt;20\u0026lt;/TSPrice\u0026gt;\u0026lt;OrderStatus\u0026gt;E\u0026lt;/OrderStatus\u0026gt;\u0026lt;DocCode\u0026gt;\u0026lt;/DocCode\u0026gt;\u0026lt;DocDesc\u0026gt;\u0026lt;/DocDesc\u0026gt;\u0026lt;RepLoct\u0026gt;\u0026lt;/RepLoct\u0026gt;\u0026lt;RepDate\u0026gt;\u0026lt;/RepDate\u0026gt;\u0026lt;RepTime\u0026gt;\u0026lt;/RepTime\u0026gt;\u0026lt;Note\u0026gt;\u0026lt;/Note\u0026gt;\u0026lt;AdmNo\u0026gt;\u0026lt;/AdmNo\u0026gt;\u0026lt;AdmDate\u0026gt;2016-04-26\u0026lt;/AdmDate\u0026gt;\u0026lt;AdmTime\u0026gt;13:43:09\u0026lt;/AdmTime\u0026gt;\u0026lt;AdmTypeCode\u0026gt;\u0026lt;/AdmTypeCode\u0026gt;\u0026lt;AdmTypeDesc\u0026gt;体检\u0026lt;/AdmTypeDesc\u0026gt;\u0026lt;FeeType\u0026gt;\u0026lt;/FeeType\u0026gt;\u0026lt;PatientWard\u0026gt;\u0026lt;/PatientWard\u0026gt;\u0026lt;BedNo\u0026gt;\u0026lt;/BedNo\u0026gt;\u0026lt;Diagnose\u0026gt;\u0026lt;/Diagnose\u0026gt;\u0026lt;RegisterNo\u0026gt;16009041\u0026lt;/RegisterNo\u0026gt;\u0026lt;PatientName\u0026gt;测试（童）\u0026lt;/PatientName\u0026gt;\u0026lt;SexCode\u0026gt;M\u0026lt;/SexCode\u0026gt;\u0026lt;SexDesc\u0026gt;男\u0026lt;/SexDesc\u0026gt;\u0026lt;DOB\u0026gt;1987-04-26\u0026lt;/DOB\u0026gt;\u0026lt;Age\u0026gt;29岁\u0026lt;/Age\u0026gt;\u0026lt;DocumentID\u0026gt;D16008409\u0026lt;/DocumentID\u0026gt;\u0026lt;PatientAddress\u0026gt;\u0026lt;/PatientAddress\u0026gt;\u0026lt;IdentityCardNo\u0026gt;\u0026lt;/IdentityCardNo\u0026gt;\u0026lt;Telephone\u0026gt;\u0026lt;/Telephone\u0026gt;\u0026lt;SpecUserCode\u0026gt;\u0026lt;/SpecUserCode\u0026gt;\u0026lt;StartDate\u0026gt;\u0026lt;/StartDate\u0026gt;\u0026lt;StartTime\u0026gt;\u0026lt;/StartTime\u0026gt;\u0026lt;SendFlag\u0026gt;NW\u0026lt;/SendFlag\u0026gt;\u0026lt;/OrderList\u0026gt;\u0026lt;/Orders\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; //s Ret=\u0026#34;\u0026lt;Response\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;ResultCode\u0026gt;1\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;失败！输入信息为空\u0026lt;/ResultContent\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Response\u0026gt;\u0026#34; i \u0026#39;$l(Input) q Ret s repid=$i(^CacheTemp) s RetValue=1 //默认返回值为1 Set $ZTrap = \u0026#34;ErrorHandle\u0026#34; TSTART Set reader = ##class(%XML.Reader).%New() Do reader.OpenString(Input) Do reader.Correlate(\u0026#34;Request\u0026#34;,\u0026#34;LIS.Service.ENS.Data.RequestOrderMsg\u0026#34;) b ;ss While (reader.Next(.obj,.sc)) { If ($SYSTEM.Status.IsOK(sc)) { s ResultCode=obj.ResultCode s ResultContent=obj.ResultContent b ;xx i (ResultCode=0) { s objInfo=##Class(LIS.Model.RPVisitNumber).%New() s Counts=+obj.Orders.Count() s (RegNo,AdmNo,AdmTypeCode,MedicalRecordNo,SpecimenTypeCode,AdmDate,AdmTime,PatName,SexCode)=\u0026#34;\u0026#34; s (DOB,Age,AppDeptCode,AppDeptDesc,DocCode,DocDesc,VerifyDate,VerifyTime,Diagnose)=\u0026#34;\u0026#34; s (Telephone,IdentityCardNo,PatientAddress,Note,ColDate,ColTime,SpecUserCode,BillCode)=\u0026#34;\u0026#34; s err=\u0026#34;\u0026#34; b ;aa f tmpi=1:1:Counts { s OrderList=obj.Orders.GetAt(tmpi) s OrderID=$tr(OrderList.OrdID,$c(0)) s LabNo=OrderList.LabNo s ArcimCode=$tr(OrderList.ArcimCode,$c(0)) s ArcimDesc=$tr(OrderList.ArcimDesc,$c(0)) s OrderQty=$tr(OrderList.OrderQty,$c(0)) b ;BillCode OrderList s BillCode=$tr(OrderList.BillCode,$c(0)) s BillCode=2 s SpecimenTypeCode=$tr(OrderList.SpecimenTypeCode,$c(0)) s SpecimenTypeDesc=$tr(OrderList.SpecimenTypeDesc,$c(0)) s SpVolume=$tr(OrderList.SpVolume,$c(0)) s ColInfo=$tr(OrderList.ColInfo,$c(0)) s Container=$tr(OrderList.Container,$c(0)) s ContainerDesc=$tr(OrderList.ContainerDesc,$c(0)) s GTSeq=$tr(OrderList.GTSeq,$c(0)) s VerifyDate=$tr(OrderList.VerifyDate,$c(0)) s VerifyTime=$tr(OrderList.VerifyTime,$c(0)) s ColDate=$tr(OrderList.ColDate,$c(0)) s ColTime=$tr(OrderList.ColTime,$c(0)) s SpecUserCode=$tr(OrderList.SpecUserCode,$c(0)) s SpecUserName=$tr(OrderList.SpecUserName,$c(0)) s AppDeptCode=$tr(OrderList.AppDeptCode,$c(0)) s AppDeptDesc=$tr(OrderList.AppDeptDesc,$c(0)) s RecDeptCode=$tr(OrderList.RecDeptCode,$c(0)) s RecDeptDesc=$tr(OrderList.RecDeptDesc,$c(0)) s TSPrice=$tr(OrderList.TSPrice,$c(0)) s OrderStatus=$tr(OrderList.OrderStatus,$c(0)) i OrderStatus=\u0026#34;V\u0026#34; s OrderStatus =1 i OrderStatus=\u0026#34;D\u0026#34; s OrderStatus =6 i OrderStatus=\u0026#34;E\u0026#34; s OrderStatus =10 ///E:执行，V:审核，D:停止。只有V状态的医嘱是能出报告 ///1：登记，2：打印条码，3：采集，4：标本运送，5：标本接收，6：停止，7：作废，8.拒收，9.核收，10.HIS已执行 s DocCode=$tr(OrderList.DocCode,$c(0)) s DocDesc=$tr(OrderList.DocDesc,$c(0)) s Note=$tr(OrderList.Note,$c(0)) s AdmNo=$tr(OrderList.AdmNo,$c(0)) s AdmDate=$tr(OrderList.AdmDate,$c(0)) s AdmTime=$tr(OrderList.AdmTime,$c(0)) s AdmTypeCode=$tr(OrderList.AdmTypeCode,$c(0)) i AdmTypeCode=\u0026#34;\u0026#34; s AdmTypeCode=\u0026#34;I\u0026#34; s AdmTypeDesc=$tr(OrderList.AdmTypeDesc,$c(0)) s FeeType=$tr(OrderList.FeeType,$c(0)) s PatientWard=$tr(OrderList.PatientWard,$c(0)) s BedNo=$tr(OrderList.BedNo,$c(0)) s Diagnose=$tr(OrderList.Diagnose,$c(0)) s RegNo=$tr(OrderList.RegisterNo,$c(0)) i AdmNo=\u0026#34;\u0026#34; s AdmNo=RegNo s PatName=$tr(OrderList.PatientName,$c(0)) s SexCode=$tr(OrderList.SexCode,$c(0)) s SexDesc=$tr(OrderList.SexDesc,$c(0)) s DOB=$tr(OrderList.DOB,$c(0)) s Age=$tr(OrderList.Age,$c(0)) s DocumentID=$tr(OrderList.DocumentID,$c(0)) s PatientAddress=$tr(OrderList.PatientAddress,$c(0)) s IdentityCardNo=$tr(OrderList.IdentityCardNo,$c(0)) s Telephone=$tr(OrderList.Telephone,$c(0)) s StartDate=$tr(OrderList.StartDate,$c(0)) s StartTime=$tr(OrderList.StartTime,$c(0)) s HospCode =$tr(OrderList.HospCode,$c(0)) b //保存主表信息i基本信息 i AdmTypeCode=\u0026#34;\u0026#34; s RetValue=\u0026#34;病人类型字段：AdmTypeCode为空，不能进行信息保存！\u0026#34; i AdmNo=\u0026#34;\u0026#34; s RetValue=\u0026#34;就诊号字段：AdmNo为空，不能进行信息保存！\u0026#34; i RetValue\u0026#39;=1 q i $l(AdmTypeCode),$l(AdmNo),$D(^dbo.RILabRequestI(\u0026#34;PKRIRequest\u0026#34;,1,AdmTypeCode,AdmNo)) d .s LabRequestRowId=$o(^dbo.RILabRequestI(\u0026#34;PKRIRequest\u0026#34;,1,AdmTypeCode,AdmNo,\u0026#34;\u0026#34;)) .s ObjLabRequest=##class(dbo.RILabRequest).%OpenId(LabRequestRowId) e d .s ObjLabRequest=##class(dbo.RILabRequest).%New() s ObjLabRequest.VisitNumberFrom=\u0026#34;1\u0026#34; s ObjLabRequest.AdmissionType=AdmTypeCode s ObjLabRequest.RegNo=RegNo s ObjLabRequest.AdmNo=AdmNo s ObjLabRequest.MedicalRecordNo=DocumentID s ObjLabRequest.AdmDate=AdmDate s ObjLabRequest.AdmTime=AdmTime s ObjLabRequest.IDNumber=IdentityCardNo s ObjLabRequest.PaymentType=FeeType s ObjLabRequest.SurName=PatName s ObjLabRequest.GivenName=PatName s ObjLabRequest.SpeciesID=SexCode s ObjLabRequest.SpeciesName=SexDesc s ObjLabRequest.BirthDate=$p(DOB,\u0026#34; \u0026#34;,1) s ObjLabRequest.BirthTime=$p(DOB,\u0026#34; \u0026#34;,2) s ObjLabRequest.Age=+Age s ObjLabRequest.AgeUnit=$e(Age,$l(Age)-1,$l(Age)) s ObjLabRequest.Symptom=Diagnose s ObjLabRequest.MobileNo=Telephone s ObjLabRequest.Address=PatientAddress s sc=ObjLabRequest.%Save() s VisitNumberDR=\u0026#34;\u0026#34; If ($SYSTEM.Status.IsOK(sc)) { s RetValue=0 s VisitNumberDR=$o(^dbo.RILabRequestI(\u0026#34;PKRIRequest\u0026#34;,1,AdmTypeCode,AdmNo,\u0026#34;\u0026#34;)) } Else { s RetValue=\u0026#34;-1^标本主表信息保存失败:\u0026#34;_$SYSTEM.Status.GetErrorText(sc) } i OrderID=\u0026#34;\u0026#34; s RetValue=\u0026#34;医嘱OrderID字段为空，不能进行医嘱保存:\u0026#34; i RetValue\u0026#39;=0 q b //保存子表（医嘱表）信息 i $d(^dbo.RILabTestSetI(\u0026#34;PKRITestSet\u0026#34;,VisitNumberDR,OrderID)) d .s RILabTestSetRowId=$o(^dbo.RILabTestSetI(\u0026#34;PKRITestSet\u0026#34;,VisitNumberDR,OrderID,\u0026#34;\u0026#34;)) .s objLabTestSet=##class(dbo.RILabTestSet).%OpenId(RILabTestSetRowId) e d .s objLabTestSet=##class(dbo.RILabTestSet).%New() s objLabTestSet.VisitNumberDR=VisitNumberDR s objLabTestSet.TestSetCode=ArcimCode s objLabTestSet.TestSetName=ArcimDesc s objLabTestSet.TestSetRowID=OrderID s objLabTestSet.Sequence=OrderQty s objLabTestSet.BarCode=LabNo s objLabTestSet.TestSetState=OrderStatus s objLabTestSet.SpecimenCode=SpecimenTypeCode s objLabTestSet.SpecimenName=SpecimenTypeDesc s objLabTestSet.ContainerCode=Container s objLabTestSet.ContainerName=ContainerDesc s objLabTestSet.CollectNotes=ColInfo s objLabTestSet.LocationCode=AppDeptCode s objLabTestSet.LocationName=AppDeptDesc s objLabTestSet.WardCode=PatientWard s objLabTestSet.BedNo=BedNo s objLabTestSet.DotorID=DocCode s objLabTestSet.DotorName=DocDesc s objLabTestSet.RequestDate=VerifyDate s objLabTestSet.RequestTime=VerifyTime s objLabTestSet.CollectDate=ColDate s objLabTestSet.CollectTime=ColTime s objLabTestSet.CollectUserID=SpecUserCode s objLabTestSet.CollectUserName=SpecUserName s objLabTestSet.TestSetFee=TSPrice s objLabTestSet.TestSetFeeFlag=BillCode s objLabTestSet.ReqNotes=Note s objLabTestSet.OrdDeptID=RecDeptCode s objLabTestSet.OrdDeptName=RecDeptDesc ;s HospitaID=$o(^dbo.BTHospitalI(\u0026#34;IndexCode\u0026#34;,\u0026#34; \u0026#34;_HospCode,\u0026#34;\u0026#34;)) s objLabTestSet.HospitalCode=HospCode b ;xxs s sc=objLabTestSet.%Save() b ;sc If ($SYSTEM.Status.IsOK(sc)) { s RetValue=0 } Else { s RetValue=$SYSTEM.Status.GetErrorText(sc) } } } } } b ; i RetValue\u0026#39;=0 s Ret=\u0026#34;\u0026lt;Response\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;ResultCode\u0026gt;1\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;\u0026#34;_RetValue_\u0026#34;\u0026lt;/ResultContent\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Response\u0026gt;\u0026#34; e s Ret=\u0026#34;\u0026lt;Response\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;保存成功！\u0026lt;/ResultContent\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Response\u0026gt;\u0026#34; If RetValue\u0026#39;=0 TROLLBACK q Ret TCOMMIT q Ret ErrorHandle TROLLBACK s RetValue=\u0026#34;保存错误\u0026#34;_$tr($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE s Ret=\u0026#34;\u0026lt;Response\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;ResultCode\u0026gt;1\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;\u0026#34;_RetValue_\u0026#34;\u0026lt;/ResultContent\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Response\u0026gt;\u0026#34; Quit Ret } /// Creator? DaiYi /// CreatDate? 2020-10-28 /// 2020-11-03 把拼串模式，改成走类方法 /// Description: 标本申请系统返回条码号接口 /// Table? /// Input? Input:医嘱信息XML串 /// Return? ret:保存是否成功 /// Others? 无 /// s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;OrderItemList\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;A001\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;SP001\u0026lt;/Specimen\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;A002\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;SP002\u0026lt;/Specimen\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;OrderItemList\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34;\u0026#34; /// w ##class(LIS.WS.BLL.DHCENSLabInterface).CreateBarcode(\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;OrderItemList\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;XLJY000010\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;SP002\u0026lt;/SpecimenCode\u0026gt;\u0026lt;Containe\u0026gt;CO9\u0026lt;/Containe\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;XLJY000011\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;SP002\u0026lt;/SpecimenCode\u0026gt;\u0026lt;Containe\u0026gt;CO9\u0026lt;/Containe\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;/OrderItemList\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;SourceSystem\u0026gt;500233127\u0026lt;/SourceSystem\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34;).Read() ClassMethod CreateBarcode(Input As %String(MAXLEN=32767)) As %GlobalCharacterStream { s Input=$g(Input) s ^TMP(\u0026#34;CreateBarcode\u0026#34;)=Input Set $ZTrap = \u0026#34;ErrorHandle\u0026#34; //s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;OrderItemList\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;A001\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;SP001\u0026lt;/SpecimenCode\u0026gt;\u0026lt;Container\u0026gt;紫管\u0026lt;/Container\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;A002\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;SP002\u0026lt;/SpecimenCode\u0026gt;\u0026lt;Container\u0026gt;紫管\u0026lt;/Container\u0026gt;\u0026lt;OrdDeptID\u0026gt;生化室\u0026lt;/OrdDeptID\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;/OrderItemList\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; s xmlData= ##class(LIS.Util.COM.XML).FromXML(Input) s xmlDataRps = ##class(LIS.Util.COM.XML).New(\u0026#34;Response\u0026#34;) s Header = ##class(LIS.Util.COM.XML).New(\u0026#34;Header\u0026#34;) s Header.SourceSystem=\u0026#34;\u0026#34; s Header.MessageID=\u0026#34;\u0026#34; d xmlDataRps.Insert(Header) s Body = ##class(LIS.Util.COM.XML).New(\u0026#34;Body\u0026#34;) s Body.ResultCode=0 s Body.ResultContent=\u0026#34;成功\u0026#34; s OrderItemListRps = ##class(LIS.Util.COM.XML).New(\u0026#34;OrderItemList\u0026#34;) s TestSetStrs=\u0026#34;\u0026#34; s count = 0 s OrderItemList = xmlData.Body.OrderItemList ;b ;123 while OrderItemList.Next(){ s item = OrderItemList.Get(count) s ItemCode=item.ItemCode s SpecimenCode=item.SpecimenCode s SpecimenCode=item.SpecimenCode s Container=item.Containe s TestSetStrs=TestSetStrs_ItemCode_\u0026#34;|\u0026#34;_SpecimenCode_\u0026#34;|\u0026#34;_Container_\u0026#34;^\u0026#34; s count=count+1 ;b ;11 } b ;xdgd k ^TMP($ZN,$J) s Num=1 f i=1:1:$l(TestSetStrs,\u0026#34;^\u0026#34;) d .s TestSetCode=$p($p(TestSetStrs,\u0026#34;^\u0026#34;,i),\u0026#34;|\u0026#34;,1),TestSetDr=\u0026#34;\u0026#34;,SpecimenDR=\u0026#34;\u0026#34;,ContainerDR=\u0026#34;\u0026#34; .s SpecimenDR=$p($p(TestSetStrs,\u0026#34;^\u0026#34;,i),\u0026#34;|\u0026#34;,2) .s ContainerDR=$p($p(TestSetStrs,\u0026#34;^\u0026#34;,i),\u0026#34;|\u0026#34;,3) .i TestSetCode=\u0026#34;\u0026#34; q .i $l(TestSetCode) s TestSetDr=$o(^dbo.BTTestSetI(\u0026#34;IndexHISCode\u0026#34;,TestSetCode,\u0026#34;\u0026#34;)) .i $l(TestSetDr),\u0026#39;$l(SpecimenDR) s SpecimenDR=$lg(^dbo.BTTestSetD(TestSetDr),10) .i $l(TestSetDr),\u0026#39;$l(ContainerDR) s ContainerDR=$lg(^dbo.BTTestSetD(TestSetDr),11) .s StrData=\u0026#34;SPE\u0026#34;_SpecimenDR_\u0026#34;CON\u0026#34;_ContainerDR .s ^TMP($ZN,$J,StrData,Num)=TestSetCode_\u0026#34;|\u0026#34;_SpecimenDR .s Num=Num+1 b //合并组合成条码 s StrData=\u0026#34;\u0026#34; f s StrData=$o(^TMP($ZN,$J,StrData)) q:StrData=\u0026#34;\u0026#34; d .s Labno=##Class(LISSP.BLL.DHCSYSRecordNumber).CreateNewNumber(\u0026#34;MBC\u0026#34;) .s Num=\u0026#34;\u0026#34; f s Num=$o(^TMP($ZN,$J,StrData,Num)) q:Num=\u0026#34;\u0026#34; d ..s ItemCode=$p($g(^TMP($ZN,$J,StrData,Num)),\u0026#34;|\u0026#34;,1) ..s SpecimenCode=$p($g(^TMP($ZN,$J,StrData,Num)),\u0026#34;|\u0026#34;,2) ..s OrderItemRps = ##class(LIS.Util.COM.XML).New(\u0026#34;OrderItem\u0026#34;) ..s OrderItemRps.ItemCode=ItemCode ..s OrderItemRps.SpecimenCode=SpecimenCode ..s OrderItemRps.LabNo=Labno ..d OrderItemListRps.Insert(OrderItemRps) ..s count = count + 1 ..b ;dgsa d Body.Insert(OrderItemListRps) d xmlDataRps.Insert(Body) s out=xmlDataRps.ToXMLStream().Read() q out b ;xdg ErrorHandle Quit ##class(LIS.Service.ENS.CommonENS).MsgErr(-1,$ZE) } /// Creator? DaiYi /// CreatDate? 2020-10-28 /// Description: 标本申请系统返回条码号接口 /// Table? /// Input? Input:医嘱信息XML串 /// Return? ret:保存是否成功 /// Others? 无 /// s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;OrderItemList\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;WY000010\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;\u0026lt;/SpecimenCode\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;ZZJY003\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;SP002\u0026lt;/SpecimenCode\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;OrderItemList\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34;\u0026#34; /// w ##class(LIS.WS.BLL.DHCENSLabInterface).CreateBarcode(\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;OrderItemList\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;WY000010\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;\u0026lt;/SpecimenCode\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;ZZJY003\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;SP002\u0026lt;/SpecimenCode\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;OrderItemList\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34;) ClassMethod CreateBarcodeOld(Input) { s Input=$g(Input) //s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;OrderItemList\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;A001\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;SP001\u0026lt;/Specimen\u0026gt;\u0026lt;Container\u0026gt;紫管\u0026lt;/Container\u0026gt;\u0026lt;OrdDeptID\u0026gt;生化室\u0026lt;/OrdDeptID\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;A002\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;SP002\u0026lt;/Specimen\u0026gt;\u0026lt;Container\u0026gt;紫管\u0026lt;/Container\u0026gt;\u0026lt;OrdDeptID\u0026gt;生化室\u0026lt;/OrdDeptID\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;OrderItemList\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; ;s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;OrderItemList\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;WY000010\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;\u0026lt;/SpecimenCode\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;ZZJY003\u0026lt;/ItemCode\u0026gt;\u0026lt;SpecimenCode\u0026gt;SP002\u0026lt;/SpecimenCode\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026lt;OrderItemList\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; s Input=$REPLACE(Input,\u0026#34;\u0026lt;ItemCode\u0026gt;\u0026#34;,\u0026#34;@\u0026#34;) s Input=$REPLACE(Input,\u0026#34;\u0026lt;/ItemCode\u0026gt;\u0026#34;,\u0026#34;^\u0026#34;) s TestSetStrs=\u0026#34;\u0026#34; f i=1:1:$l(Input,\u0026#34;^\u0026#34;) d .s TestSetStrs=TestSetStrs_\u0026#34;|\u0026#34;_$p($p(Input,\u0026#34;^\u0026#34;,i),\u0026#34;@\u0026#34;,2) .b ;1 s Ret=\u0026#34;\u0026lt;Response\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;成功\u0026lt;/ResultContent\u0026gt;\u0026#34; k ^TMP($ZN,$J) s Num=1 b ;12 f i=1:1:$l(TestSetStrs,\u0026#34;|\u0026#34;) d .s TestSetCode=$p(TestSetStrs,\u0026#34;|\u0026#34;,i),TestSetDr=\u0026#34;\u0026#34;,SpecimenDR=\u0026#34;\u0026#34;,ContainerDR=\u0026#34;\u0026#34; .i TestSetCode=\u0026#34;\u0026#34; q .s HospDr=\u0026#34;\u0026#34; f s HospDr=$o(^dbo.BTTestSetI(\u0026#34;IndexCode\u0026#34;,HospDr)) q:HospDr=\u0026#34;\u0026#34; d ..i \u0026#39;$d(^dbo.BTTestSetI(\u0026#34;IndexCode\u0026#34;,HospDr,\u0026#34; \u0026#34;_TestSetCode)) q ..s TestSetDr=$o(^dbo.BTTestSetI(\u0026#34;IndexCode\u0026#34;,HospDr,\u0026#34; \u0026#34;_TestSetCode,\u0026#34;\u0026#34;)) .i $l(TestSetDr) s SpecimenDR=$lg(^dbo.BTTestSetD(TestSetDr),10) .i $l(ContainerDR) s ContainerDR=$lg(^dbo.BTTestSetD(TestSetDr),11) .s StrData=\u0026#34;SPE\u0026#34;_SpecimenDR_\u0026#34;CON\u0026#34;_ContainerDR .s ^TMP($ZN,$J,StrData,Num)=TestSetCode_\u0026#34;|\u0026#34;_SpecimenDR .s Num=Num+1 i Num\u0026gt;1 s Ret=Ret_\u0026#34;\u0026lt;OrderItemList\u0026gt;\u0026#34; s StrData=\u0026#34;\u0026#34; f s StrData=$o(^TMP($ZN,$J,StrData)) q:StrData=\u0026#34;\u0026#34; d .s Labno=##Class(LISSP.BLL.DHCSYSRecordNumber).CreateNewNumber(\u0026#34;MBC\u0026#34;) .s Num=\u0026#34;\u0026#34; f s Num=$o(^TMP($ZN,$J,StrData,Num)) q:Num=\u0026#34;\u0026#34; d ..s Ret=Ret_\u0026#34;\u0026lt;OrderItem\u0026gt;\u0026lt;ItemCode\u0026gt;\u0026#34;_$p($g(^TMP($ZN,$J,StrData,Num)),\u0026#34;|\u0026#34;,1)_\u0026#34;\u0026lt;/ItemCode\u0026gt;\u0026#34; ..s Ret=Ret_\u0026#34;\u0026lt;SpecimenCode\u0026gt;\u0026#34;_$p($g(^TMP($ZN,$J,StrData,Num)),\u0026#34;|\u0026#34;,2)_\u0026#34;\u0026lt;/SpecimenCode\u0026gt;\u0026#34; ..s Ret=Ret_\u0026#34;\u0026lt;LabNo\u0026gt;\u0026#34;_Labno_\u0026#34;\u0026lt;/LabNo\u0026gt;\u0026lt;/OrderItem\u0026gt;\u0026#34; s Ret=Ret_\u0026#34;\u0026lt;/OrderItemList\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Response\u0026gt;\u0026#34; q Ret } /// Creator? DaiYi /// CreatDate? 2020-10-28 /// Description: 更新标本接收状态 /// Table? dbo.RI_LabTestSet /// Input? BarCode:条码号, OrderID：医嘱代码,HospCode:医院代码,RecFlag：状态C：接收，H：核收 /// Return? SQLCODE：0 成功，其他失败 /// Others? 无 /// w ##class(LIS.WS.BLL.DHCENSLabInterface).OrderItemExec(\u0026#34;\u0026#34;) /// W ##class(LIS.WS.BLL.DHCENSLabInterface).OrderItemExec(\u0026#34;9000000001\u0026#34;,\u0026#34;1236\u0026#34;,\u0026#34;500233999\u0026#34;,\u0026#34;H\u0026#34;) ClassMethod OrderItemExec(BarCode, OrderID, HospCode, RecFlag) { s BarCode=$g(BarCode),OrderID=$g(OrderID),TestSetState=5 i \u0026#39;$l(BarCode) q \u0026#34;条码号不能为空！\u0026#34; i \u0026#39;$l(OrderID) q \u0026#34;医嘱代码不能为空！\u0026#34; i RecFlag=\u0026#34;C\u0026#34; s TestSetState=5 //接收、 i RecFlag=\u0026#34;H\u0026#34; s TestSetState=9 //核收 B ;XDG s ^tmp(\u0026#34;OrderItemExec\u0026#34;,\u0026#34;RecFlag\u0026#34;,BarCode,OrderID)=RecFlag \u0026amp;sql(Update dbo.RI_LabTestSet set TestSetState=:TestSetState WHERE BarCode=:BarCode and TestSetRowID=:OrderID) B //在调用第三方系统，更新杭创接口信息 s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt; \u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;BarCode\u0026gt;\u0026#34;_BarCode_\u0026#34;\u0026lt;/BarCode\u0026gt;\u0026lt;OrderID\u0026gt;\u0026#34;_OrderID_\u0026#34;\u0026lt;/OrderID\u0026gt;\u0026lt;HospCode\u0026gt;\u0026#34;_HospCode_\u0026#34;\u0026lt;/HospCode\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; s soap=##class(LisWsServiceService.LisWsServicePort).%New() s ^tmp(\u0026#34;OrderItemExec\u0026#34;,\u0026#34;in\u0026#34;,BarCode,OrderID)=Input s ret=soap.OrderItemExec(Input) s ^tmp(\u0026#34;OrderItemExec\u0026#34;,\u0026#34;out\u0026#34;,BarCode,OrderID)=Input q ret } /// Creator? DaiYi /// CreatDate? 2020-10-28 /// Description: 标本申请系统返回条码号接口 /// Table? dbo.RI_LabTestSet /// Input? BarCode：条码号，拒收信息 /// Return? ret:保存是否成功 /// Others? 无 /// s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;BarCode\u0026gt;1234567890\u0026lt;/BarCode \u0026gt;\u0026lt;RejRemark\u0026gt;标本溶血\u0026lt;/RejRemark\u0026gt;\u0026lt;RejTime\u0026gt;2020-08-01\u0026lt;/RejTime\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; /// w ##class(LIS.WS.BLL.DHCENSLabInterface).SyncSampleReject(\u0026#34;9000000194\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;500233127\u0026#34;) ClassMethod SyncSampleReject(BarCode, RejRemark, HospCode) { s BarCode=$g(BarCode) s RejRemark=$g(RejRemark) s TestSetState=8 \u0026amp;sql(Update dbo.RI_LabTestSet set TestSetState=:TestSetState WHERE BarCode=:BarCode) s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;HospCode\u0026gt;\u0026#34;_HospCode_\u0026#34;\u0026lt;/HospCode\u0026gt;\u0026lt;BarCode\u0026gt;\u0026#34;_BarCode_\u0026#34;\u0026lt;/BarCode \u0026gt;\u0026lt;RejRemark\u0026gt;\u0026#34;_RejRemark_\u0026#34;\u0026lt;/RejRemark\u0026gt;\u0026lt;RejTime\u0026gt;\u0026#34;_$zdt($h,3)_\u0026#34;\u0026lt;/RejTime\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; s soap=##class(LisWsServiceService.LisWsServicePort).%New() s ^tmp(\u0026#34;OrderItemExec\u0026#34;,\u0026#34;in\u0026#34;,BarCode)=Input s ret=soap.SyncSampleReject(Input) s ^tmp(\u0026#34;OrderItemExec\u0026#34;,\u0026#34;out\u0026#34;,BarCode)=Input q ret } /// Creator? DaiYi /// CreatDate? 2020-10-28 /// Description: 标本申请系统返回条码号接口 /// Table? dbo.RI_LabTestSet /// Input? OrdID：医嘱ID,, ReportID:报告ID,ReportStatus：状态 /// Return? ret:保存是否成功 /// Others? 无 /// s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;BarCode\u0026gt;1234567890\u0026lt;/BarCode \u0026gt;\u0026lt;RejRemark\u0026gt;标本溶血\u0026lt;/RejRemark\u0026gt;\u0026lt;RejTime\u0026gt;2020-08-01\u0026lt;/RejTime\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; /// w ##class(LIS.WS.BLL.DHCENSLabInterface).SyncReprtStatus(OrdID, ReportID, ReportStatus, HospCode) ClassMethod SyncReprtStatus(OrdID, ReportID, ReportStatus, HospCode) { s OrdID=$g(OrdID) s ReportID=$g(ReportID) s ReportStatus=$g(ReportStatus) s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;OrdID\u0026gt;\u0026#34;_OrdID_\u0026#34;\u0026lt;/OrdID\u0026gt;\u0026lt;ReportID\u0026gt;\u0026#34;_ReportID_\u0026#34;\u0026lt;/ReportID\u0026gt;\u0026lt;ReportStatus\u0026gt;\u0026#34;_ReportStatus_\u0026#34;\u0026lt;/ReportStatus\u0026gt;\u0026lt;HospCode\u0026gt;\u0026#34;_HospCode_\u0026#34;\u0026lt;/HospCode\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; s soap=##class(LisWsServiceService.LisWsServicePort).%New() s ^tmp(\u0026#34;SyncReprtStatus,input\u0026#34;,ReportID,OrdID)=Input s ret=soap.SyncReprtStatus(Input) s ^tmp(\u0026#34;SyncReprtStatus,ret\u0026#34;,ReportID,OrdID)=ret q ret } /// Creator? DaiYi /// CreatDate? 2020-10-29 /// Description: 根据条码号获取医嘱信息 /// Table? dbo.RI_LabRequest,dbo.RI_LabTestSet /// Input? LabNo：条码号 /// Return? ret:返回标本信息XML串 /// Others? 无//AND a.TestSetFeeFlag=\u0026#34;1\u0026#34; /// w ##class(LIS.WS.BLL.DHCENSLabInterface).GetSampleInfo(\u0026#34;9000000117\u0026#34;) ClassMethod GetSampleInfo(LabNo) As %String { s ret=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;1\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;查询记录失败,条码号为空\u0026lt;/ResultContent\u0026gt;\u0026#34; //s xmlData= ##class(LIS.Util.COM.XML).FromXML(Input) i LabNo=\u0026#34;\u0026#34; q ret s TestsetRowId=\u0026#34;\u0026#34;,TestSetStatus=\u0026#34;\u0026#34;,TestSetFeeFlag=\u0026#34;P\u0026#34; i $d(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,LabNo)) d .s TestSetRowId=$o(^dbo.RILabTestSetI(\u0026#34;BarCode\u0026#34;,LabNo,\u0026#34;\u0026#34;)) .s TestSetStatus=$lg(^dbo.RILabTestSetD(TestSetRowId),8) .s TestSetFeeFlag=$lg(^dbo.RILabTestSetD(TestSetRowId),44) i TestSetStatus=9 q \u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;1\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;标本已经核收完毕！\u0026lt;/ResultContent\u0026gt;\u0026#34; i TestSetStatus=6 q \u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;1\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;医嘱已经停止！\u0026lt;/ResultContent\u0026gt;\u0026#34; i TestSetStatus=7 q \u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;1\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;医嘱已经作废！\u0026lt;/ResultContent\u0026gt;\u0026#34; i TestSetFeeFlag\u0026#39;=\u0026#34;P\u0026#34; q \u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;1\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;医嘱未收费，请先缴费！\u0026lt;/ResultContent\u0026gt;\u0026#34; s SpecNums=0 \u0026amp;sql(DECLARE RIQuest CURSOR FOR SELECT a.TestSetRowID,a.BarCode,a.TestSetCode,a.TestSetName,a.Sequence,a.SpecimenCode,a.SpecimenName,a.CollectNotes, a.ContainerCode,a.SpecialFlag,a.SpecialRowId,a.RequestDate,a.RequestTime,a.CollectDate, a.CollectTime,a.LocationCode,a.LocationName,a.OrdDeptID,a.OrdDeptName,a.TestSetFee,a.TestSetState, a.DotorID,a.DotorName,a.ReqNotes,b.AdmNo,b.AdmDate,b.AdmTime,b.AdmissionType,b.PaymentType,a.WardCode, a.BedNo,b.Symptom,b.RegNo,b.SurName,b.SpeciesID,b.SpeciesName,b.BirthDate,b.Age,b.AgeUnit,b.MedicalRecordNo, b.Address,b.MobileNo,a.CollectUserID,a.CollectUserName,a.TestSetFeeFlag,a.RowId,b.HospitaID into :OrdID,:BarCode,:ArcimCode,:ArcimDesc,:OrderQty,:SpecimenTypeCode,:SpecimenTypeDesc,:SpVolume, :Container,:GTSeq,:SpecFlag,:VerifyDate,:VerifyTime,:ColDate, :ColTime,:AppDeptCode,:AppDeptDesc,:RecDeptCode,:RecDeptDesc,:TSPrice,:OrderStatus, :DocCode,:DocDesc,:Note,:AdmNo,:AdmDate,:AdmTime,:AdmTypeCode,:FeeType,:PatientWard, :BedNo,:Diagnose,:RegisterNo,:PatientName,:SexCode,:SexDesc,:DOB,:Age,:AgeUnit,:DocumentID, :PatientAddress,:Telephone,:SpecUserCode,:SpecUserName,:SendFlag,:RowId,:HospCode FROM dbo.RI_LabTestSet AS a,dbo.RI_LabRequest AS b WHERE a.VisitNumberDR=b.RowId AND a.BarCode=:LabNo ) \u0026amp;sql(OPEN RIQuest) \u0026amp;sql(FETCH RIQuest) i SQLCODE=0 d .s SpecNums=1 .s ret=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;成功\u0026lt;/ResultContent\u0026gt;\u0026#34; .s ret=ret_\u0026#34;\u0026lt;Orders\u0026gt;\u0026#34; While (SQLCODE = 0) { s ret=ret_\u0026#34;\u0026lt;OrderList\u0026gt;\u0026lt;OrdID\u0026gt;\u0026#34;_$tr(OrdID,$c(0))_\u0026#34;\u0026lt;/OrdID\u0026gt;\u0026lt;LabNo\u0026gt;\u0026#34;_$tr(BarCode,$c(0))_\u0026#34;\u0026lt;/LabNo\u0026gt;\u0026lt;ArcimCode\u0026gt;\u0026#34;_$tr(ArcimCode,$c(0))_\u0026#34;\u0026lt;/ArcimCode\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;ArcimDesc\u0026gt;\u0026#34;_$tr(ArcimDesc,$c(0))_\u0026#34;\u0026lt;/ArcimDesc\u0026gt;\u0026lt;OrderQty\u0026gt;\u0026#34;_$tr(OrderQty,$c(0))_\u0026#34;\u0026lt;/OrderQty\u0026gt;\u0026lt;BillCode\u0026gt;\u0026lt;/BillCode\u0026gt;\u0026lt;SpecimenTypeCode\u0026gt;\u0026#34; s ret=ret_$tr(SpecimenTypeCode,$c(0))_\u0026#34;\u0026lt;/SpecimenTypeCode\u0026gt;\u0026lt;SpecimenTypeDesc\u0026gt;\u0026#34;_$tr(SpecimenTypeDesc,$c(0))_\u0026#34;\u0026lt;/SpecimenTypeDesc\u0026gt;\u0026lt;SpVolume\u0026gt;\u0026#34;_$tr(SpVolume,$c(0))_\u0026#34;\u0026lt;/SpVolume\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;ColInfo\u0026gt;\u0026lt;/ColInfo\u0026gt;\u0026lt;Container\u0026gt;\u0026#34;_$tr(Container,$c(0))_\u0026#34;\u0026lt;/Container\u0026gt;\u0026lt;GTSeq\u0026gt;\u0026#34;_$tr(GTSeq,$c(0))_\u0026#34;\u0026lt;/GTSeq\u0026gt;\u0026lt;SpecFlag\u0026gt;\u0026#34;_$tr(SpecFlag,$c(0))_\u0026#34;\u0026lt;/SpecFlag\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;VerifyDate\u0026gt;\u0026#34;_$tr(VerifyDate,$c(0))_\u0026#34;\u0026lt;/VerifyDate\u0026gt;\u0026lt;VerifyTime\u0026gt;\u0026#34;_$tr(VerifyTime,$c(0))_\u0026#34;\u0026lt;/VerifyTime\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;ColDate\u0026gt;\u0026#34;_$tr(ColDate,$c(0))_\u0026#34;\u0026lt;/ColDate\u0026gt;\u0026lt;ColTime\u0026gt;\u0026#34;_$tr(ColTime,$c(0))_\u0026#34;\u0026lt;/ColTime\u0026gt;\u0026lt;AppDeptCode\u0026gt;\u0026#34;_$tr(AppDeptCode,$c(0))_\u0026#34;\u0026lt;/AppDeptCode\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;AppDeptDesc\u0026gt;\u0026#34;_$tr(AppDeptDesc,$c(0))_\u0026#34;\u0026lt;/AppDeptDesc\u0026gt;\u0026lt;RecDeptCode\u0026gt;\u0026#34;_$tr(RecDeptCode,$c(0))_\u0026#34;\u0026lt;/RecDeptCode\u0026gt;\u0026lt;RecDeptDesc\u0026gt;\u0026#34; s ret=ret_$tr(AppDeptDesc,$c(0))_\u0026#34;\u0026lt;/RecDeptDesc\u0026gt;\u0026lt;TSPrice\u0026gt;\u0026#34;_$tr(TSPrice,$c(0))_\u0026#34;\u0026lt;/TSPrice\u0026gt;\u0026lt;OrderStatus\u0026gt;\u0026#34;_$tr(OrderStatus,$c(0))_\u0026#34;\u0026lt;/OrderStatus\u0026gt;\u0026lt;DocCode\u0026gt;\u0026#34;_$tr(DocCode,$c(0))_\u0026#34;\u0026lt;/DocCode\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;DocDesc\u0026gt;\u0026#34;_$tr(DocDesc,$c(0))_\u0026#34;\u0026lt;/DocDesc\u0026gt;\u0026lt;RepLoct\u0026gt;\u0026lt;/RepLoct\u0026gt;\u0026lt;RepDate\u0026gt;\u0026lt;/RepDate\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;RepTime\u0026gt;\u0026lt;/RepTime\u0026gt;\u0026lt;Note\u0026gt;\u0026#34;_$tr(Note,$c(0))_\u0026#34;\u0026lt;/Note\u0026gt;\u0026lt;AdmNo\u0026gt;\u0026#34;_$tr(AdmNo,$c(0))_\u0026#34;\u0026lt;/AdmNo\u0026gt;\u0026lt;AdmDate\u0026gt;\u0026#34;_$tr(AdmDate,$c(0))_\u0026#34;\u0026lt;/AdmDate\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;AdmTime\u0026gt;\u0026#34;_$tr(AdmTime,$c(0))_\u0026#34;\u0026lt;/AdmTime\u0026gt;\u0026lt;AdmTypeCode\u0026gt;\u0026#34;_$tr(AdmTypeCode,$c(0))_\u0026#34;\u0026lt;/AdmTypeCode\u0026gt;\u0026lt;AdmTypeDesc\u0026gt;\u0026lt;/AdmTypeDesc\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;FeeType\u0026gt;\u0026#34;_$tr(FeeType,$c(0))_\u0026#34;\u0026lt;/FeeType\u0026gt;\u0026lt;PatientWard\u0026gt;\u0026#34;_$tr(PatientWard,$c(0))_\u0026#34;\u0026lt;/PatientWard\u0026gt;\u0026lt;BedNo\u0026gt;\u0026#34;_$tr(BedNo,$c(0))_\u0026#34;\u0026lt;/BedNo\u0026gt;\u0026lt;Diagnose\u0026gt;\u0026#34;_$tr(Diagnose,$c(0))_\u0026#34;\u0026lt;/Diagnose\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;RegisterNo\u0026gt;\u0026#34;_$tr(RegisterNo,$c(0))_\u0026#34;\u0026lt;/RegisterNo\u0026gt;\u0026lt;PatientName\u0026gt;\u0026#34;_$tr(PatientName,$c(0))_\u0026#34;\u0026lt;/PatientName\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;SexCode\u0026gt;\u0026#34;_$tr(SexCode,$c(0))_\u0026#34;\u0026lt;/SexCode\u0026gt;\u0026lt;SexDesc\u0026gt;\u0026#34;_$tr(SexDesc,$c(0))_\u0026#34;\u0026lt;/SexDesc\u0026gt;\u0026lt;DOB\u0026gt;\u0026#34;_$tr(DOB,$c(0))_\u0026#34;\u0026lt;/DOB\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;Age\u0026gt;\u0026#34;_$tr(Age,$c(0))_\u0026#34;\u0026lt;/Age\u0026gt;\u0026lt;DocumentID\u0026gt;\u0026#34;_$tr(DocumentID,$c(0))_\u0026#34;\u0026lt;/DocumentID\u0026gt;\u0026lt;PatientAddress\u0026gt;\u0026#34;_$tr(PatientAddress,$c(0))_\u0026#34;\u0026lt;/PatientAddress\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;IdentityCardNo\u0026gt;\u0026lt;/IdentityCardNo\u0026gt;\u0026lt;Telephone\u0026gt;\u0026#34;_$tr(Telephone,$c(0))_\u0026#34;\u0026lt;/Telephone\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;SpecUserCode\u0026gt;\u0026#34;_$tr(SpecUserCode,$c(0))_\u0026#34;\u0026lt;/SpecUserCode\u0026gt;\u0026lt;StartDate\u0026gt;\u0026lt;/StartDate\u0026gt;\u0026lt;StartTime\u0026gt;\u0026lt;/StartTime\u0026gt;\u0026#34; s ret=ret_\u0026#34;\u0026lt;SendFlag\u0026gt;\u0026#34;_$tr(SendFlag,$c(0))_\u0026#34;\u0026lt;/SendFlag\u0026gt;\u0026#34;_\u0026#34;\u0026lt;HospCode\u0026gt;\u0026#34;_$tr(HospCode,$c(0))_\u0026#34;\u0026lt;/HospCode\u0026gt;\u0026lt;/OrderList\u0026gt;\u0026#34; s TestsetRowId=TestsetRowId_RowId_\u0026#34;^\u0026#34; \u0026amp;sql(FETCH RIQuest) } i SpecNums\u0026gt;0 s ret=ret_\u0026#34;\u0026lt;/Orders\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; i SpecNums=0 s ret=ret_\u0026#34;\u0026lt;/Request\u0026gt;\u0026#34; \u0026amp;sql(CLOSE RIQuest) Q ret } /// 7.根据报告ID获取报告信息 /// Input: \u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;ReportID\u0026gt;19\u0026lt;/ReportID\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt; /// Output: \u0026lt;Response\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt;\u0026lt;ResultContent\u0026gt;成功\u0026lt;/ResultContent\u0026gt;\u0026lt;LabNo\u0026gt;7000027229\u0026lt;/LabNo\u0026gt;\u0026lt;RecUserCode\u0026gt;1450\u0026lt;/RecUserCode\u0026gt;\u0026lt;RecUser\u0026gt;陈秀娟\u0026lt;/RecUser\u0026gt;\u0026lt;RecDate\u0026gt;2016-11-13\u0026lt;/RecDate\u0026gt;\u0026lt;RecTime\u0026gt;15:12:34\u0026lt;/RecTime\u0026gt;\u0026lt;EntryUserCode\u0026gt;1560\u0026lt;/EntryUserCode\u0026gt;\u0026lt;EntryUser\u0026gt;郑泽强\u0026lt;/EntryUser\u0026gt;\u0026lt;EntryDate\u0026gt;2016-11-14\u0026lt;/EntryDate\u0026gt;\u0026lt;EntryTime\u0026gt;12:53:51\u0026lt;/EntryTime\u0026gt;\u0026lt;AuthUserCode\u0026gt;1475\u0026lt;/AuthUserCode\u0026gt;\u0026lt;AuthUser\u0026gt;周莲\u0026lt;/AuthUser\u0026gt;\u0026lt;AuthDate\u0026gt;2016-11-14\u0026lt;/AuthDate\u0026gt;\u0026lt;AuthTime\u0026gt;12:53:51\u0026lt;/AuthTime\u0026gt;\u0026lt;Notes/\u0026gt;\u0026lt;MainWarnDesc/\u0026gt;\u0026lt;ResultMsgs\u0026gt;\u0026lt;ResultMsg\u0026gt;\u0026lt;TestCode\u0026gt;4081\u0026lt;/TestCode\u0026gt;\u0026lt;TestName\u0026gt;弓形虫抗体\u0026lt;/TestName\u0026gt;\u0026lt;TestEngName\u0026gt;TO-lgM(ELISA)\u0026lt;/TestEngName\u0026gt;\u0026lt;Result\u0026gt;阴性(-)\u0026lt;/Result\u0026gt;\u0026lt;Units/\u0026gt;\u0026lt;Notes/\u0026gt;\u0026lt;ResultFlag\u0026gt;N\u0026lt;/ResultFlag\u0026gt;\u0026lt;Ranges\u0026gt;阴性（-）\u0026lt;/Ranges\u0026gt;\u0026lt;Sequence\u0026gt;280\u0026lt;/Sequence\u0026gt;\u0026lt;MICFlag\u0026gt;N\u0026lt;/MICFlag\u0026gt;\u0026lt;MICName/\u0026gt;\u0026lt;WarnDesc/\u0026gt;\u0026lt;OrgResultMsgs/\u0026gt;\u0026lt;/ResultMsg\u0026gt;\u0026lt;ResultMsg\u0026gt;\u0026lt;TestCode\u0026gt;4072\u0026lt;/TestCode\u0026gt;\u0026lt;TestName\u0026gt;风疹病毒抗体\u0026lt;/TestName\u0026gt;\u0026lt;TestEngName\u0026gt;R-lgM(ELISA)\u0026lt;/TestEngName\u0026gt;\u0026lt;Result\u0026gt;阴性(-)\u0026lt;/Result\u0026gt;\u0026lt;Units/\u0026gt;\u0026lt;Notes/\u0026gt;\u0026lt;ResultFlag\u0026gt;N\u0026lt;/ResultFlag\u0026gt;\u0026lt;Ranges\u0026gt;阴性（-）\u0026lt;/Ranges\u0026gt;\u0026lt;Sequence\u0026gt;290\u0026lt;/Sequence\u0026gt;\u0026lt;MICFlag\u0026gt;N\u0026lt;/MICFlag\u0026gt;\u0026lt;MICName/\u0026gt;\u0026lt;WarnDesc/\u0026gt;\u0026lt;OrgResultMsgs/\u0026gt;\u0026lt;/ResultMsg\u0026gt;\u0026lt;ResultMsg\u0026gt;\u0026lt;TestCode\u0026gt;4016\u0026lt;/TestCode\u0026gt;\u0026lt;TestName\u0026gt;巨细胞病毒抗体\u0026lt;/TestName\u0026gt;\u0026lt;TestEngName\u0026gt;C -lgM(ELISA)\u0026lt;/TestEngName\u0026gt;\u0026lt;Result\u0026gt;阴性(-)\u0026lt;/Result\u0026gt;\u0026lt;Units/\u0026gt;\u0026lt;Notes/\u0026gt;\u0026lt;ResultFlag\u0026gt;N\u0026lt;/ResultFlag\u0026gt;\u0026lt;Ranges\u0026gt;阴性（-）\u0026lt;/Ranges\u0026gt;\u0026lt;Sequence\u0026gt;300\u0026lt;/Sequence\u0026gt;\u0026lt;MICFlag\u0026gt;N\u0026lt;/MICFlag\u0026gt;\u0026lt;MICName/\u0026gt;\u0026lt;WarnDesc/\u0026gt;\u0026lt;OrgResultMsgs/\u0026gt;\u0026lt;/ResultMsg\u0026gt;\u0026lt;ResultMsg\u0026gt;\u0026lt;TestCode\u0026gt;4053\u0026lt;/TestCode\u0026gt;\u0026lt;TestName\u0026gt;单纯疱疹病毒抗体Ⅰ型M\u0026lt;/TestName\u0026gt;\u0026lt;TestEngName\u0026gt;HSV-ⅠlgM(ELISA)\u0026lt;/TestEngName\u0026gt;\u0026lt;Result\u0026gt;阴性(-)\u0026lt;/Result\u0026gt;\u0026lt;Units/\u0026gt;\u0026lt;Notes/\u0026gt;\u0026lt;ResultFlag\u0026gt;N\u0026lt;/ResultFlag\u0026gt;\u0026lt;Ranges\u0026gt;阴性（-）\u0026lt;/Ranges\u0026gt;\u0026lt;Sequence\u0026gt;310\u0026lt;/Sequence\u0026gt;\u0026lt;MICFlag\u0026gt;N\u0026lt;/MICFlag\u0026gt;\u0026lt;MICName/\u0026gt;\u0026lt;WarnDesc/\u0026gt;\u0026lt;OrgResultMsgs/\u0026gt;\u0026lt;/ResultMsg\u0026gt;\u0026lt;ResultMsg\u0026gt;\u0026lt;TestCode\u0026gt;4055\u0026lt;/TestCode\u0026gt;\u0026lt;TestName\u0026gt;单纯疱疹病毒抗体Ⅱ型M\u0026lt;/TestName\u0026gt;\u0026lt;TestEngName\u0026gt;HSV-ⅡlgM(ELISA)\u0026lt;/TestEngName\u0026gt;\u0026lt;Result\u0026gt;阴性(-)\u0026lt;/Result\u0026gt;\u0026lt;Units/\u0026gt;\u0026lt;Notes/\u0026gt;\u0026lt;ResultFlag\u0026gt;N\u0026lt;/ResultFlag\u0026gt;\u0026lt;Ranges\u0026gt;阴性（-）\u0026lt;/Ranges\u0026gt;\u0026lt;Sequence\u0026gt;320\u0026lt;/Sequence\u0026gt;\u0026lt;MICFlag\u0026gt;N\u0026lt;/MICFlag\u0026gt;\u0026lt;MICName/\u0026gt;\u0026lt;WarnDesc/\u0026gt;\u0026lt;OrgResultMsgs/\u0026gt;\u0026lt;/ResultMsg\u0026gt;\u0026lt;/ResultMsgs\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Response\u0026gt; /// w ##Class(LIS.WS.BLL.DHCENSLabInterface).GetReport(\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;ReportID\u0026gt;12\u0026lt;/ReportID\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34;).Read() ClassMethod GetReport(Input As %String(MAXLEN=32767)) As %GlobalCharacterStream { s Input=$g(Input) Set $ZTrap = \u0026#34;ErrorHandle\u0026#34; //s Input=\u0026#34;\u0026lt;Request\u0026gt;\u0026lt;Header\u0026gt;\u0026lt;SourceSystem\u0026gt;\u0026lt;/SourceSystem\u0026gt;\u0026lt;MessageID\u0026gt;\u0026lt;/MessageID\u0026gt;\u0026lt;/Header\u0026gt;\u0026lt;Body\u0026gt;\u0026lt;ReportID\u0026gt;19\u0026lt;/ReportID\u0026gt;\u0026lt;/Body\u0026gt;\u0026lt;/Request\u0026gt;\u0026#34; s xmlData= ##class(LIS.Util.COM.XML).FromXML(Input) s ReportID=xmlData.Body.ReportID i \u0026#39;$l(ReportID) Quit ##class(LIS.Service.ENS.CommonENS).MsgErr(\u0026#34;-1\u0026#34;,\u0026#34;入参报告ID不能为空\u0026#34;) s retValue=##Class(LIS.Service.ENS.TransReport).GetReport(ReportID,.Msg) q retValue ErrorHandle Quit ##class(LIS.Service.ENS.CommonENS).MsgErr(-1,$ZE) } } XML串信息 体检返回串 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 \u0026lt;Request\u0026gt; \u0026lt;Header\u0026gt; \u0026lt;SourceSystem\u0026gt;PEIS\u0026lt;/SourceSystem\u0026gt; \u0026lt;MessageID\u0026gt;20250104111146\u0026lt;/MessageID\u0026gt; \u0026lt;/Header\u0026gt; \u0026lt;Body\u0026gt; \u0026lt;PATPatientInfo\u0026gt; \u0026lt;HospitalCode\u0026gt;SMYQ\u0026lt;/HospitalCode\u0026gt; \u0026lt;HospitalDesc\u0026gt;厦门大学附属翔安医院思明院区\u0026lt;/HospitalDesc\u0026gt; \u0026lt;PATPatientID\u0026gt;0000177422\u0026lt;/PATPatientID\u0026gt; \u0026lt;PATName\u0026gt;熊永芳\u0026lt;/PATName\u0026gt; \u0026lt;PATDob\u0026gt;1962-02-24\u0026lt;/PATDob\u0026gt; \u0026lt;PATAge\u0026gt;62\u0026lt;/PATAge\u0026gt; \u0026lt;PATSexCode\u0026gt;1\u0026lt;/PATSexCode\u0026gt; \u0026lt;PATSexDesc\u0026gt;男\u0026lt;/PATSexDesc\u0026gt; \u0026lt;PATMaritalStatusCode\u0026gt;90\u0026lt;/PATMaritalStatusCode\u0026gt; \u0026lt;PATMaritalStatusDesc\u0026gt;未说明的婚姻状况\u0026lt;/PATMaritalStatusDesc\u0026gt; \u0026lt;PATDocumentNo/\u0026gt; \u0026lt;PATNationCode/\u0026gt; \u0026lt;PATNationDesc/\u0026gt; \u0026lt;PATCountryCode\u0026gt;156\u0026lt;/PATCountryCode\u0026gt; \u0026lt;PATCountryDesc\u0026gt;中国\u0026lt;/PATCountryDesc\u0026gt; \u0026lt;PATIdentityNum\u0026gt;352623196202246137\u0026lt;/PATIdentityNum\u0026gt; \u0026lt;PATIdTypeCode\u0026gt;01\u0026lt;/PATIdTypeCode\u0026gt; \u0026lt;PATIdTypeDesc\u0026gt;居民身份证\u0026lt;/PATIdTypeDesc\u0026gt; \u0026lt;PATTelephone\u0026gt;18359732216\u0026lt;/PATTelephone\u0026gt; \u0026lt;/PATPatientInfo\u0026gt; \u0026lt;PATAdmInfo\u0026gt; \u0026lt;PAADMVisitNumber\u0026gt;TJ11011800\u0026lt;/PAADMVisitNumber\u0026gt; \u0026lt;/PATAdmInfo\u0026gt; \u0026lt;SendPatOrdListRt\u0026gt; \u0026lt;OrderList\u0026gt; \u0026lt;Order\u0026gt; \u0026lt;OEORIOrderItemID\u0026gt;0087243\u0026lt;/OEORIOrderItemID\u0026gt; \u0026lt;RISRSystemType\u0026gt;HIS\u0026lt;/RISRSystemType\u0026gt; \u0026lt;OEORISpecimenID\u0026gt;6080005896\u0026lt;/OEORISpecimenID\u0026gt; \u0026lt;OEORIARCItmMastCode\u0026gt;SMA041\u0026lt;/OEORIARCItmMastCode\u0026gt; \u0026lt;OEORIARCItmMastDesc\u0026gt;有核红细胞计数\u0026lt;/OEORIARCItmMastDesc\u0026gt; \u0026lt;OEORIOrderQty\u0026gt;1\u0026lt;/OEORIOrderQty\u0026gt; \u0026lt;BillStatus\u0026gt;P\u0026lt;/BillStatus\u0026gt; \u0026lt;OEORISpecimenCode\u0026gt;3\u0026lt;/OEORISpecimenCode\u0026gt; \u0026lt;OEORISpecimenDesc\u0026gt;全血\u0026lt;/OEORISpecimenDesc\u0026gt; \u0026lt;ColDate\u0026gt;2025-01-03\u0026lt;/ColDate\u0026gt; \u0026lt;ColTime\u0026gt;09:27:36\u0026lt;/ColTime\u0026gt; \u0026lt;AppDeptCode\u0026gt;32300\u0026lt;/AppDeptCode\u0026gt; \u0026lt;AppDeptDesc\u0026gt;健康体检科\u0026lt;/AppDeptDesc\u0026gt; \u0026lt;RecDeptCode/\u0026gt; \u0026lt;RecDeptDesc\u0026gt;检验\u0026lt;/RecDeptDesc\u0026gt; \u0026lt;TSPrice\u0026gt;9.00\u0026lt;/TSPrice\u0026gt; \u0026lt;OrderStatus\u0026gt;E\u0026lt;/OrderStatus\u0026gt; \u0026lt;DocCode\u0026gt;cbl\u0026lt;/DocCode\u0026gt; \u0026lt;DocDesc\u0026gt;陈滨林\u0026lt;/DocDesc\u0026gt; \u0026lt;OrdSubCatCode\u0026gt;SMAA01\u0026lt;/OrdSubCatCode\u0026gt; \u0026lt;OrdSubCatDesc\u0026gt;临检XN-1000\u0026lt;/OrdSubCatDesc\u0026gt; \u0026lt;OrdCatCode\u0026gt;SMAA\u0026lt;/OrdCatCode\u0026gt; \u0026lt;OrdCatDesc\u0026gt;临检组\u0026lt;/OrdCatDesc\u0026gt; \u0026lt;/Order\u0026gt; \u0026lt;Order\u0026gt; \u0026lt;OEORIOrderItemID\u0026gt;0087244\u0026lt;/OEORIOrderItemID\u0026gt; \u0026lt;RISRSystemType\u0026gt;HIS\u0026lt;/RISRSystemType\u0026gt; \u0026lt;OEORISpecimenID\u0026gt;6080005896\u0026lt;/OEORISpecimenID\u0026gt; \u0026lt;OEORIARCItmMastCode\u0026gt;SMA001\u0026lt;/OEORIARCItmMastCode\u0026gt; \u0026lt;OEORIARCItmMastDesc\u0026gt;血细胞分析（全血细胞计数+五分类）\u0026lt;/OEORIARCItmMastDesc\u0026gt; \u0026lt;OEORIOrderQty\u0026gt;1\u0026lt;/OEORIOrderQty\u0026gt; \u0026lt;BillStatus\u0026gt;P\u0026lt;/BillStatus\u0026gt; \u0026lt;OEORISpecimenCode\u0026gt;3\u0026lt;/OEORISpecimenCode\u0026gt; \u0026lt;OEORISpecimenDesc\u0026gt;全血\u0026lt;/OEORISpecimenDesc\u0026gt; \u0026lt;ColDate\u0026gt;2025-01-03\u0026lt;/ColDate\u0026gt; \u0026lt;ColTime\u0026gt;09:27:36\u0026lt;/ColTime\u0026gt; \u0026lt;AppDeptCode\u0026gt;32300\u0026lt;/AppDeptCode\u0026gt; \u0026lt;AppDeptDesc\u0026gt;健康体检科\u0026lt;/AppDeptDesc\u0026gt; \u0026lt;RecDeptCode/\u0026gt; \u0026lt;RecDeptDesc\u0026gt;检验\u0026lt;/RecDeptDesc\u0026gt; \u0026lt;TSPrice\u0026gt;25.00\u0026lt;/TSPrice\u0026gt; \u0026lt;OrderStatus\u0026gt;E\u0026lt;/OrderStatus\u0026gt; \u0026lt;DocCode\u0026gt;cbl\u0026lt;/DocCode\u0026gt; \u0026lt;DocDesc\u0026gt;陈滨林\u0026lt;/DocDesc\u0026gt; \u0026lt;OrdSubCatCode\u0026gt;SMAA01\u0026lt;/OrdSubCatCode\u0026gt; \u0026lt;OrdSubCatDesc\u0026gt;临检XN-1000\u0026lt;/OrdSubCatDesc\u0026gt; \u0026lt;OrdCatCode\u0026gt;SMAA\u0026lt;/OrdCatCode\u0026gt; \u0026lt;OrdCatDesc\u0026gt;临检组\u0026lt;/OrdCatDesc\u0026gt; \u0026lt;/Order\u0026gt; \u0026lt;/OrderList\u0026gt; \u0026lt;/SendPatOrdListRt\u0026gt; \u0026lt;/Body\u0026gt; \u0026lt;/Request\u0026gt; 格式化后串 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 \u0026lt;Response\u0026gt; \u0026lt;Header\u0026gt; \u0026lt;ResultCode\u0026gt;0\u0026lt;/ResultCode\u0026gt; \u0026lt;ResultContent/\u0026gt; \u0026lt;/Header\u0026gt; \u0026lt;Body\u0026gt; \u0026lt;HospitalCode\u0026gt;SMYQ\u0026lt;/HospitalCode\u0026gt; \u0026lt;OrderList\u0026gt; \u0026lt;OderItem\u0026gt; \u0026lt;HISOrderID\u0026gt;0087243\u0026lt;/HISOrderID\u0026gt; \u0026lt;TestSetCode\u0026gt;SMA041\u0026lt;/TestSetCode\u0026gt; \u0026lt;OrdItmStat/\u0026gt; \u0026lt;Biled\u0026gt;0\u0026lt;/Biled\u0026gt; \u0026lt;TestSetFee\u0026gt;9.00\u0026lt;/TestSetFee\u0026gt; \u0026lt;/OderItem\u0026gt; \u0026lt;OderItem\u0026gt; \u0026lt;HISOrderID\u0026gt;0087244\u0026lt;/HISOrderID\u0026gt; \u0026lt;TestSetCode\u0026gt;SMA001\u0026lt;/TestSetCode\u0026gt; \u0026lt;OrdItmStat/\u0026gt; \u0026lt;Biled\u0026gt;0\u0026lt;/Biled\u0026gt; \u0026lt;TestSetFee\u0026gt;25.00\u0026lt;/TestSetFee\u0026gt; \u0026lt;/OderItem\u0026gt; \u0026lt;/OrderList\u0026gt; \u0026lt;VisitNumber\u0026gt;6080005896\u0026lt;/VisitNumber\u0026gt; \u0026lt;RegNo\u0026gt;0000177422\u0026lt;/RegNo\u0026gt; \u0026lt;AdmissionTypeCode\u0026gt;H\u0026lt;/AdmissionTypeCode\u0026gt; \u0026lt;AdmNo\u0026gt;TJ11011800\u0026lt;/AdmNo\u0026gt; \u0026lt;MedicalRecordNo/\u0026gt; \u0026lt;AdmDate/\u0026gt; \u0026lt;AdmTime/\u0026gt; \u0026lt;IDNumber\u0026gt;352623196202246137\u0026lt;/IDNumber\u0026gt; \u0026lt;SurName\u0026gt;熊永芳\u0026lt;/SurName\u0026gt; \u0026lt;GivenName\u0026gt;熊永芳\u0026lt;/GivenName\u0026gt; \u0026lt;SpeciesCode\u0026gt;M\u0026lt;/SpeciesCode\u0026gt; \u0026lt;SpeciesDesc\u0026gt;男\u0026lt;/SpeciesDesc\u0026gt; \u0026lt;BirthDate\u0026gt;1962-02-24\u0026lt;/BirthDate\u0026gt; \u0026lt;Age\u0026gt;62\u0026lt;/Age\u0026gt; \u0026lt;AgeUnitCode\u0026gt;62\u0026lt;/AgeUnitCode\u0026gt; \u0026lt;AgeUnitDesc\u0026gt;62\u0026lt;/AgeUnitDesc\u0026gt; \u0026lt;Symptom/\u0026gt; \u0026lt;MobileNo\u0026gt;18359732216\u0026lt;/MobileNo\u0026gt; \u0026lt;PhoneNo/\u0026gt; \u0026lt;EMail/\u0026gt; \u0026lt;Address/\u0026gt; \u0026lt;PostCode/\u0026gt; \u0026lt;LocationCode\u0026gt;32300\u0026lt;/LocationCode\u0026gt; \u0026lt;LocationDesc\u0026gt;健康体检科\u0026lt;/LocationDesc\u0026gt; \u0026lt;DoctorCode\u0026gt;cbl\u0026lt;/DoctorCode\u0026gt; \u0026lt;DoctorDesc\u0026gt;陈滨林\u0026lt;/DoctorDesc\u0026gt; \u0026lt;RequestDate/\u0026gt; \u0026lt;RequestTime/\u0026gt; \u0026lt;WardCode/\u0026gt; \u0026lt;WardDesc/\u0026gt; \u0026lt;BedNo/\u0026gt; \u0026lt;ReqNotes/\u0026gt; \u0026lt;CarryDate/\u0026gt; \u0026lt;CarryTime/\u0026gt; \u0026lt;CarryUserCode/\u0026gt; \u0026lt;CarryUserDesc/\u0026gt; \u0026lt;CarryDate/\u0026gt; \u0026lt;Urgent/\u0026gt; \u0026lt;CollectDate\u0026gt;2025-01-03\u0026lt;/CollectDate\u0026gt; \u0026lt;CollectTime\u0026gt;09:27:36\u0026lt;/CollectTime\u0026gt; \u0026lt;CollectUserCode/\u0026gt; \u0026lt;CollectUserDesc/\u0026gt; \u0026lt;SpecimenCode\u0026gt;3\u0026lt;/SpecimenCode\u0026gt; \u0026lt;SpecimenDesc\u0026gt;全血\u0026lt;/SpecimenDesc\u0026gt; \u0026lt;ContainerCode/\u0026gt; \u0026lt;ContainerDesc/\u0026gt; \u0026lt;CollectNotes/\u0026gt; \u0026lt;H24UVolume/\u0026gt; \u0026lt;H24UTimePeriod/\u0026gt; \u0026lt;BodyTemp/\u0026gt; \u0026lt;Confidential/\u0026gt; \u0026lt;/Body\u0026gt; \u0026lt;/Response\u0026gt; ‍\n","date":"2025-01-12T00:00:00Z","image":"https://work.717170.xyz/p/%E4%BD%93%E6%A3%80%E6%A0%87%E6%9C%AC%E6%8E%A5%E6%94%B620250112235959/assets/image-20250104110221-lxg7dmt_hu_6e1a4a86fa109d06.png","permalink":"https://work.717170.xyz/p/%E4%BD%93%E6%A3%80%E6%A0%87%E6%9C%AC%E6%8E%A5%E6%94%B620250112235959/","title":"体检标本接收"},{"content":"页面初始化时进行加入快捷键监听\n在中间加入调用方法\n​​\n1 2 3 4 5 6 7 8 9 10 11 $(document).keydown(function (event) { if (event.keyCode == 114) { //F3 保存结果 if ($(\u0026#39;#btn_ReportSave\u0026#39;).hasClass(\u0026#39;l-btn-disabled\u0026#39;)) { event.keyCode = 0; return false; } Save() event.keyCode = 0; return false }; }); ​​\n‍\n","date":"2025-01-12T00:00:00Z","image":"https://work.717170.xyz/p/%E9%A1%B5%E9%9D%A2%E5%88%9B%E5%BB%BA%E5%BF%AB%E6%8D%B7%E9%94%AE20250112235959/assets/image-20250107112932-mmxvcaz_hu_cacfe9af41a7b6f1.png","permalink":"https://work.717170.xyz/p/%E9%A1%B5%E9%9D%A2%E5%88%9B%E5%BB%BA%E5%BF%AB%E6%8D%B7%E9%94%AE20250112235959/","title":"页面创建快捷键"},{"content":"上机请求双向 HL7 协议接口双向 回传多行 DSP 回传信息时要求有 DSP 字段，且 DSP 字段前 28 行为患者信息，第 29 行之后为检测项目信息。\n示例接口(亚辉龙名称: MI.MIFI3000 /// 描述: 深圳亚辉龙iFlash3000 双向仪器接口 MIFI3000(mi) S mi=$G(mi) Q:\u0026#39;$L(mi) s par11=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s par10=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s par4=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 S mi1=mi S stx=$C(2),etx=$C(3),ack=$C(6),enq=$C(5),eot=$C(4),etb=$C(23) S sb=$C(11),eb=$C(28),cr=$C(13) S lf=$C(10),nak=$C(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType)=\u0026#34;\u0026#34; Q:$$StartUTF8^MI.MIF000(mi) F { D Main Q:$$Stop^MI.MIF000(mi) } C par4 Q Main S $ZT=\u0026#34;ErrHandler\u0026#34;,$EC=\u0026#34;\u0026#34; R *R:10 Q:\u0026#39;$TEST //如果超时则退出 Q:$c(R)\u0026#39;=sb //以sb开头 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType,msgType,barcode,mshStr)=\u0026#34;\u0026#34; S startTime=$P($H,\u0026#34;,\u0026#34;,2) K PLIST S index=1 F { S curTime=$P($H,\u0026#34;,\u0026#34;,2) Q:curTime\u0026gt;(startTime+300) //5分钟内没有处理完则退出循环 Q:$$Stop^MI.MIF000(mi) R *R:10 Q:\u0026#39;$TEST //如果超时则退出 I $L($G(PLIST(index)))\u0026gt;=32700 { //32767 S index=+$O(PLIST(\u0026#34;\u0026#34;),-1)+1 S PLIST(index)=\u0026#34;\u0026#34; } I $C(R)\u0026#39;=eb,$C(R)\u0026#39;=cr { S PLIST(index)=$G(PLIST(index))_$C(R) } I $C(R)=cr { //解析一条记录 D Record K PLIST S index=1 } Q:$C(R)=eb //循环读取,当为eb的时候则退出 } D Save Q Record K ^TMPMACHINEEPIS(mi) S index=\u0026#34;\u0026#34; S segmentType=\u0026#34;\u0026#34;,dataTye=\u0026#34;\u0026#34;,graphType=\u0026#34;\u0026#34; S isImage=0,isBinary=0 F { S index=$O(PLIST(index)) Q:\u0026#39;$L(index) S record=$TR($G(PLIST(index)),cr) Continue:\u0026#39;$L(record) D Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) I index=1 { S segmentType=$P(record,\u0026#34;|\u0026#34;,1) ;消息段(数据类型) MSH\tMSA PID OBR OBX ORD QRF ERR QAK DSP DSC I segmentType=\u0026#34;MSH\u0026#34; { //信息头信息 S mshStr=record //消息类型 S msgType=$P($P(record,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,1) //ORU,ACK,QRY,QCK,DSR I msgType=\u0026#34;ORU\u0026#34; { D SendACK(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;) } I msgType=\u0026#34;ORM\u0026#34; { } I msgType=\u0026#34;QRY\u0026#34; { D SendQryACK(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;) } S resultType=$P(record,\u0026#34;|\u0026#34;,11) } I segmentType=\u0026#34;PID\u0026#34; { //患者信息 } I segmentType=\u0026#34;PVI\u0026#34; { //就诊信息 } I segmentType=\u0026#34;OBR\u0026#34; { //医嘱信息 S epis=$P(record,\u0026#34;|\u0026#34;,3) S:\u0026#39;$l(epis) epis=$P(record,\u0026#34;|\u0026#34;,4) S dateStr=$P(record,\u0026#34;|\u0026#34;,8) I dateStr?14N { S date=$ZDH($E(dateStr,1,4)_\u0026#34;-\u0026#34;_$E(dateStr,5,6)_\u0026#34;-\u0026#34;_$E(dateStr,7,8),3) S time=$ZTH($E(dateStr,9,10)_\u0026#34;:\u0026#34;_$E(dateStr,11,12)_\u0026#34;:\u0026#34;_$E(dateStr,13,14),1) } S code=$P($P(record,\u0026#34;|\u0026#34;,5),\u0026#34;^\u0026#34;,1) } I segmentType=\u0026#34;OBX\u0026#34; { S dataTye=$P(record,\u0026#34;|\u0026#34;,3) //NM (numeric) 表示数字值，用于定量项目, //ST (string) 表示字符串值，用于定性项目 S channel=$P(record,\u0026#34;|\u0026#34;,4) S channel=$P(channel,\u0026#34;^\u0026#34;,1) S value=$P(record,\u0026#34;|\u0026#34;,6) I $L(channel),dataTye\u0026#39;=\u0026#34;ED\u0026#34;,dataTye\u0026#39;=\u0026#34;IS\u0026#34; { S result=result_channel_par10_value_par11 } } //根据条码号获取LIS标本 I segmentType=\u0026#34;QRD\u0026#34; { S barcode=$P(record,\u0026#34;|\u0026#34;,9) //QRD|20161208150935|R|D|1|||RD|16120703726|OTH|||T| I $L(barcode) { S ^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode,\u0026#34;MSH\u0026#34;)=mshStr S ^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode,\u0026#34;QRD\u0026#34;)=record } } //根据查询条件获取LIS标本 I segmentType=\u0026#34;QRF\u0026#34; { S tRecord=record S record=$TR(record,\u0026#34; \u0026#34;) S qryStartDate=$P(record,\u0026#34;|\u0026#34;,3) S qryEndDate=$P(record,\u0026#34;|\u0026#34;,4) S sampleIdStart=$P(record,\u0026#34;|\u0026#34;,5) S sampleIdEnd=$P(record,\u0026#34;|\u0026#34;,6) S:\u0026#39;$L(qryStartDate) qryStartDate=qryEndDate S:\u0026#39;$L(qryEndDate) qryEndDate=qryStartDate S:\u0026#39;$L(sampleIdStart) sampleIdStart=sampleIdEnd S:\u0026#39;$L(sampleIdEnd) sampleIdEnd=sampleIdStart //通过样本号段查询 QRF|iFlash3000|||1|9|RCT|COR|ALL|| I sampleIdStart?1.N,sampleIdEnd?1.N { F sampleId=sampleIdStart:1:sampleIdEnd { S ^TMPMACHINEEPIS(mi,\u0026#34;S\u0026#34;,sampleId,\u0026#34;MSH\u0026#34;)=mshStr S ^TMPMACHINEEPIS(mi,\u0026#34;S\u0026#34;,sampleId,\u0026#34;QRF\u0026#34;)=tRecord } } //通过时间段查询\tQRF|iFlash3000|20160122080000|20160122120000|||RCT|COR|ALL|| I qryStartDate?1.N,qryEndDate?1.N { F qryDate=qryStartDate:1:qryEndDate { S ^TMPMACHINEEPIS(mi,\u0026#34;D\u0026#34;,qryDate,\u0026#34;MSH\u0026#34;)=mshStr S ^TMPMACHINEEPIS(mi,\u0026#34;D\u0026#34;,qryDate,\u0026#34;QRF\u0026#34;)=tRecord } } } } } //根本样本号获取条码号 S sampleId=\u0026#34;\u0026#34; F { S sampleId=$O(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,sampleId)) Q:\u0026#39;$L(sampleId) //暂不处理 } //根本日期获取条码号 S qryDate=\u0026#34;\u0026#34; F { S qryDate=$O(^TMPMACHINEEPIS(mi,\u0026#34;D\u0026#34;,qryDate)) Q:\u0026#39;$L(qryDate) //暂不处理 } //上传标本 S barcode=\u0026#34;\u0026#34;,barcodeIndex=0 F { S barcode=$O(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode)) Q:\u0026#39;$L(barcode) S mshStr=$G(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode)) S barcodeIndex=barcodeIndex+1 I $O(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode))=\u0026#34;\u0026#34; { S barcodeIndex=\u0026#34;\u0026#34; //最后一个为空 } S mshStr=$G(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode,\u0026#34;MSH\u0026#34;)) S qrdStr=$G(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode,\u0026#34;QRD\u0026#34;)) S qrfStr=$G(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode,\u0026#34;QRF\u0026#34;)) I \u0026#39;$L(qrdStr) { S qrdStr=\u0026#34;QRD|\u0026#34;_$TR($ZDT($H,8),\u0026#34; :\u0026#34;)_\u0026#34;|R|D|1|||RD||OTH|||T|\u0026#34; } I \u0026#39;$L(qrfStr) { S qrfStr=\u0026#34;QRF|iFlash3000|||||RCT|COR|ALL||\u0026#34; } S $P(qrdStr,\u0026#34;|\u0026#34;,9)=\u0026#34;\u0026#34; S ret=$$SendOrder(mi,mshStr,qrdStr,qrfStr,barcode,barcodeIndex) } K ^TMPMACHINEEPIS(mi) Q Save D Trace^MI.MIF000(mi,epis_\u0026#34;^\u0026#34;_result,\u0026#34;Test\u0026#34;) I $l(epis),$l(result) { S QC=\u0026#34;\u0026#34; ;S result=$$TransResult(mi,result) D Save^MI.MIF000(mi,epis,result,date,time,QC) } S (sample,epis,surname,rec,res,result,date,time,QC,resultType)=\u0026#34;\u0026#34; Q SendACK(mi,mshStr,ackType=\u0026#34;AA\u0026#34;,errCode=0,errDesc=\u0026#34;Message accepted\u0026#34;) //send \u0026#39;ack\u0026#39; to instrument N (mi,mshStr,ackType,errCode,errDesc) S mi=$g(mi),mshStr=$g(mshStr),ackType=$g(ackType),errCode=$g(errCode),errDesc=$g(errDesc) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) //Q:$l(mshStr,\u0026#34;|\u0026#34;)\u0026lt;21 ret S ret=0 S msgRoutine=$P($P(mshStr,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,2) S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;ACK^\u0026#34;_msgRoutine W sb,mshStr,cr,\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_\u0026#34;|\u0026#34;_errDesc_\u0026#34;|||\u0026#34;_errCode_\u0026#34;|\u0026#34;,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,$S(ackType=\u0026#34;AA\u0026#34;:\u0026#34;ACK\u0026#34;,ackType=\u0026#34;AE\u0026#34;:\u0026#34;Error\u0026#34;,ackType=\u0026#34;AR\u0026#34;:\u0026#34;NAK\u0026#34;,1:\u0026#34;NULL\u0026#34;),\u0026#34;H--\u0026gt;M\u0026#34;) Q ret SendQryACK(mi,mshStr,ackType=\u0026#34;AA\u0026#34;,errCode=0,errDesc=\u0026#34;Message accepted\u0026#34;) //send \u0026#39;ack\u0026#39; to instrument N (mi,mshStr,ackType,errCode,errDesc) S mi=$g(mi),mshStr=$g(mshStr),ackType=$g(ackType),errCode=$g(errCode),errDesc=$g(errDesc) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) S ret=0 S msgRoutine=$P($P(mshStr,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,2) S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;QCK^\u0026#34;_msgRoutine W sb,mshStr,cr,\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_\u0026#34;|\u0026#34;_errDesc_\u0026#34;|||\u0026#34;_errCode_\u0026#34;|\u0026#34;,cr,\u0026#34;ERR|0|\u0026#34;,cr,\u0026#34;QAK|SR|OK|\u0026#34;,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,$S(ackType=\u0026#34;AA\u0026#34;:\u0026#34;QACK\u0026#34;,ackType=\u0026#34;AE\u0026#34;:\u0026#34;Error\u0026#34;,ackType=\u0026#34;AR\u0026#34;:\u0026#34;QNAK\u0026#34;,1:\u0026#34;NULL\u0026#34;),\u0026#34;H--\u0026gt;M\u0026#34;) Q ret ErrHandler h 10 D Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) Q //双向上传医嘱信息,wwh,2015-11-05 SendOrder(mi,mshStr,qrdStr,qrfStr,barcode,DSC) N (mi,mshStr,qrdStr,qrfStr,barcode,DSC) S mi=$G(mi),mshStr=$G(mshStr),barcode=$G(barcode),DSC=$G(DSC),qrdStr=$G(qrdStr),qrfStr=$G(qrfStr) S sb=$C(11),eb=$C(28),cr=$C(13) I \u0026#39;$L(barcode) { D Trace^MI.MIF000(mi,\u0026#34;条码号为空\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } I $ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) { //条码扫描错误 D Trace^MI.MIF000(mi,\u0026#34;条码扫描错误,机器未识别\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } S labno=barcode S workGroupMachineDR=$LG($G(^dbo.BTMIMachineParameterD(mi)),6) S visiNumberDR=$O(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) I \u0026#39;$L(visiNumberDR) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } S visNumberObj=##Class(dbo.RPVisitNumber).%OpenId(visiNumberDR) I \u0026#39;$L(visNumberObj) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } D Trace^MI.MIF000(mi,labno,\u0026#34;Upload Start\u0026#34;) K ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno) D ScanOne^MI.MIF000(mi,labno) S result=\u0026#34;\u0026#34; S chlStr=\u0026#34;\u0026#34; S chl=\u0026#34;\u0026#34;,chlCnt=29 F { S chl=$O(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) Q:\u0026#39;$L(chl) S chlStr=chlStr_\u0026#34;DSP|\u0026#34;_chlCnt_\u0026#34;||\u0026#34;_chl_\u0026#34;^^^|||\u0026#34;_cr S chlCnt=chlCnt+1 ;S result=result_chl_$C(92)_\u0026#34;?\u0026#34;_$C(44) } I \u0026#39;$L(chlStr) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的化验项目信息,确定医嘱或项目维护正确?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } D Save^MI.MIF000(mi,labno,result,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) S specimenDR=$LG($G(^dbo.RPVisitNumberD(visiNumberDR)),56) S specimenName=\u0026#34;\u0026#34; S:$L(specimenDR) specimenName=$LG($G(^dbo.BTSpecimenD(specimenDR)),3) S sampleType=\u0026#34;其他\u0026#34; I $L(specimenName),\u0026#34;,血清,血浆,尿液,脑脊液,\u0026#34;[(\u0026#34;,\u0026#34;_specimenName_\u0026#34;,\u0026#34;) { S sampleType=specimenName } S birdthday=visNumberObj.BirthDate S:$L(birdthday)=8 birdthday=birdthday_\u0026#34;000000\u0026#34; S:\u0026#39;$L(mshStr) mshStr=\u0026#34;MSH|^~\\\u0026amp;|YHLO|iFlash3000|||20161208150935||QRY^Q02|18|P|2.3.1||||||ASCII|||\u0026#34; S mshSeq=$P(mshStr,\u0026#34;|\u0026#34;,10) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;DSR^Q03\u0026#34; S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S episode=\u0026#34;\u0026#34; S workGroupMachineDR=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) //##Class(MI.Instrument).GetWorkGroupMachineRowId(mi) I $L(workGroupMachineDR) { S OrderNo=$O(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,visiNumberDR,workGroupMachineDR,\u0026#34;\u0026#34;)) I $L(OrderNo) { S reportDR=$O(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,visiNumberDR,workGroupMachineDR,OrderNo,\u0026#34;\u0026#34;)) S episode=\u0026#34;\u0026#34; //##Class(LIS.Core.Report).GetEpisodeNumber(reportDR) i $l(reportDR) s Assayno=$lg($g(^dbo.RPVisitNumberReportD(reportDR)),6) } } S order=mshStr_cr //\u0026#34;MSH|^~\\\u0026amp;|||||20160122110540||DSR^Q03|14|P|2.3.1||||||ASCII|||\u0026#34;_cr S order=order_\u0026#34;MSA|AA|\u0026#34;_mshSeq_\u0026#34;|Message accepted|||0|\u0026#34;_cr S order=order_\u0026#34;ERR|0|\u0026#34;_cr S order=order_\u0026#34;QAK|SR|OK|\u0026#34;_cr S order=order_qrdStr_cr //\u0026#34;QRD|20160122110540|R|D|1|||RD||OTH|||T|\u0026#34;_cr S order=order_qrfStr_cr //\u0026#34;QRF|iFlash3000|||||RCT|COR|ALL||\u0026#34;_cr S order=order_\u0026#34;DSP|1||\u0026#34;_visNumberObj.RegNo_\u0026#34;|||\u0026#34;_cr\t//住院号 S order=order_\u0026#34;DSP|2||\u0026#34;_visNumberObj.BedNo_\u0026#34;|||\u0026#34;_cr\t//床号 S order=order_\u0026#34;DSP|3||\u0026#34;_visNumberObj.SurName_\u0026#34;|||\u0026#34;_cr\t//病人姓名 /* S order=order_\u0026#34;DSP|1||\u0026#34;_visNumberObj.RegNo_\u0026#34;|||\u0026#34;_cr\t//住院号 S order=order_\u0026#34;DSP|2||\u0026#34;_episode_\u0026#34;|||\u0026#34;_cr\t//床号 //S order=order_\u0026#34;DSP|3||\u0026#34;_visNumberObj.SurName_\u0026#34;|||\u0026#34;_cr\t//病人姓名 S order=order_\u0026#34;DSP|3||\u0026#34;_episode_\u0026#34;|||\u0026#34;_cr\t//病人姓名 */ S order=order_\u0026#34;DSP|4||\u0026#34;_birdthday_\u0026#34;|||\u0026#34;_cr\t//出生日期 S order=order_\u0026#34;DSP|5||\u0026#34;_$S(visNumberObj.SpeciesDR=1:\u0026#34;M\u0026#34;,visNumberObj.SpeciesDR=2:\u0026#34;F\u0026#34;,1:\u0026#34;O\u0026#34;)_\u0026#34;|||\u0026#34;_cr\t//性别 S order=order_\u0026#34;DSP|6|||||\u0026#34;_cr\t//血型 S order=order_\u0026#34;DSP|7|||||\u0026#34;_cr\t//种族 S order=order_\u0026#34;DSP|8|||||\u0026#34;_cr\t//地址 S order=order_\u0026#34;DSP|9|||||\u0026#34;_cr\t//邮编 S order=order_\u0026#34;DSP|10|||||\u0026#34;_cr\t//家庭电话 S order=order_\u0026#34;DSP|11|||||\u0026#34;_cr\t//样本位 S order=order_\u0026#34;DSP|12|||||\u0026#34;_cr\t//样本采集时间 S order=order_\u0026#34;DSP|13|||||\u0026#34;_cr\t//未用 S order=order_\u0026#34;DSP|14|||||\u0026#34;_cr\t//未用 S order=order_\u0026#34;DSP|15|||||\u0026#34;_cr\t//病人类别 S order=order_\u0026#34;DSP|16|||||\u0026#34;_cr\t//医保帐号 S order=order_\u0026#34;DSP|17|||||\u0026#34;_cr\t//收费类型 S order=order_\u0026#34;DSP|18|||||\u0026#34;_cr\t//民族 S order=order_\u0026#34;DSP|19|||||\u0026#34;_cr\t//籍贯 S order=order_\u0026#34;DSP|20|||||\u0026#34;_cr\t//国家 S order=order_\u0026#34;DSP|21||\u0026#34;_barcode_\u0026#34;|||\u0026#34;_cr\t//*样本条码 S order=order_\u0026#34;DSP|22||\u0026#34;_barcode_\u0026#34;|||\u0026#34;_cr\t//*样本编号 S order=order_\u0026#34;DSP|23|||||\u0026#34;_cr\t//送检时间 S order=order_\u0026#34;DSP|24||\u0026#34;_$S(visNumberObj.Urgent=1:\u0026#34;Y\u0026#34;,1:\u0026#34;N\u0026#34;)_\u0026#34;|||\u0026#34;_cr\t//*是否急诊 S order=order_\u0026#34;DSP|25|||||\u0026#34;_cr\t//未用 S order=order_\u0026#34;DSP|26||\u0026#34;_sampleType_\u0026#34;|||\u0026#34;_cr\t//*样本类型(血清,血浆,尿液,脑脊液,其他) S order=order_\u0026#34;DSP|27|||||\u0026#34;_cr\t//送检医生 S order=order_\u0026#34;DSP|28|||||\u0026#34;_cr\t//送检科室 S order=order_chlStr S order=order_\u0026#34;DSC|\u0026#34;_DSC_\u0026#34;|\u0026#34;_cr W sb,order,eb,cr,*-3 D Trace^MI.MIF000(mi,sb_order_eb_cr,\u0026#34;H--\u0026gt;M\u0026#34;) //$TR($ZDT($H,8),\u0026#34; :\u0026#34;) Q 0 //d Test^MI.MIFIFLASH3000N(\u0026#34;22\u0026#34;,9000000266) Test(mi,barcode) N (mi,barcode) S mi=$G(mi),barcode=$G(barcode) S mshStr=\u0026#34;MSH|^~\\\u0026amp;|YHLO|iFlash3000|||20160122110540||QRY^Q02|14|P|2.3.1||||||ASCII|||\u0026#34; S DSC=\u0026#34;\u0026#34; S qrdStr=\u0026#34;QRD|20160122110540|R|D|1|||RD|BarCode1|OTH|||T|\u0026#34; S qrfStr=\u0026#34;QRF|iFlash3000|||||RCT|COR|ALL||\u0026#34; S sb=\u0026#34;\u0026lt;SB\u0026gt;\u0026#34;,eb=\u0026#34;\u0026lt;EB\u0026gt;\u0026#34;,cr=\u0026#34;\u0026lt;CR\u0026gt;\u0026#34; I \u0026#39;$L(barcode) { W \u0026#34;条码号为空\u0026#34;,! Q 1 } I $ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) { //条码扫描错误 W \u0026#34;条码扫描错误,机器未识别\u0026#34;,! Q 1 } S labno=barcode S workGroupMachineDR=$LG($G(^dbo.BTMIMachineParameterD(mi)),6) S visiNumberDR=$O(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) I \u0026#39;$L(visiNumberDR) { W \u0026#34;条码未接收\u0026#34;,! Q 1 } I \u0026#39;$L(visiNumberDR) { W \u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,! Q 1 } S visNumberObj=##Class(dbo.RPVisitNumber).%OpenId(visiNumberDR) I \u0026#39;$L(visNumberObj) { W \u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,! Q 1 } K ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno) D ScanOne^MI.MIF000(mi,labno) S chlStr=\u0026#34;\u0026#34; b ;a102 S chl=\u0026#34;\u0026#34;,chlCnt=29 F { S chl=$O(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) Q:\u0026#39;$L(chl) S chlStr=chlStr_\u0026#34;DSP|\u0026#34;_chlCnt_\u0026#34;||\u0026#34;_chl_\u0026#34;^^^|||\u0026#34;_cr S chlCnt=chlCnt+1 } I \u0026#39;$L(chlStr) { W \u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的化验项目信息,确定医嘱或项目维护正确?\u0026#34;,! Q 1 } S specimenDR=$LG($G(^dbo.RPVisitNumberD(visiNumberDR)),56) S specimenName=\u0026#34;\u0026#34; S:$L(specimenDR) specimenName=$LG($G(^dbo.BTSpecimenD(specimenDR)),3) S sampleType=\u0026#34;其他\u0026#34; I $L(specimenName),\u0026#34;,血清,血浆,尿液,脑脊液,\u0026#34;[(\u0026#34;,\u0026#34;_specimenName_\u0026#34;,\u0026#34;) { S sampleType=specimenName } S birdthday=visNumberObj.BirthDate S:$L(birdthday)=8 birdthday=birdthday_\u0026#34;000000\u0026#34; S mshSeq=$P(mshStr,\u0026#34;|\u0026#34;,10) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;DSR^Q03\u0026#34; S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S order=mshStr_cr //\u0026#34;MSH|^~\\\u0026amp;|||||20160122110540||DSR^Q03|14|P|2.3.1||||||ASCII|||\u0026#34;_cr S order=order_\u0026#34;MSA|AA|\u0026#34;_mshSeq_\u0026#34;|Message accepted|||0|\u0026#34;_cr S order=order_\u0026#34;ERR|0|\u0026#34;_cr S order=order_\u0026#34;QAK|SR|OK|\u0026#34;_cr S order=order_qrdStr_cr //\u0026#34;QRD|20160122110540|R|D|1|||RD||OTH|||T|\u0026#34;_cr S order=order_qrfStr_cr //\u0026#34;QRF|iFlash3000|||||RCT|COR|ALL||\u0026#34;_cr S order=order_\u0026#34;DSP|1||\u0026#34;_visNumberObj.RegNo_\u0026#34;|||\u0026#34;_cr\t//住院号 S order=order_\u0026#34;DSP|2||\u0026#34;_visNumberObj.BedNo_\u0026#34;|||\u0026#34;_cr\t//床号 S order=order_\u0026#34;DSP|3||\u0026#34;_visNumberObj.SurName_\u0026#34;|||\u0026#34;_cr\t//病人姓名 b ;a101 S order=order_\u0026#34;DSP|4||\u0026#34;_birdthday_\u0026#34;|||\u0026#34;_cr\t//出生日期 S order=order_\u0026#34;DSP|5||\u0026#34;_$S(visNumberObj.SpeciesDR=1:\u0026#34;M\u0026#34;,visNumberObj.SpeciesDR=2:\u0026#34;F\u0026#34;,1:\u0026#34;O\u0026#34;)_\u0026#34;|||\u0026#34;_cr\t//性别 S order=order_\u0026#34;DSP|6|||||\u0026#34;_cr\t//血型 S order=order_\u0026#34;DSP|7|||||\u0026#34;_cr\t//种族 S order=order_\u0026#34;DSP|8|||||\u0026#34;_cr\t//地址 S order=order_\u0026#34;DSP|9|||||\u0026#34;_cr\t//邮编 S order=order_\u0026#34;DSP|10|||||\u0026#34;_cr\t//家庭电话 S order=order_\u0026#34;DSP|11|||||\u0026#34;_cr\t//样本位 S order=order_\u0026#34;DSP|12|||||\u0026#34;_cr\t//样本采集时间 S order=order_\u0026#34;DSP|13|||||\u0026#34;_cr\t//未用 S order=order_\u0026#34;DSP|14|||||\u0026#34;_cr\t//未用 S order=order_\u0026#34;DSP|15|||||\u0026#34;_cr\t//病人类别 S order=order_\u0026#34;DSP|16|||||\u0026#34;_cr\t//医保帐号 S order=order_\u0026#34;DSP|17|||||\u0026#34;_cr\t//收费类型 S order=order_\u0026#34;DSP|18|||||\u0026#34;_cr\t//民族 S order=order_\u0026#34;DSP|19|||||\u0026#34;_cr\t//籍贯 S order=order_\u0026#34;DSP|20|||||\u0026#34;_cr\t//国家 S order=order_\u0026#34;DSP|21||\u0026#34;_barcode_\u0026#34;|||\u0026#34;_cr\t//*样本条码 S order=order_\u0026#34;DSP|22||\u0026#34;_barcode_\u0026#34;|||\u0026#34;_cr\t//*样本编号 S order=order_\u0026#34;DSP|23|||||\u0026#34;_cr\t//送检时间 S order=order_\u0026#34;DSP|24||\u0026#34;_$S(visNumberObj.Urgent=1:\u0026#34;Y\u0026#34;,1:\u0026#34;N\u0026#34;)_\u0026#34;|||\u0026#34;_cr\t//*是否急诊 S order=order_\u0026#34;DSP|25|||||\u0026#34;_cr\t//未用 S order=order_\u0026#34;DSP|26||\u0026#34;_sampleType_\u0026#34;|||\u0026#34;_cr\t//*样本类型(血清,血浆,尿液,脑脊液,其他) S order=order_\u0026#34;DSP|27|||||\u0026#34;_cr\t//送检医生 S order=order_\u0026#34;DSP|28|||||\u0026#34;_cr\t//送检科室 S order=order_chlStr S order=order_\u0026#34;DSC|\u0026#34;_DSC_\u0026#34;|\u0026#34;_cr W sb,order,eb,cr,! Q 0 TransResult(miRowId,result) N (miRowId,result) S miRowId=$G(miRowId),result=$G(result),newRes=\u0026#34;\u0026#34; F i=1:1:$L(result,\u0026#34;,\u0026#34;) { S chlStr=$P(result,\u0026#34;,\u0026#34;,i) Continue:\u0026#39;$L(chlStr) S chl=$P(chlStr,\u0026#34;\\\u0026#34;,1) S val=$P(chlStr,\u0026#34;\\\u0026#34;,2) Continue:\u0026#39;$L(chl) S res=val I chl\u0026gt;97,chl\u0026lt;102,val\u0026#39;[\u0026#34;?\u0026#34; { S res=$$GetQuaResult(miRowId,chl,val) } S newRes=newRes_chl_$C(92)_res_$C(44) } Q:$L(newRes) newRes Q result GetQuaResult(miRowId,chl,res) N (miRowId,chl,res) S miRowId=$G(miRowId),chl=$G(chl),res=$G(res) S:res?1\u0026#34;.\u0026#34;1.N res=\u0026#34;0\u0026#34;_res S orgRes=res S resPrefix=$E(res,1) S:\u0026#34;\u0026lt;\u0026gt;\u0026#34;\u0026#39;[resPrefix resPrefix=\u0026#34;\u0026#34; I $L(resPrefix) { S res=$P(res,resPrefix,2) } Q:\u0026#39;$L(chl) orgRes Q:(res\u0026#39;?0.N1.\u0026#34;.\u0026#34;1.N)\u0026amp;\u0026amp;(res\u0026#39;?1.N) orgRes S tcRefRowId=$O(^dbo.BTMIMachineTestCodeI(\u0026#34;IndexResultChannel\u0026#34;,miRowId,##Class(LIS.Util.Common).IndexData(chl),\u0026#34;\u0026#34;)) Q:\u0026#39;$L(tcRefRowId) orgRes S tcRowId=$LG($G(^dbo.BTMIMachineTestCodeD(tcRefRowId)),3) Q:\u0026#39;$L(tcRowId) orgRes S orderNo=$O(^dbo.BTTestCodeRangesI(\u0026#34;IndexMaster\u0026#34;,tcRowId,\u0026#34;\u0026#34;)) Q:\u0026#39;$L(orderNo) orgRes S rangeDR=$O(^dbo.BTTestCodeRangesI(\u0026#34;IndexMaster\u0026#34;,tcRowId,orderNo,\u0026#34;\u0026#34;)) Q:\u0026#39;$L(rangeDR) orgRes S rangeObj=##Class(dbo.BTTestCodeRanges).%OpenId(rangeDR) Q:\u0026#39;$L(rangeObj) orgRes I res\u0026gt;=rangeObj.ValueHigh { I resPrefix=\u0026#34;\u0026lt;\u0026#34; { Q orgRes } Q \u0026#34;阳性(\u0026#34;_orgRes_\u0026#34;)\u0026#34; } ELSE { I resPrefix=\u0026#34;\u0026gt;\u0026#34; { Q orgRes } } Q \u0026#34;阴性(\u0026#34;_orgRes_\u0026#34;)\u0026#34; ​​\n回传三行 DSP 双向要求回传三行 DSP 信息，DSP1 为患者信息，DSP2 为标本信息，DSP3 为检测项目信息。\n示例接口(美康生化mi) ///仪器名称:\t血细胞分析流水线 ///仪器型号:\t迈瑞HL7 ///仪器厂商:\t迈瑞 ///通信协议:\tHL7 ///交互方式:\t双 向 ///接 口:\tTCP/IP,RS232 ///备 注:\t仪器配置:选择HL7协议,散点图选择:位图 S mi=$G(mi) Q:\u0026#39;$L(mi) s par11=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s par10=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s par4=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 S stx=$C(2),etx=$C(3),ack=$C(6),enq=$C(5),eot=$C(4),etb=$C(23) S sb=$C(11),eb=$C(28),cr=$C(13) S lf=$C(10),nak=$C(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType)=\u0026#34;\u0026#34; S $ZT=\u0026#34;ErrHandler\u0026#34;,$EC=\u0026#34;\u0026#34; Q:$$Start^MI.MIF000(mi) s IP=$li(^dbo.BTMIMachineParameterD(mi),9) s Port=$li(^dbo.BTMIMachineParameterD(mi),10) s LinkTime=0 s Device=\u0026#34;|TCP|\u0026#34;_Port F { try{ ;d Trace^MI.MIF000(mi,$ZA,\u0026#34;ZA\u0026#34;) //未启动客户端/服务端0，客户端断开连接标志20484，无客户端连接20480，有客户端连接28674，连接并建立数据传输28672 //lis断开 i $ZA=\u0026#34;0\u0026#34; { h 2 open Device:(IP:Port:/IOTABLE=\u0026#34;GB18030\u0026#34;):20 use Device d Trace^MI.MIF000(mi,\u0026#34;lis断开连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;lisReConnect\u0026#34;) //throw ##class(%Exception.General).%New(\u0026#34;ConnectError\u0026#34;,\u0026#34;D\u0026#34;,,\u0026#34;重新连接失败\u0026#34;) } //仪器断开，或者无数据1min，重启tcp i (($ZA=\u0026#34;20484\u0026#34;)) { close par4 d Trace^MI.MIF000(mi,\u0026#34;仪器断开连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;blockConnect\u0026#34;) h 2 open Device:(IP:Port:/IOTABLE=\u0026#34;GB18030\u0026#34;):20 use Device d Trace^MI.MIF000(mi,\u0026#34;重新连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;reConnect\u0026#34;) s LinkTime=0 continue } //连接无数据传输，main每执行6次，即1min，重启tcp i $ZA=\u0026#34;28674\u0026#34; s LinkTime=$i(LinkTime) //正常传输了，就清空计数 i $ZA=\u0026#34;28672\u0026#34; s LinkTime=0 d Main }catch ex{ s exception=\u0026#34;错误:\u0026#34;_ex.Location_\u0026#34;^\u0026#34;_ex.Data_ex.Name d Trace^MI.MIF000(mi,exception,\u0026#34;读取或写入异常，重启服务端\u0026#34;) } Q:$$Stop^MI.MIF000(mi) } C par4 Q Main R *R:10 Q:\u0026#39;$TEST\t//如果超时则退出 Q:$c(R)\u0026#39;=sb //以sb开头 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType,msgType,barcode,mshStr)=\u0026#34;\u0026#34; S startTime=$P($H,\u0026#34;,\u0026#34;,2) K PLIST S index=1 F { S curTime=$P($H,\u0026#34;,\u0026#34;,2) Q:curTime\u0026gt;(startTime+300) //5分钟内没有处理完则退出循环 Q:$$Stop^MI.MIF000(mi) R *R:10 Q:\u0026#39;$TEST\t//如果超时则退出 I $L($G(PLIST(index)))\u0026gt;=32700 { //32767 S index=+$O(PLIST(\u0026#34;\u0026#34;),-1)+1 S PLIST(index)=\u0026#34;\u0026#34; } I $C(R)\u0026#39;=eb,$C(R)\u0026#39;=cr { S PLIST(index)=$G(PLIST(index))_$C(R) } I $C(R)=cr { //解析一条记录 D Record K PLIST S index=1 } Q:$C(R)=eb //循环读取,当为eb的时候则退出 } D Trace^MI.MIF000(mi,result,\u0026#34;result\u0026#34;) D Save Q Record S index=\u0026#34;\u0026#34; S segmentType=\u0026#34;\u0026#34;,dataTye=\u0026#34;\u0026#34;,graphType=\u0026#34;\u0026#34;,base64Stream=\u0026#34;\u0026#34; S isImage=0,isBinary=0 s OldgraphDataDIFF=\u0026#34;\u0026#34; s OldgraphDataBaso=\u0026#34;\u0026#34; F { S index=$O(PLIST(index)) Q:\u0026#39;$L(index) S record=$TR($G(PLIST(index)),cr) Continue:\u0026#39;$L(record) D Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) I index=1 { S segmentType=$P(record,\u0026#34;|\u0026#34;,1) I segmentType=\u0026#34;MSH\u0026#34; {\t//信息头信息 S mshStr=record //消息类型 S msgType=$P($P(record,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,1) //ORU,ACK,QRY,QCK,DSR I msgType=\u0026#34;ORU\u0026#34; { D SendACK(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;) } I msgType=\u0026#34;ORM\u0026#34; { } S resultType=$P(record,\u0026#34;|\u0026#34;,11) } I segmentType=\u0026#34;PID\u0026#34; {\t//患者信息 } I segmentType=\u0026#34;PVI\u0026#34; {\t//就诊信息 } I segmentType=\u0026#34;OBR\u0026#34; {\t//医嘱信息 S epis=$P(record,\u0026#34;|\u0026#34;,2) S:\u0026#39;$l(epis) epis=$P(record,\u0026#34;|\u0026#34;,3) S code=$P($P(record,\u0026#34;|\u0026#34;,5),\u0026#34;^\u0026#34;,1) I code=\u0026#34;00003\u0026#34; {\t//LJ QCR } } I segmentType=\u0026#34;OBX\u0026#34; { S dataTye=$P(record,\u0026#34;|\u0026#34;,3) //NM (numeric) 表示数字值，用于定量项目, //ST (string) 表示字符串值，用于定性项目 S channel=$P(record,\u0026#34;|\u0026#34;,4) S channel=$P(channel,\u0026#34;^\u0026#34;,1) //s:\u0026#39;$l(channel) channel=$P(record,\u0026#34;|\u0026#34;,5) S value=$P(record,\u0026#34;|\u0026#34;,5) i value[\u0026#34;\u0026lt;\u0026#34; s value=$tr(value,\u0026#34;\u0026lt;\u0026#34;) i value[\u0026#34;\u0026gt;\u0026#34; s value=$tr(value,\u0026#34;\u0026gt;\u0026#34;) I channel=\u0026#34;SI\u0026#34; {\t//value=浊度(L)^溶血(H)^黄疸(I) S:$l($P(value,\u0026#34;^\u0026#34;,2)) result=result_channel_\u0026#34;H\u0026#34;_par10_$P(value,\u0026#34;^\u0026#34;,2)_par11 S:$l($P(value,\u0026#34;^\u0026#34;,3)) result=result_channel_\u0026#34;I\u0026#34;_par10_$P(value,\u0026#34;^\u0026#34;,3)_par11 S value=$P(value,\u0026#34;^\u0026#34;,1) } I dataTye=\u0026#34;ST\u0026#34; { S value=$S(value=\u0026#34;ò?D?\u0026#34;:\u0026#34;阴性\u0026#34;,value=\u0026#34;??D?\u0026#34;:\u0026#34;阳性\u0026#34;,1:value) } I $L(channel),dataTye\u0026#39;=\u0026#34;ED\u0026#34;,dataTye\u0026#39;=\u0026#34;IS\u0026#34; { S result=result_channel_par10_value_par11 } I dataTye=\u0026#34;IS\u0026#34; {\tI channel=\u0026#34;05001\u0026#34;,resultType=\u0026#34;Q\u0026#34; {\t//质控浓度 S epis=value } } S graphTypeDesc=$ZCVT($P($P(record,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,2),\u0026#34;U\u0026#34;) I dataTye=\u0026#34;ED\u0026#34; {\t//图形数据 I $ZCVT($P(value,\u0026#34;^\u0026#34;,2),\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Image\u0026#34;,\u0026#34;U\u0026#34;) { S isImage=1 //位图数据 } I $ZCVT($P(value,\u0026#34;^\u0026#34;,3),\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Octer-stream\u0026#34;,\u0026#34;U\u0026#34;) { S isBinary=1\t//二进制数据(需要绘图) } S graphType=channel I channel=\u0026#34;15050\u0026#34; {\t//二进制数据 S graphType=\u0026#34;RBC\u0026#34; } I channel=\u0026#34;15056\u0026#34; {\t//位图数据 S graphType=\u0026#34;RBC\u0026#34; } I channel=\u0026#34;15100\u0026#34; {\t//二进制数据 S graphType=\u0026#34;PLT\u0026#34; } I channel=\u0026#34;15116\u0026#34; {\t//位图数据 S graphType=\u0026#34;PLT\u0026#34; } I channel=\u0026#34;15200\u0026#34; {\t//位图数据 S graphType=\u0026#34;WBC-DIFFBMP\u0026#34; } I channel=\u0026#34;15201\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;WBC-DIFF\u0026#34; } I channel=\u0026#34;15202\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;WBC-DIFF\u0026#34; } I channel=\u0026#34;15250\u0026#34; {\t//位图数据 S graphType=\u0026#34;BASOBMP\u0026#34; } I channel=\u0026#34;15251\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;BASO\u0026#34; } I channel=\u0026#34;15300\u0026#34; {\t//位图数据 S graphType=\u0026#34;RET\u0026#34; } I channel=\u0026#34;15306\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;RET\u0026#34; } I channel=\u0026#34;15301\u0026#34; {\t//位图数据 S graphType=\u0026#34;PLT-0\u0026#34; } I channel=\u0026#34;15302\u0026#34; {\t//位图数据 S graphType=\u0026#34;RET-EXT\u0026#34; } I channel=\u0026#34;15350\u0026#34; {\t//位图数据 S graphType=\u0026#34;NRBC\u0026#34; } I channel=\u0026#34;15354\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;NRBC\u0026#34; } S graphData=$P(value,\u0026#34;^\u0026#34;,5) S graphDataType=$P(value,\u0026#34;^\u0026#34;,4) I $ZCVT(graphDataType,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Base64\u0026#34;,\u0026#34;U\u0026#34;) { D Trace^MI.MIF000(mi,graphData,graphType) i graphType[\u0026#34;RBC\u0026#34; d .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;RBC\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#RBC#RBC######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RBC#RBC######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!\u0026#34;_$lb(epis,mi),\u0026#34;绘图：RBC\u0026#34;) i graphType[\u0026#34;PLT\u0026#34; d .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;PLT\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#PLT#PLT######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#PLT#RBC######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!\u0026#34;_$lb(epis,mi),\u0026#34;绘图：PLT\u0026#34;) i graphType[\u0026#34;WBC\u0026#34; d .//s OldgraphDataDIFF=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;WBC-DIFF\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#DIFF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#DIFF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!\u0026#34;_$lb(epis,mi),\u0026#34;绘图：wbc\u0026#34;) i graphType[\u0026#34;WNB\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#WNB#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#Baso#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) } } } I segmentType=\u0026#34;ORC\u0026#34; {\t//就诊信息 S barcode=$P(record,\u0026#34;|\u0026#34;,4) //S:$ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) barcode=\u0026#34;\u0026#34; //条码扫描错误 //I $L(barcode) { //双向 //} Invalid 条码扫描错误 d SendORR(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;,mshStr,barcode) } I segmentType=\u0026#34;QRD\u0026#34; {\t//就诊信息 S barcode=$P(record,\u0026#34;|\u0026#34;,9) s qrdStr=record //S:$ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) barcode=\u0026#34;\u0026#34; //条码扫描错误 //I $L(barcode) { //双向 //} Invalid 条码扫描错误 //mi,mshStr,qrdStr,qrfStr,barcode } I segmentType=\u0026#34;QRF\u0026#34; {\t//就诊信息 ;S barcode=$P(record,\u0026#34;|\u0026#34;,9) s qrfStr=record //S:$ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) barcode=\u0026#34;\u0026#34; //条码扫描错误 //I $L(barcode) { //双向 //} Invalid 条码扫描错误 //mi,mshStr,qrdStr,qrfStr,barcode d SendDSP(mi,mshStr,qrdStr,qrfStr,barcode) } } //I dataTye=\u0026#34;ED\u0026#34;,index\u0026gt;1,$L(base64Stream) { //D base64Stream.Write($P(record,\u0026#34;|\u0026#34;,1)) //i graphType=\u0026#34;WBC-DIFFBMP\u0026#34; d //.s ^LISDrawImageTask($h,mi,epis_\u0026#34;WBC-DIFF\u0026#34;)=$lb(epis,OldgraphDataDIFF,mi,\u0026#34;MI.MIFBC6800BI\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#DIFF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) //i graphType=\u0026#34;BASOBMP\u0026#34; d //.s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,OldgraphDataBaso,mi,\u0026#34;MI.MIFBC6800BI\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#Baso#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) //s miCode=$lg(^dbo.BTMIMachineParameterD(mi),2) //i graphType=\u0026#34;WBC-DIFF\u0026#34; d //.D Trace^MI.MIF000(mi,miCode_\u0026#34;:\u0026#34;_epis_\u0026#34;:\u0026#34;_graphType,\u0026#34;SaveImage\u0026#34;) //.s ret=##Class(MI.Common.MIFBase).SaveBase64ToMachine(mi,epis,graphType,base64Stream,epis_\u0026#34;-\u0026#34;_graphType,miCode) //} } Q /// D SendDSP^MI.MIFMEIKANG(63,\u0026#34;MSH|^~\\\u0026amp;|HOST|Unkown□Device|FMIS||20240410153949||QRY^Q02|2|P|2.3.1||||0||ANSI||\u0026#34;,\u0026#34;QRD|20240410153949|BC|D|0|||RD|1000860681||Rack^Pos|N|T\u0026#34;,\u0026#34;QRF|Unkown□Device|20240410000000|20240410235959|||RCT|COR|ALL|\u0026#34;,\u0026#34;1000860681\u0026#34;) SendDSP(mi,mshStr,qrdStr,qrfStr,barcode) N (mi,mshStr,qrdStr,qrfStr,barcode) S mi=$G(mi),mshStr=$G(mshStr),barcode=$G(barcode),qrdStr=$G(qrdStr),qrfStr=$G(qrfStr) D Trace^MI.MIF000(mi,\u0026#34;开始上传\u0026#34;,\u0026#34;Upload\u0026#34;) D Trace^MI.MIF000(mi,mshStr,\u0026#34;Upload\u0026#34;) D Trace^MI.MIF000(mi,qrdStr,\u0026#34;Upload\u0026#34;) D Trace^MI.MIF000(mi,qrfStr,\u0026#34;Upload\u0026#34;) b ;a102 S sb=$C(11),eb=$C(28),cr=$C(13) I \u0026#39;$L(barcode) { D Trace^MI.MIF000(mi,\u0026#34;条码号为空\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } I $ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) { //条码扫描错误 D Trace^MI.MIF000(mi,\u0026#34;条码扫描错误,机器未识别\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } S labno=barcode S workGroupMachineDR=$LG($G(^dbo.BTMIMachineParameterD(mi)),6) S visiNumberDR=$O(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) I \u0026#39;$L(visiNumberDR) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } S visNumberObj=##Class(dbo.RPVisitNumber).%OpenId(visiNumberDR) I \u0026#39;$L(visNumberObj) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } D Trace^MI.MIF000(mi,labno,\u0026#34;Upload Start\u0026#34;) K ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno) D ScanOne^MI.MIF000(mi,labno) S result=\u0026#34;\u0026#34; S chlStr=\u0026#34;\u0026#34; S chl=\u0026#34;\u0026#34;,chlCnt=0 F { S chl=$O(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) Q:\u0026#39;$L(chl) S chlStr=chlStr_chl_\u0026#34;^\u0026#34; S chlCnt=chlCnt+1 ;S result=result_chl_$C(92)_\u0026#34;?\u0026#34;_$C(44) } I \u0026#39;$L(chlStr) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的化验项目信息,确定医嘱或项目维护正确?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } i $l(chlStr){ s chlStr=$e(chlStr,1,*-1) } /* F { S chl=$O(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) Q:\u0026#39;$L(chl) S chlStr=chlStr_\u0026#34;DSP|\u0026#34;_chlCnt_\u0026#34;||\u0026#34;_chl_\u0026#34;^^^|||\u0026#34;_cr S chlCnt=chlCnt+1 ;S result=result_chl_$C(92)_\u0026#34;?\u0026#34;_$C(44) } I \u0026#39;$L(chlStr) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的化验项目信息,确定医嘱或项目维护正确?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } */ D Save^MI.MIF000(mi,labno,result,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) S specimenDR=$LG($G(^dbo.RPVisitNumberD(visiNumberDR)),56) S specimenName=\u0026#34;\u0026#34; S:$L(specimenDR) specimenName=$LG($G(^dbo.BTSpecimenD(specimenDR)),3) S sampleType=\u0026#34;其他\u0026#34; I $L(specimenName),\u0026#34;,血清,血浆,尿液,脑脊液,\u0026#34;[(\u0026#34;,\u0026#34;_specimenName_\u0026#34;,\u0026#34;) { S sampleType=specimenName } S birdthday=visNumberObj.BirthDate S:$L(birdthday)=8 birdthday=birdthday_\u0026#34;000000\u0026#34; S:\u0026#39;$L(mshStr) mshStr=\u0026#34;MSH|^~\\\u0026amp;|YHLO|iFlash3000|||20161208150935||QRY^Q02|18|P|2.3.1||||||ASCII|||\u0026#34; S mshSeq=$P(mshStr,\u0026#34;|\u0026#34;,10) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;DSR^Q03\u0026#34; S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S episode=\u0026#34;\u0026#34; S workGroupMachineDR=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) //##Class(MI.Instrument).GetWorkGroupMachineRowId(mi) I $L(workGroupMachineDR) { S OrderNo=$O(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,visiNumberDR,workGroupMachineDR,\u0026#34;\u0026#34;)) I $L(OrderNo) { S reportDR=$O(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,visiNumberDR,workGroupMachineDR,OrderNo,\u0026#34;\u0026#34;)) S episode=\u0026#34;\u0026#34; //##Class(LIS.Core.Report).GetEpisodeNumber(reportDR) i $l(reportDR) s Assayno=$lg($g(^dbo.RPVisitNumberReportD(reportDR)),6) } } s Date=$h s datetime=$tr($zd($p(Date,\u0026#34;,\u0026#34;,1),3),\u0026#34;-\u0026#34;,\u0026#34;\u0026#34;)_\u0026#34;\u0026#34;_$tr($zt($p(Date,\u0026#34;,\u0026#34;,2),1),\u0026#34;:\u0026#34;,\u0026#34;\u0026#34;)\t//时间 s JZHWZ=$p(qrdStr,\u0026#34;|\u0026#34;,11)\t//架子号位置 S order=mshStr_cr //\u0026#34;MSH|^~\\\u0026amp;|||||20160122110540||DSR^Q03|14|P|2.3.1||||||ASCII|||\u0026#34;_cr S order=order_\u0026#34;MSA|OK|\u0026#34;_mshSeq_\u0026#34;||||0\u0026#34;_cr S order=order_\u0026#34;DSP|1||\u0026#34;_visNumberObj.RegNo_\u0026#34;|\u0026#34;_episode_\u0026#34;|\u0026#34;_visNumberObj.SurName_\u0026#34;|||||||||||||||||||||||||\u0026#34;_cr\tS order=order_\u0026#34;DSP|2|\u0026#34;_barcode_\u0026#34;|\u0026#34;_barcode_\u0026#34;||N||\u0026#34;_datetime_\u0026#34;||1|\u0026#34;_JZHWZ_\u0026#34;||N||\u0026#34;_datetime_\u0026#34;||||||||\u0026#34;_datetime_\u0026#34;||||||||||||||||||||||||\u0026#34;_cr\ts order=order_\u0026#34;DSP|3|\u0026#34;_chlCnt_\u0026#34;|\u0026#34;_chlStr_cr W sb,order,eb,cr,*-3 b ;a101 D Trace^MI.MIF000(mi,sb_order_eb_cr,\u0026#34;H--\u0026gt;M\u0026#34;) //$TR($ZDT($H,8),\u0026#34; :\u0026#34;) Q 0 Save D Trace^MI.MIF000(mi,epis_\u0026#34;^\u0026#34;_result,\u0026#34;Test\u0026#34;) I $l(epis),$l(result) { S QC=\u0026#34;\u0026#34; D Save^MI.MIF000(mi,epis,result,date,time,QC) } S (sample,epis,surname,rec,res,result,date,time,QC,resultType)=\u0026#34;\u0026#34; Q SendACK(mi,mshStr,ackType=\u0026#34;AA\u0026#34;,errCode=0,errDesc=\u0026#34;Message accepted\u0026#34;) //send \u0026#39;ack\u0026#39; to instrument N (mi,mshStr,ackType,errCode,errDesc) S mi=$g(mi),mshStr=$g(mshStr),ackType=$g(ackType),errCode=$g(errCode),errDesc=$g(errDesc) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) //Q:$l(mshStr,\u0026#34;|\u0026#34;)\u0026lt;21 ret S ret=0 S msgRoutine=$P($P(mshStr,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,2) S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;ACK^\u0026#34;_msgRoutine W sb,mshStr,cr,\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_\u0026#34;|\u0026#34;_errDesc_\u0026#34;|||\u0026#34;_errCode_\u0026#34;|\u0026#34;,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,$S(ackType=\u0026#34;AA\u0026#34;:\u0026#34;ACK\u0026#34;,ackType=\u0026#34;AE\u0026#34;:\u0026#34;Error\u0026#34;,ackType=\u0026#34;AR\u0026#34;:\u0026#34;NAK\u0026#34;,1:\u0026#34;NULL\u0026#34;),\u0026#34;H--\u0026gt;M\u0026#34;) Q ret ErrHandler D Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) h 3 Q //保存直方图 SaveHistogram(mi,epis,graphType,graphOrder,base64Stream) N (mi,epis,graphType,graphOrder,base64Stream) S mi=$G(mi),epis=$G(epis),graphType=$G(graphType),graphOrder=$G(graphOrder),base64Stream=$G(base64Stream) Q:\u0026#39;$L(mi) 1 Q:\u0026#39;$L(epis) 1 Q:\u0026#39;$L(base64Stream) 1 Q:\u0026#39;$L(graphType) 1 S:\u0026#39;$L(graphOrder) graphOrder=0 S glBinaryStream=##Class(%GlobalBinaryStream).%New() While \u0026#39;base64Stream.AtEnd { S base64=base64Stream.Read() S binary=$system.Encryption.Base64Decode(base64) D glBinaryStream.Write(binary) } S charStream=##Class(%GlobalCharacterStream).%New() S maxDot=0 While \u0026#39;glBinaryStream.AtEnd { S char=glBinaryStream.Read(1) S ascValue=$ASCII(char)_\u0026#34;,\u0026#34; S maxDot=maxDot+1 D charStream.Write(ascValue) } D charStream.Write(\u0026#34;0\u0026#34;) K glBinaryStream S title=graphType S foreColor=12 S:graphType=\u0026#34;PLT\u0026#34; foreColor=10 S top=10 S left=10 S width=300 S height=150 S (label,maxValue,memo)=\u0026#34;\u0026#34; S error=##Class(MI.Instrument).SaveHistogram(charStream,mi,epis,graphType,graphOrder,label,title,maxDot,maxValue,memo,foreColor,top,left,width,height) I $L(error) { D Trace^MI.MIF000(mi,$TR(error,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;),\u0026#34;Graph Error\u0026#34;) } K charStream Q 0 SendORR(mi,record, AckType=\u0026#34;AA\u0026#34;,ErrCode=0,ErrDesc=\u0026#34;Message accepted\u0026#34;,mshStr,epis) N (mi,record,AckType,ErrCode,ErrDesc,mshStr,epis) s mi=$g(mi),record=$g(record),AckType=$g(AckType),ErrCode=$g(ErrCode),ErrDesc=$g(ErrDesc),mshStr=$g(mshStr),epis=$g(epis) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) S ret=0 S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS||||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,7,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;ORR^O02\u0026#34; s isRecieve=\u0026#34;\u0026#34; s wgDR=\u0026#34;\u0026#34; s wgDR=$lg(^dbo.BTMIMachineParameterD(mi),6) //\u0026amp;sql(SELECT EpisodeNo into :isRecieve FROM dbo.RP_VisitNumberReport where AssayNo=:epis and WorkGroupMachineDR=:wgDR) s isRecieve=epis //##class(HIS.DHCReportPrint).GetReportAssayNoMTHD(mi,epis) s flag=\u0026#34;AA\u0026#34; s MSACode=seq D Trace^MI.MIF000(mi,isRecieve,\u0026#34;isRecieve is \u0026#34;) i ($l(isRecieve)\u0026lt;1) { s flag=\u0026#34;AR\u0026#34; } i $ZCVT(epis,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;){ s flag=\u0026#34;AR\u0026#34; } s MSA=\u0026#34;MSA|\u0026#34;_flag_\u0026#34;|\u0026#34;_MSACode i flag=\u0026#34;AR\u0026#34;{ S TMPCORDE=sb_mshStr_cr_MSA_cr_eb_cr W sb,mshStr,cr,MSA,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,TMPCORDE,\u0026#34;H-\u0026gt;M\u0026#34;) }else{ s PatInfomation=\u0026#34;\u0026#34; s PatInfomation=$$GetPatInfo(epis,mi) D Trace^MI.MIF000(mi,PatInfomation,\u0026#34;PatInfomation is\u0026#34;) s (RegNo,Name,Birth,Species,PatType,LOC,BedNo,Fee,Srcdocno,PatAge)=\u0026#34;\u0026#34; if $l(PatInfomation){ s RegNo=$p(PatInfomation,\u0026#34;,\u0026#34;,9) s Name=$p(PatInfomation,\u0026#34;,\u0026#34;,10) s Birth=$p(PatInfomation,\u0026#34;,\u0026#34;,29) s Species=$p(PatInfomation,\u0026#34;,\u0026#34;,11) i Species=\u0026#34;1\u0026#34; s Species=\u0026#34;Male\u0026#34; i Species=\u0026#34;2\u0026#34; s Species=\u0026#34;Fmale\u0026#34; s PatType=$p(PatInfomation,\u0026#34;,\u0026#34;,12) s LOC=$p(PatInfomation,\u0026#34;,\u0026#34;,6) s BedNo=$p(PatInfomation,\u0026#34;,\u0026#34;,13) s Fee=$p(PatInfomation,\u0026#34;,\u0026#34;,5) s Srcdocno=$p(PatInfomation,\u0026#34;,\u0026#34;,7) s PatAge=$p(PatInfomation,\u0026#34;,\u0026#34;,14) } s PID=\u0026#34;PID|1||\u0026#34;_RegNo_\u0026#34;^^^^MR||\u0026#34;_Name_\u0026#34;||\u0026#34;_Birth_\u0026#34;|\u0026#34;_Species s PV1=\u0026#34;PV1|1|\u0026#34;_PatType_\u0026#34;|\u0026#34;_LOC_\u0026#34;^^\u0026#34;_BedNo_\u0026#34;|||||||||||||||||\u0026#34;_Fee s ORC=\u0026#34;ORC|AF||\u0026#34;_epis s curTime=$zd($h,8)_$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;,\u0026#34;\u0026#34;) s randomNumber=1000+$r(1000) s OBR=\u0026#34;OBR|1|\u0026#34;_epis_\u0026#34;||00001^Automated Count^99MRC||\u0026#34;_curTime_randomNumber_\u0026#34;||||\u0026#34;_Srcdocno_\u0026#34;||||||||||||||HM||||||||Bill\u0026#34; s TestCodeDate=\u0026#34;\u0026#34; s TestCodeDate=$$SearchTestItem(mi,epis) s OBX=\u0026#34;OBX|1|IS|08003^Test Mode^99MRC||\u0026#34;_TestCodeDate_\u0026#34;||||||F\u0026#34;_cr_ \u0026#34;OBX|2|IS|01002^Ref Group^99MRC||Child||||||F\u0026#34;_cr_ \u0026#34;OBX|3|NM|30525-0^Age^LN||\u0026#34;_PatAge_\u0026#34;|yr|||||F\u0026#34;_cr_ \u0026#34;OBX|4|ST|01001^Remark^99MRC||\u0026#34;_PatType_\u0026#34;||||||F\u0026#34;_cr_ \u0026#34;OBX|5|ST|08005^SerialNumber^99MRC||\u0026#34;_isRecieve_\u0026#34;||||||F\u0026#34;_cr_ \u0026#34;OBX|6|IS|01007^Sample Type^99MRC||Venous blood||||||\u0026#34;_cr_ \u0026#34;OBX|7|IS|01008^Patient Area^99MRC||A - 501||||||F\u0026#34;_cr_ \u0026#34;OBX|8|ST|01009^Custom patient info 1^99MRC||Nothing||||||F\u0026#34;_cr_ \u0026#34;OBX|9|ST|01010^Custom patient info 2^99MRC||Nothing||||||F\u0026#34;_cr_ \u0026#34;OBX|10|ST|01011^Custom patient info 3^99MRC||Nothing||||||F\u0026#34; S TMPORDER=sb_mshStr_cr_MSA_cr_PID_cr_PV1_cr_ORC_cr_OBR_cr_OBX_cr_eb_cr w sb,mshStr,cr,MSA,cr,PID,cr,PV1,cr,ORC,cr,OBR,cr,OBX,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,TMPORDER,\u0026#34;H-\u0026gt;M\u0026#34;) } Q ret SearchTestItem(mi,epis) S tcx=\u0026#34;\u0026#34;,tc=\u0026#34;\u0026#34; d ScanOne^MI.MIF000(mi,epis) i $d(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis)){ f { s tc=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis,tc)) q:tc=\u0026#34;\u0026#34; i \u0026#39;$l(tcx){ s tcx=tc }else{ s tcx=tcx_\u0026#34;+\u0026#34;_tc } } } Q tcx GetPatInfo(labno,mi) s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,\u0026#34; \u0026#34;_labno,\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$lg(RPVisitNumberData,3) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),2) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s BirthDate=$lg(RPVisitNumberData,16) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$lg(RPVisitNumberData,28) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; s Patna=PatName ;病人姓名 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s EpisodeNo=\u0026#34;\u0026#34; s Diagnose=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode_\u0026#34;,\u0026#34;_BirthDate_\u0026#34;,\u0026#34;_EpisodeNo q RetString //双向上传医嘱信息,wwh,2015-11-05,未测试 SendOrder(mi,mshStr,record) N (mi,mshStr,record) S mi=$G(mi),mshStr=$G(mshStr),record=$G(record) Q:\u0026#39;$L(mi) 1 Q:\u0026#39;$D(^TMIF(mi)) 1 S barcode=$P(record,\u0026#34;|\u0026#34;,4) I \u0026#39;$L(barcode) { D Trace^MI.MIF000(mi,\u0026#34;条码号为空\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } I $ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) {\t//条码扫描错误 D Trace^MI.MIF000(mi,\u0026#34;条码扫描错误,机器未识别\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } I \u0026#39;$D(^TEPI(barcode)) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_barcode_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } K uploadList S tsCode=\u0026#34;\u0026#34;,uploadList=0 F { S tsCode=$O(^TEPI(barcode,1,tsCode)) Q:\u0026#39;$L(tsCode) Q:\u0026#39;$D(^TMIF(mi,0,tsCode)) S tsDesc=$P($G(^TTAB(\u0026#34;TS\u0026#34;,tsCode)),\u0026#34;\\\u0026#34;,1) S tsCnt=$O(^TEPI(barcode,1,tsCode,\u0026#34;\u0026#34;)) Q:\u0026#39;$L(tsCnt) S status=$P($G(^TEPI(barcode,1,tsCode,tsCnt)),\u0026#34;\\\u0026#34;,31) I status=\u0026#34;A\u0026#34; { D Trace^MI.MIF000(mi,\u0026#34;条码扫:\u0026#34;_barcode_\u0026#34;,医嘱:\u0026#34;_tsCode_\u0026#34;||\u0026#34;_tsDesc_\u0026#34;,不是登记状态,不再上传\u0026#34;,\u0026#34;Order\u0026#34;)\tContinue } S channel=$$GetTestSetChannel(tsCode) I \u0026#39;$L(channel) { D Trace^MI.MIF000(mi,\u0026#34;条码扫:\u0026#34;_barcode_\u0026#34;,医嘱:\u0026#34;_tsCode_\u0026#34;||\u0026#34;_tsDesc_\u0026#34;,未找到通道号\u0026#34;,\u0026#34;Order\u0026#34;)\tContinue } Continue:$D(uploadList(tsCode)) S uploadList(tsCode)=channel S uploadList=$I(uploadList) } I +$G(uploadList)\u0026lt;1 { D Trace^MI.MIF000(mi,\u0026#34;条码扫:\u0026#34;_barcode_\u0026#34;未找可上传的医嘱\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } //1,仪器发送过来的请求信息: //MSH|^~\\\u0026amp;||Mindray|||20081120174836||ORM^O01|4|P|2.3.1||||||UNICODE //ORC|RF||SampleID1||IP S order=\u0026#34;\u0026#34; S msh=\u0026#34;MSH|^~\\\u0026amp;|LIS||||\u0026#34;_$TR($ZDT($H,8),\u0026#34; :\u0026#34;)_\u0026#34;||ORR^O02|1|P|2.3.1||||||UNICODE\u0026#34; //huifu: //MSH|^~\\\u0026amp;|LIS||||20081120174836||ORR^O02|1|P|2.3.1||||||UNICODE //MSA|AA|4 //PID|1||ChartNo^^^^MR||^FName||19810506|NT //PV1|1|E|内科^^Bn4|||||||||||||||||NewCharge //ORC|AF|SampleID1||| //OBR|1|SampleID1||||20060506||||tester|||Diagnose content...|20060504||||||||20080821||HM||||审核者||||检验者 //OBX|1|IS|08001^Take Mode^99MRC||A||||||F //OBX|2|IS|08002^Blood Mode^99MRC||W||||||F //OBX|3|IS|08003^Test Mode^99MRC||CBC||||||F //OBX|4|IS|01002^Ref Group^99MRC||XXXX||||||F //OBX|5|NM|30525-0^Age^LN||1|hr|||||F //OBX|6|ST|01001^Remark^99MRC||remark content...||||||F ///未找到检测时: //MSH|^~\\\u0026amp;|LIS||||20081120174836||ORR^O02|1|P|2.3.1||||||UNICODE //MSA|AR|9 Q 0 GetTestSetChannel(tsCode) N (tsCode) S tsCode=$G(tsCode) Q \u0026#34;\u0026#34; ​​\n回传多行 OBX 示例接口(迈瑞 BC7500) 将患者信息和项目信息存入 OBX 回传仪器\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 MIFCL600OI(mi) ///仪器名称:\t血细胞分析流水线 ///仪器型号:\t迈瑞HL7 ///仪器厂商:\t迈瑞 ///通信协议:\tHL7 ///交互方式:\t双 向 ///接 口:\tTCP/IP,RS232 ///备 注:\t仪器配置:选择HL7协议,散点图选择:位图 S mi=$G(mi) Q:\u0026#39;$L(mi) s par11=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s par10=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s par4=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 S stx=$C(2),etx=$C(3),ack=$C(6),enq=$C(5),eot=$C(4),etb=$C(23) S sb=$C(11),eb=$C(28),cr=$C(13) S lf=$C(10),nak=$C(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType)=\u0026#34;\u0026#34; S $ZT=\u0026#34;ErrHandler\u0026#34;,$EC=\u0026#34;\u0026#34; Q:$$StartUTF8^MI.MIF000(mi) s IP=$li(^dbo.BTMIMachineParameterD(mi),9) s Port=$li(^dbo.BTMIMachineParameterD(mi),10) s LinkTime=0 s Device=\u0026#34;|TCP|\u0026#34;_Port F { try{ ;d Trace^MI.MIF000(mi,$ZA,\u0026#34;ZA\u0026#34;) //未启动客户端/服务端0，客户端断开连接标志20484，无客户端连接20480，有客户端连接28674，连接并建立数据传输28672 //lis断开 i $ZA=\u0026#34;0\u0026#34; { h 2 open Device:(IP:Port:/IOTABLE=\u0026#34;GB18030\u0026#34;):20 use Device d Trace^MI.MIF000(mi,\u0026#34;lis断开连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;lisReConnect\u0026#34;) //throw ##class(%Exception.General).%New(\u0026#34;ConnectError\u0026#34;,\u0026#34;D\u0026#34;,,\u0026#34;重新连接失败\u0026#34;) } //仪器断开，或者无数据1min，重启tcp i (($ZA=\u0026#34;20484\u0026#34;)) { close par4 ;d Trace^MI.MIF000(mi,\u0026#34;仪器断开连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;blockConnect\u0026#34;) h 2 open Device:(IP:Port:/IOTABLE=\u0026#34;GB18030\u0026#34;):20 use Device ;d Trace^MI.MIF000(mi,\u0026#34;重新连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;reConnect\u0026#34;) s LinkTime=0 continue } //连接无数据传输，main每执行6次，即1min，重启tcp i $ZA=\u0026#34;28674\u0026#34; s LinkTime=$i(LinkTime) //正常传输了，就清空计数 i $ZA=\u0026#34;28672\u0026#34; s LinkTime=0 d Main }catch ex{ s exception=\u0026#34;错误:\u0026#34;_ex.Location_\u0026#34;^\u0026#34;_ex.Data_ex.Name d Trace^MI.MIF000(mi,exception,\u0026#34;读取或写入异常，重启服务端\u0026#34;) } Q:$$Stop^MI.MIF000(mi) } C par4 Q Main R *R:10 Q:\u0026#39;$TEST\t//如果超时则退出 Q:$c(R)\u0026#39;=sb //以sb开头 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType,msgType,barcode,mshStr)=\u0026#34;\u0026#34; S startTime=$P($H,\u0026#34;,\u0026#34;,2) K PLIST S index=1 F { S curTime=$P($H,\u0026#34;,\u0026#34;,2) Q:curTime\u0026gt;(startTime+300) //5分钟内没有处理完则退出循环 Q:$$Stop^MI.MIF000(mi) R *R:10 Q:\u0026#39;$TEST\t//如果超时则退出 I $L($G(PLIST(index)))\u0026gt;=32700 { //32767 S index=+$O(PLIST(\u0026#34;\u0026#34;),-1)+1 S PLIST(index)=\u0026#34;\u0026#34; } I $C(R)\u0026#39;=eb,$C(R)\u0026#39;=cr { S PLIST(index)=$G(PLIST(index))_$C(R) } I $C(R)=cr { //解析一条记录 D Record K PLIST S index=1 } Q:$C(R)=eb //循环读取,当为eb的时候则退出 } D Trace^MI.MIF000(mi,result,\u0026#34;result\u0026#34;) D Save Q Record S index=\u0026#34;\u0026#34; S segmentType=\u0026#34;\u0026#34;,dataTye=\u0026#34;\u0026#34;,graphType=\u0026#34;\u0026#34;,base64Stream=\u0026#34;\u0026#34; S isImage=0,isBinary=0 s OldgraphDataDIFF=\u0026#34;\u0026#34; s OldgraphDataBaso=\u0026#34;\u0026#34; s (Bracket,TestTube)=\u0026#34;\u0026#34; F { S index=$O(PLIST(index)) Q:\u0026#39;$L(index) S record=$TR($G(PLIST(index)),cr) Continue:\u0026#39;$L(record) D Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) I index=1 { S segmentType=$P(record,\u0026#34;|\u0026#34;,1) I segmentType=\u0026#34;MSH\u0026#34; {\t//信息头信息 S mshStr=record //消息类型 S msgType=$P($P(record,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,1) //ORU,ACK,QRY,QCK,DSR I msgType=\u0026#34;ORU\u0026#34; { D SendACK(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;) } I msgType=\u0026#34;ORM\u0026#34; { } S resultType=$P(record,\u0026#34;|\u0026#34;,11) } I segmentType=\u0026#34;PID\u0026#34; {\t//患者信息 } I segmentType=\u0026#34;PVI\u0026#34; {\t//就诊信息 } I segmentType=\u0026#34;OBR\u0026#34; {\t//医嘱信息 S epis=$P(record,\u0026#34;|\u0026#34;,3) S:\u0026#39;$l(epis) epis=$P(record,\u0026#34;|\u0026#34;,4) i epis[\u0026#34;Inv\u0026#34; d\t//Inv.082526_6-8 .s epis=$tr($tr(epis,\u0026#34;Inv.\u0026#34;,\u0026#34;\u0026#34;),\u0026#34;_\u0026#34;,\u0026#34;\u0026#34;)\t//YHR 20230819 仪器未识别到条码改为架子号获取信息 /*------自动核收-------*/\t//YHR 20230910 迈瑞BC7500自动核收 ;try{s ret=##class(MI.Special.AutomaticReceipt).ZDHS(mi,epis)}catch{} S code=$P($P(record,\u0026#34;|\u0026#34;,5),\u0026#34;^\u0026#34;,1) I code=\u0026#34;00003\u0026#34; {\t//LJ QCR } } I segmentType=\u0026#34;OBX\u0026#34; { S dataTye=$P(record,\u0026#34;|\u0026#34;,3) //NM (numeric) 表示数字值，用于定量项目, //ST (string) 表示字符串值，用于定性项目 S channel=$P(record,\u0026#34;|\u0026#34;,4) s InformationID=$p(channel,\u0026#34;^\u0026#34;,1) S channel=$P(channel,\u0026#34;^\u0026#34;,2) //s:\u0026#39;$l(channel) channel=$P(record,\u0026#34;|\u0026#34;,5) S value=$P(record,\u0026#34;|\u0026#34;,6) ;i value[\u0026#34;\u0026lt;\u0026#34; s value=$tr(value,\u0026#34;\u0026lt;\u0026#34;) ;i value[\u0026#34;\u0026gt;\u0026#34; s value=$tr(value,\u0026#34;\u0026gt;\u0026#34;) s value=$tr(value,\u0026#34; \u0026#34;) I channel=\u0026#34;FR-CRP\u0026#34; { i value\u0026gt;10 d .s channel1=\u0026#34;FCRP\u0026#34; .s channel2=\u0026#34;Fhs-CRP\u0026#34; .s value1=value .s value2=\u0026#34;\u0026gt;10\u0026#34; i value\u0026lt;10 d .s channel1=\u0026#34;FCRP\u0026#34; .s channel2=\u0026#34;Fhs-CRP\u0026#34; .s value1=\u0026#34;\u0026lt;10\u0026#34; .s value2=value i value=10 d .s channel1=\u0026#34;FCRP\u0026#34; .s channel2=\u0026#34;Fhs-CRP\u0026#34; .s value1=value .s value2=value S result=result_channel1_par10_value1_par11 S result=result_channel2_par10_value2_par11 } I channel=\u0026#34;SI\u0026#34; {\t//value=浊度(L)^溶血(H)^黄疸(I) S:$l($P(value,\u0026#34;^\u0026#34;,2)) result=result_channel_\u0026#34;H\u0026#34;_par10_$P(value,\u0026#34;^\u0026#34;,2)_par11 S:$l($P(value,\u0026#34;^\u0026#34;,3)) result=result_channel_\u0026#34;I\u0026#34;_par10_$P(value,\u0026#34;^\u0026#34;,3)_par11 S value=$P(value,\u0026#34;^\u0026#34;,1) } I dataTye=\u0026#34;ST\u0026#34; { S value=$S(value=\u0026#34;ò?D?\u0026#34;:\u0026#34;阴性\u0026#34;,value=\u0026#34;??D?\u0026#34;:\u0026#34;阳性\u0026#34;,1:value) i InformationID=\u0026#34;01012\u0026#34; d .s Bracket=$P(record,\u0026#34;|\u0026#34;,6) .s ^TMPBC7500(\u0026#34;Bracket\u0026#34;)=Bracket i $l($g(^TMPBC7500(\u0026#34;Bracket\u0026#34;))),InformationID=\u0026#34;01013\u0026#34; d .s TestTube=$P(record,\u0026#34;|\u0026#34;,6) .s RackNo=\u0026#34;上机:\u0026#34;_$g(^TMPBC7500(\u0026#34;Bracket\u0026#34;))_\u0026#34;-\u0026#34;_TestTube .k ^TMPBC7500(\u0026#34;Bracket\u0026#34;) .try{s ret=##class(MI.Special.SaveInformation).SaveRackNo(mi,epis, RackNo)}catch{}\t//YHR 20230914 保存架子号 } I $L(channel),dataTye\u0026#39;=\u0026#34;ED\u0026#34;,dataTye\u0026#39;=\u0026#34;IS\u0026#34; { S result=result_channel_par10_value_par11 } I dataTye=\u0026#34;IS\u0026#34; {\tI channel=\u0026#34;05001\u0026#34;,resultType=\u0026#34;Q\u0026#34; {\t//质控浓度 S epis=value } i $d(^LISPolice(\u0026#34;BC7500\u0026#34;,InformationID)) d .s WarningMessage=$g(^LISPolice(\u0026#34;BC7500\u0026#34;,InformationID)) .try{s ret=##Class(MI.Special.SaveInformation).SaveAlarmInformation(mi,epis,WarningMessage)}catch{}\t//YHR 20230914 保存报警信息 } S graphTypeDesc=$ZCVT($P($P(record,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,2),\u0026#34;U\u0026#34;) I dataTye=\u0026#34;ED\u0026#34; {\t//图形数据 I $ZCVT($P(value,\u0026#34;^\u0026#34;,2),\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Image\u0026#34;,\u0026#34;U\u0026#34;) { S isImage=1 //位图数据 } I $ZCVT($P(value,\u0026#34;^\u0026#34;,3),\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Octer-stream\u0026#34;,\u0026#34;U\u0026#34;) { S isBinary=1\t//二进制数据(需要绘图) } S graphType=channel I channel=\u0026#34;15050\u0026#34; {\t//二进制数据 S graphType=\u0026#34;RBC\u0026#34; } I channel=\u0026#34;15056\u0026#34; {\t//位图数据 S graphType=\u0026#34;RBC\u0026#34; } I channel=\u0026#34;15100\u0026#34; {\t//二进制数据 S graphType=\u0026#34;PLT\u0026#34; } I channel=\u0026#34;15116\u0026#34; {\t//位图数据 S graphType=\u0026#34;PLT\u0026#34; } I channel=\u0026#34;15200\u0026#34; {\t//位图数据 S graphType=\u0026#34;WBC-DIFFBMP\u0026#34; } I channel=\u0026#34;15201\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;WBC-DIFF\u0026#34; } I channel=\u0026#34;15202\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;WBC-DIFF\u0026#34; } I channel=\u0026#34;15250\u0026#34; {\t//位图数据 S graphType=\u0026#34;BASOBMP\u0026#34; } I channel=\u0026#34;15251\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;BASO\u0026#34; } I channel=\u0026#34;15300\u0026#34; {\t//位图数据 S graphType=\u0026#34;RET\u0026#34; } I channel=\u0026#34;15306\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;RET\u0026#34; } I channel=\u0026#34;15301\u0026#34; {\t//位图数据 S graphType=\u0026#34;PLT-0\u0026#34; } I channel=\u0026#34;15302\u0026#34; {\t//位图数据 S graphType=\u0026#34;RET-EXT\u0026#34; } I channel=\u0026#34;15350\u0026#34; {\t//位图数据 S graphType=\u0026#34;NRBC\u0026#34; } I channel=\u0026#34;15354\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;NRBC\u0026#34; } S graphData=$P(value,\u0026#34;^\u0026#34;,5) S graphDataType=$P(value,\u0026#34;^\u0026#34;,4) I $ZCVT(graphDataType,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Base64\u0026#34;,\u0026#34;U\u0026#34;) { D Trace^MI.MIF000(mi,graphData,graphType) /* i graphType[\u0026#34;RBC Histogram\u0026#34; d .s charStream=##class(%GlobalCharacterStream).%New() .d charStream.Write(graphData) .s ret=##Class(MI.TEST.TEST).SaveBase64ToMachine(mi,epis,\u0026#34;RBC\u0026#34;,charStream,epis_\u0026#34;RBC.bmp\u0026#34;,\u0026#34;BC7500\u0026#34;) .D Trace^MI.MIF000(mi,ret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：RBC Histogram\u0026#34;) i graphType[\u0026#34;PLT Histogram\u0026#34; d .s charStream=##class(%GlobalCharacterStream).%New() .d charStream.Write(graphData) .s ret=##Class(MI.TEST.TEST).SaveBase64ToMachine(mi,epis,\u0026#34;PLT\u0026#34;,charStream,epis_\u0026#34;PLT.bmp\u0026#34;,\u0026#34;BC7500\u0026#34;) .D Trace^MI.MIF000(mi,ret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：PLT Histogram\u0026#34;) i graphType[\u0026#34;WBC DIFF Scattergram\u0026#34; d .s charStream=##class(%GlobalCharacterStream).%New() .d charStream.Write(graphData) .s ret=##Class(MI.TEST.TEST).SaveBase64ToMachine(mi,epis,\u0026#34;DIFF\u0026#34;,charStream,epis_\u0026#34;DIFF.bmp\u0026#34;,\u0026#34;BC7500\u0026#34;) .D Trace^MI.MIF000(mi,ret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：WBC DIFF Scattergram\u0026#34;) i graphType[\u0026#34;WNB Scattergram\u0026#34; d .s charStream=##class(%GlobalCharacterStream).%New() .d charStream.Write(graphData) .s ret=##Class(MI.TEST.TEST).SaveBase64ToMachine(mi,epis,\u0026#34;Baso\u0026#34;,charStream,epis_\u0026#34;Baso.bmp\u0026#34;,\u0026#34;BC7500\u0026#34;) .D Trace^MI.MIF000(mi,ret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：WNB Scattergram\u0026#34;) */ i graphType[\u0026#34;RBC Histogram\u0026#34; d .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;RBC\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#RBC#RBC######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RBC#RBC######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：RBC Histogram\u0026#34;) i graphType[\u0026#34;PLT Histogram\u0026#34; d .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;PLT\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#PLT#PLT######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#PLT#RBC######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：PLT Histogram\u0026#34;) i graphType[\u0026#34;WBC DIFF\u0026#34; d .//s OldgraphDataDIFF=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;WBC-DIFF\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#DIFF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#DIFF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：WBC DIFF\u0026#34;) i graphType[\u0026#34;WNB Scattergram\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#WNB#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#Baso#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：WNB Scattergram\u0026#34;) i graphType[\u0026#34;RET Scattergram\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RET#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RET#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：RET Scattergram\u0026#34;) i graphType[\u0026#34;PLT-O Scattergram\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RET#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#PLTO#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：PLT-O Scattergram\u0026#34;) i graphType[\u0026#34;RET-EXT Scattergram\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RET#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RETEXT#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：RET-EXT Scattergram\u0026#34;) i graphType[\u0026#34;RBCVHF Scattergram\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RET#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RBCVHF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：RBCVHF Scattergram\u0026#34;) i graphType[\u0026#34;RBCSCT Scattergram\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RET#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RBCSCT#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：RBCSCT Scattergram\u0026#34;) } } } I segmentType=\u0026#34;ORC\u0026#34; {\t//就诊信息 S barcode=$P(record,\u0026#34;|\u0026#34;,4) /*------自动核收-------*/\t//YHR 20230910 迈瑞BC7500自动核收 ;try{s ret=##class(MI.Special.AutomaticReceipt).ZDHS(mi,barcode)}catch{} //S:$ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) barcode=\u0026#34;\u0026#34; //条码扫描错误 //I $L(barcode) { //双向 //} Invalid 条码扫描错误 d SendORR(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;,mshStr,barcode) } } //I dataTye=\u0026#34;ED\u0026#34;,index\u0026gt;1,$L(base64Stream) { //D base64Stream.Write($P(record,\u0026#34;|\u0026#34;,1)) //i graphType=\u0026#34;WBC-DIFFBMP\u0026#34; d //.s ^LISDrawImageTask($h,mi,epis_\u0026#34;WBC-DIFF\u0026#34;)=$lb(epis,OldgraphDataDIFF,mi,\u0026#34;MI.MIFBC6800BI\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#DIFF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) //i graphType=\u0026#34;BASOBMP\u0026#34; d //.s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,OldgraphDataBaso,mi,\u0026#34;MI.MIFBC6800BI\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#Baso#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) //s miCode=$lg(^dbo.BTMIMachineParameterD(mi),2) //i graphType=\u0026#34;WBC-DIFF\u0026#34; d //.D Trace^MI.MIF000(mi,miCode_\u0026#34;:\u0026#34;_epis_\u0026#34;:\u0026#34;_graphType,\u0026#34;SaveImage\u0026#34;) //.s ret=##Class(MI.Common.MIFBase).SaveBase64ToMachine(mi,epis,graphType,base64Stream,epis_\u0026#34;-\u0026#34;_graphType,miCode) //} } Q Save D Trace^MI.MIF000(mi,epis_\u0026#34;^\u0026#34;_result,\u0026#34;Test\u0026#34;) I $l(epis),$l(result) { S QC=\u0026#34;\u0026#34; D Save^MI.MIF000(mi,epis,result,date,time,QC) } S (sample,epis,surname,rec,res,result,date,time,QC,resultType)=\u0026#34;\u0026#34; Q SendACK(mi,mshStr,ackType=\u0026#34;AA\u0026#34;,errCode=0,errDesc=\u0026#34;Message accepted\u0026#34;) //send \u0026#39;ack\u0026#39; to instrument N (mi,mshStr,ackType,errCode,errDesc) S mi=$g(mi),mshStr=$g(mshStr),ackType=$g(ackType),errCode=$g(errCode),errDesc=$g(errDesc) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) //Q:$l(mshStr,\u0026#34;|\u0026#34;)\u0026lt;21 ret S ret=0 S msgRoutine=$P($P(mshStr,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,2) S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;ACK^\u0026#34;_msgRoutine W sb,mshStr,cr,\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_\u0026#34;|\u0026#34;_errDesc_\u0026#34;|||\u0026#34;_errCode_\u0026#34;|\u0026#34;,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,$S(ackType=\u0026#34;AA\u0026#34;:\u0026#34;ACK\u0026#34;,ackType=\u0026#34;AE\u0026#34;:\u0026#34;Error\u0026#34;,ackType=\u0026#34;AR\u0026#34;:\u0026#34;NAK\u0026#34;,1:\u0026#34;NULL\u0026#34;),\u0026#34;H--\u0026gt;M\u0026#34;) Q ret ErrHandler D Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) h 3 Q //保存直方图 SaveHistogram(mi,epis,graphType,graphOrder,base64Stream) N (mi,epis,graphType,graphOrder,base64Stream) S mi=$G(mi),epis=$G(epis),graphType=$G(graphType),graphOrder=$G(graphOrder),base64Stream=$G(base64Stream) Q:\u0026#39;$L(mi) 1 Q:\u0026#39;$L(epis) 1 Q:\u0026#39;$L(base64Stream) 1 Q:\u0026#39;$L(graphType) 1 S:\u0026#39;$L(graphOrder) graphOrder=0 S glBinaryStream=##Class(%GlobalBinaryStream).%New() While \u0026#39;base64Stream.AtEnd { S base64=base64Stream.Read() S binary=$system.Encryption.Base64Decode(base64) D glBinaryStream.Write(binary) } S charStream=##Class(%GlobalCharacterStream).%New() S maxDot=0 While \u0026#39;glBinaryStream.AtEnd { S char=glBinaryStream.Read(1) S ascValue=$ASCII(char)_\u0026#34;,\u0026#34; S maxDot=maxDot+1 D charStream.Write(ascValue) } D charStream.Write(\u0026#34;0\u0026#34;) K glBinaryStream S title=graphType S foreColor=12 S:graphType=\u0026#34;PLT\u0026#34; foreColor=10 S top=10 S left=10 S width=300 S height=150 S (label,maxValue,memo)=\u0026#34;\u0026#34; S error=##Class(MI.Instrument).SaveHistogram(charStream,mi,epis,graphType,graphOrder,label,title,maxDot,maxValue,memo,foreColor,top,left,width,height) I $L(error) { D Trace^MI.MIF000(mi,$TR(error,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;),\u0026#34;Graph Error\u0026#34;) } K charStream Q 0 SendORR(mi,record, AckType=\u0026#34;AA\u0026#34;,ErrCode=0,ErrDesc=\u0026#34;Message accepted\u0026#34;,mshStr,epis) N (mi,record,AckType,ErrCode,ErrDesc,mshStr,epis) s mi=$g(mi),record=$g(record),AckType=$g(AckType),ErrCode=$g(ErrCode),ErrDesc=$g(ErrDesc),mshStr=$g(mshStr),epis=$g(epis) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) S ret=0 S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS||||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,7,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;ORR^O02\u0026#34; s isRecieve=\u0026#34;\u0026#34; s wgDR=\u0026#34;\u0026#34; s wgDR=$lg(^dbo.BTMIMachineParameterD(mi),6) //\u0026amp;sql(SELECT EpisodeNo into :isRecieve FROM dbo.RP_VisitNumberReport where AssayNo=:epis and WorkGroupMachineDR=:wgDR) s isRecieve=epis //##class(HIS.DHCReportPrint).GetReportAssayNoMTHD(mi,epis) s flag=\u0026#34;AA\u0026#34; s MSACode=seq D Trace^MI.MIF000(mi,isRecieve,\u0026#34;isRecieve is \u0026#34;) i ($l(isRecieve)\u0026lt;1) { s flag=\u0026#34;AR\u0026#34; } i $ZCVT(epis,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;){ s flag=\u0026#34;AR\u0026#34; } s MSA=\u0026#34;MSA|\u0026#34;_flag_\u0026#34;|\u0026#34;_MSACode i flag=\u0026#34;AR\u0026#34;{ S TMPCORDE=sb_mshStr_cr_MSA_cr_eb_cr W sb,mshStr,cr,MSA,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,TMPCORDE,\u0026#34;H-\u0026gt;M\u0026#34;) }else{ s PatInfomation=\u0026#34;\u0026#34; s PatInfomation=$$GetPatInfo(epis,mi) D Trace^MI.MIF000(mi,PatInfomation,\u0026#34;PatInfomation is\u0026#34;) s (RegNo,Name,Birth,Species,PatType,LOC,BedNo,Fee,Srcdocno,PatAge)=\u0026#34;\u0026#34; if $l(PatInfomation){ s RegNo=$p(PatInfomation,\u0026#34;,\u0026#34;,9) s Name=$p(PatInfomation,\u0026#34;,\u0026#34;,10) s Birth=$p(PatInfomation,\u0026#34;,\u0026#34;,29) s Species=$p(PatInfomation,\u0026#34;,\u0026#34;,11) i Species=\u0026#34;1\u0026#34; s Species=\u0026#34;男\u0026#34; i Species=\u0026#34;2\u0026#34; s Species=\u0026#34;女\u0026#34; s PatType=$p(PatInfomation,\u0026#34;,\u0026#34;,12) s LOC=$p(PatInfomation,\u0026#34;,\u0026#34;,6) s BedNo=$p(PatInfomation,\u0026#34;,\u0026#34;,13) s Fee=$p(PatInfomation,\u0026#34;,\u0026#34;,5) s Srcdocno=$p(PatInfomation,\u0026#34;,\u0026#34;,7) s PatAge=$p(PatInfomation,\u0026#34;,\u0026#34;,14) } s PID=\u0026#34;PID|1||\u0026#34;_RegNo_\u0026#34;^^^^MR||\u0026#34;_Name_\u0026#34;^\u0026#34;_Name_\u0026#34;||\u0026#34;_Birth_\u0026#34;|\u0026#34;_Species s PV1=\u0026#34;PV1|1|\u0026#34;_PatType_\u0026#34;|\u0026#34;_LOC_\u0026#34;^^\u0026#34;_BedNo_\u0026#34;|||||||||||||||||\u0026#34;_Fee s ORC=\u0026#34;ORC|AF||\u0026#34;_epis s curTime=$zd($h,8)_$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;,\u0026#34;\u0026#34;) s randomNumber=1000+$r(1000) s OBR=\u0026#34;OBR|1|\u0026#34;_epis_\u0026#34;||00001^Automated Count^99MRC||\u0026#34;_curTime_randomNumber_\u0026#34;||||\u0026#34;_Srcdocno_\u0026#34;||||||||||||||HM||||||||Bill\u0026#34; s TestCodeDate=\u0026#34;\u0026#34; s TestCodeDate=$$SearchTestItem(mi,epis) s OBX=\u0026#34;OBX|1|IS|08003^Test Mode^99MRC||\u0026#34;_TestCodeDate_\u0026#34;||||||F\u0026#34;_cr_ \u0026#34;OBX|2|IS|01002^Ref Group^99MRC||Child||||||F\u0026#34;_cr_ \u0026#34;OBX|3|NM|30525-0^Age^LN||\u0026#34;_PatAge_\u0026#34;|yr|||||F\u0026#34;_cr_ \u0026#34;OBX|4|ST|01001^Remark^99MRC||\u0026#34;_PatType_\u0026#34;||||||F\u0026#34;_cr_ \u0026#34;OBX|5|ST|08005^SerialNumber^99MRC||\u0026#34;_isRecieve_\u0026#34;||||||F\u0026#34;_cr_ \u0026#34;OBX|6|IS|01007^Sample Type^99MRC||Venous blood||||||\u0026#34;_cr_ \u0026#34;OBX|7|IS|01008^Patient Area^99MRC||A - 501||||||F\u0026#34;_cr_ \u0026#34;OBX|8|ST|01009^Custom patient info 1^99MRC||Nothing||||||F\u0026#34;_cr_ \u0026#34;OBX|9|ST|01010^Custom patient info 2^99MRC||Nothing||||||F\u0026#34;_cr_ \u0026#34;OBX|10|ST|01011^Custom patient info 3^99MRC||Nothing||||||F\u0026#34; S TMPORDER=sb_mshStr_cr_MSA_cr_PID_cr_PV1_cr_ORC_cr_OBR_cr_OBX_cr_eb_cr w sb,mshStr,cr,MSA,cr,PID,cr,PV1,cr,ORC,cr,OBR,cr,OBX,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,TMPORDER,\u0026#34;H-\u0026gt;M\u0026#34;) } Q ret SearchTestItem(mi,epis) S tcx=\u0026#34;\u0026#34;,tc=\u0026#34;\u0026#34; d ScanOne^MI.MIF000(mi,epis) i $d(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis)){ f { s tc=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis,tc)) q:tc=\u0026#34;\u0026#34; i \u0026#39;$l(tcx){ s tcx=tc }else{ s tcx=tcx_\u0026#34;+\u0026#34;_tc } } } Q tcx GetPatInfo(labno,mi) s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,\u0026#34;\u0026#34;_labno,\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$lg(RPVisitNumberData,3) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),2) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s BirthDate=$lg(RPVisitNumberData,16) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$lg(RPVisitNumberData,28) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; s Patna=PatName ;病人姓名 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s EpisodeNo=\u0026#34;\u0026#34; s Diagnose=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode_\u0026#34;,\u0026#34;_BirthDate_\u0026#34;,\u0026#34;_EpisodeNo q RetString //双向上传医嘱信息,wwh,2015-11-05,未测试 SendOrder(mi,mshStr,record) N (mi,mshStr,record) S mi=$G(mi),mshStr=$G(mshStr),record=$G(record) Q:\u0026#39;$L(mi) 1 Q:\u0026#39;$D(^TMIF(mi)) 1 S barcode=$P(record,\u0026#34;|\u0026#34;,4) I \u0026#39;$L(barcode) { D Trace^MI.MIF000(mi,\u0026#34;条码号为空\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } I $ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) {\t//条码扫描错误 D Trace^MI.MIF000(mi,\u0026#34;条码扫描错误,机器未识别\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } I \u0026#39;$D(^TEPI(barcode)) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_barcode_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } K uploadList S tsCode=\u0026#34;\u0026#34;,uploadList=0 F { S tsCode=$O(^TEPI(barcode,1,tsCode)) Q:\u0026#39;$L(tsCode) Q:\u0026#39;$D(^TMIF(mi,0,tsCode)) S tsDesc=$P($G(^TTAB(\u0026#34;TS\u0026#34;,tsCode)),\u0026#34;\\\u0026#34;,1) S tsCnt=$O(^TEPI(barcode,1,tsCode,\u0026#34;\u0026#34;)) Q:\u0026#39;$L(tsCnt) S status=$P($G(^TEPI(barcode,1,tsCode,tsCnt)),\u0026#34;\\\u0026#34;,31) I status=\u0026#34;A\u0026#34; { D Trace^MI.MIF000(mi,\u0026#34;条码扫:\u0026#34;_barcode_\u0026#34;,医嘱:\u0026#34;_tsCode_\u0026#34;||\u0026#34;_tsDesc_\u0026#34;,不是登记状态,不再上传\u0026#34;,\u0026#34;Order\u0026#34;)\tContinue } S channel=$$GetTestSetChannel(tsCode) I \u0026#39;$L(channel) { D Trace^MI.MIF000(mi,\u0026#34;条码扫:\u0026#34;_barcode_\u0026#34;,医嘱:\u0026#34;_tsCode_\u0026#34;||\u0026#34;_tsDesc_\u0026#34;,未找到通道号\u0026#34;,\u0026#34;Order\u0026#34;)\tContinue } Continue:$D(uploadList(tsCode)) S uploadList(tsCode)=channel S uploadList=$I(uploadList) } I +$G(uploadList)\u0026lt;1 { D Trace^MI.MIF000(mi,\u0026#34;条码扫:\u0026#34;_barcode_\u0026#34;未找可上传的医嘱\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } //1,仪器发送过来的请求信息: //MSH|^~\\\u0026amp;||Mindray|||20081120174836||ORM^O01|4|P|2.3.1||||||UNICODE //ORC|RF||SampleID1||IP S order=\u0026#34;\u0026#34; S msh=\u0026#34;MSH|^~\\\u0026amp;|LIS||||\u0026#34;_$TR($ZDT($H,8),\u0026#34; :\u0026#34;)_\u0026#34;||ORR^O02|1|P|2.3.1||||||UNICODE\u0026#34; //huifu: //MSH|^~\\\u0026amp;|LIS||||20081120174836||ORR^O02|1|P|2.3.1||||||UNICODE //MSA|AA|4 //PID|1||ChartNo^^^^MR||^FName||19810506|NT //PV1|1|E|内科^^Bn4|||||||||||||||||NewCharge //ORC|AF|SampleID1||| //OBR|1|SampleID1||||20060506||||tester|||Diagnose content...|20060504||||||||20080821||HM||||审核者||||检验者 //OBX|1|IS|08001^Take Mode^99MRC||A||||||F //OBX|2|IS|08002^Blood Mode^99MRC||W||||||F //OBX|3|IS|08003^Test Mode^99MRC||CBC||||||F //OBX|4|IS|01002^Ref Group^99MRC||XXXX||||||F //OBX|5|NM|30525-0^Age^LN||1|hr|||||F //OBX|6|ST|01001^Remark^99MRC||remark content...||||||F ///未找到检测时: //MSH|^~\\\u0026amp;|LIS||||20081120174836||ORR^O02|1|P|2.3.1||||||UNICODE //MSA|AR|9 Q 0 GetTestSetChannel(tsCode) N (tsCode) S tsCode=$G(tsCode) Q \u0026#34;\u0026#34; 8-血细胞（迈瑞7500））H-046-011151-00-7.0 labXpert 通信协议（中文）.pdf\n​​\nASTM 协议接口双向 一次性发送按照字符数多次发送 限制每次发送字数不能超过 241 个字数，在回传时要根据回传的字符数进行分割\n示例接口(日立名称: MI.MIFDXC800BI /// 描述: DXC800 仪器接口 /// 通讯方式：双向,半双工 /// 编写者:liuzf /// 编写日期: 20150827 MIFABH7600BI(mi) ; 3/17/04 ; ASTM protocol - H7600 s mi=$g(mi) S ^TMPMACH10(mi,104)=$H i \u0026#39;$l(mi) q s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 //控制字符 s stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4) s lf=$c(10),cr=$c(13),nak=$c(21),(result,epis)=\u0026#34;\u0026#34;,etb=$c(23) S ^TMPMACH10(mi,102)=$H i $$Start^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q c Port q ErrHandler h 10 d Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) s iERR=+$g(iERR)+1 i iERR\u0026gt;30 s ret=$$Stop^MI.MIF000(mi) Q Main SET $ZTRAP=\u0026#34;ErrHandler\u0026#34; S iERR=0 r *R:10 e d q .d BUILD .//自动上传 .d BUILD2 i $c(R)=enq d .s AllRecord=\u0026#34;\u0026#34; .d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) .d ACK .f r *R:10 q:$c(R)=eot d ..i $c(R)\u0026#39;=stx q ..s record=$$Read^MI.MIF000(mi,\u0026#34;\u0026#34;,lf) q:\u0026#39;$l(record) ..s record=$e(record,2,$l(record)-1) ..d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) ..s AllRecord=AllRecord_$p(record,etb,1) ..d ACK .d Trace^MI.MIF000(mi,$s($c(R)=eot:\u0026#34;EOT\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) .;i $c(R)=eot,$l(AllRecord) d .i $l(AllRecord) d ..s (mid,sample,epis,surname,rec,res,result,date,time,QC,Pflag,code)=\u0026#34;\u0026#34; ..f i=1:1:$l(AllRecord,cr) d ...s rec=$p(AllRecord,cr,i) ...d Trace^MI.MIF000(mi,rec,\u0026#34;rec\u0026#34;) ...s type=$tr($p(rec,\u0026#34;|\u0026#34;),\u0026#34; \u0026#34;) ...i type=\u0026#34;H\u0026#34; d q ....s (mid,sample,epis,surname,rec,res,result,date,time,QC,racksid,rackno,code)=\u0026#34;\u0026#34; ...i type=\u0026#34;Q\u0026#34; d q ....;Q|1|^^0/*************/1/5527/5/R1/R||||||||||A\u0026#34;_$c(13)_\u0026#34; ....s temstr=$p(rec,\u0026#34;|\u0026#34;,3) ....s temlabno=$p(temstr,\u0026#34;^\u0026#34;,3) ....;s temlabno=$tr($P(temstr,\u0026#34;/\u0026#34;,2),\u0026#34;*\u0026#34;) ....;i \u0026#39;$l(temlabno) q ....;s racksid=$tr($p(temstr,\u0026#34;/\u0026#34;,4),\u0026#34; \u0026#34;) ....;s rackno=$tr($p(temstr,\u0026#34;/\u0026#34;,5),\u0026#34; \u0026#34;) ....;S temlabno=$tr(temlabno,\u0026#34; \u0026#34;) ....;s temlabno=$tr($P(temstr,\u0026#34;/\u0026#34;,2),\u0026#34;*\u0026#34;) ....;i \u0026#39;$l(temlabno) q ....s racksid=$p(temstr,\u0026#34;^\u0026#34;,5) ....s rackno=$p(temstr,\u0026#34;^\u0026#34;,6) ....s ^TMP($zn,$j,\u0026#34;temlabnoInfo\u0026#34;,temlabno)=$p(temstr,\u0026#34;^\u0026#34;,4,9) ....d Trace^MI.MIF000(mi,temlabno,\u0026#34;temlabno\u0026#34;) ....;s temlabno=9000001621 ....i \u0026#39;$l(temlabno) q ....s ^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,temlabno)=racksid_\u0026#34;^\u0026#34;_rackno ...//------------------------------------ ...i type=\u0026#34;O\u0026#34; d q ....s epis=$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,2),\u0026#34; \u0026#34;) ....if epis=\u0026#34;\u0026#34; s epis=+$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ....s qcid=$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,2),\u0026#34; \u0026#34;) ....s qcid=$tr(qcid,\u0026#34;-\u0026#34;) ....s QCStat=$tr($p(rec,\u0026#34;|\u0026#34;,4),\u0026#34; \u0026#34;) ....s SpecStat=$tr($p(rec,\u0026#34;|\u0026#34;,6),\u0026#34; \u0026#34;) ....i SpecStat=\u0026#34;S\u0026#34; s epis=epis //s epis=\u0026#34;E\u0026#34;_epis ....i QCStat=\u0026#34;Q\u0026#34; s QC=\u0026#34;\\\u0026#34;_qcid,epis=qcid ....;s QC=$$findQC^MIF000(mi,epis) ....s datex=$p(rec,\u0026#34;|\u0026#34;,23) ....//s date=$e(datex,5,6)_\u0026#34;/\u0026#34;_$e(datex,7,8)_\u0026#34;/\u0026#34;_$e(datex,1,4) ;,date=$$intdate^SSUTIL4(date) ....//s time=$e(datex,9,10)_\u0026#34;:\u0026#34;_$e(datex,11,12)_\u0026#34;:\u0026#34;_$e(datex,13,14) ;,time=$$inttime^SSUTIL4(time1) ...//-------------------- ...i type=\u0026#34;R\u0026#34; d q ....s code=$tr($p($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,4),\u0026#34;/\u0026#34;,1),\u0026#34; \u0026#34;) ....s mid1=$p(rec,\u0026#34;|\u0026#34;,14) ....//DaiYi 20111226 ....If mid1=\u0026#34;ISE1\u0026#34; Set mid1=\u0026#34;\u0026#34; ....;If mid1=\u0026#34;D1\u0026#34; Set mid1=\u0026#34;\u0026#34; ....;If mid1\u0026#39;=\u0026#34;\u0026#34;,QC\u0026#39;=\u0026#34;\u0026#34; Set QC=$$findQC^MIF000(mi,epis_mid1) ....;If mid1\u0026#39;=\u0026#34;\u0026#34;,QC\u0026#39;=\u0026#34;\u0026#34; Set epis=epis_mid1 ....If mid1\u0026#39;=\u0026#34;\u0026#34; s mid=mid1 ....s res=$p(rec,\u0026#34;|\u0026#34;,4) ...i type=\u0026#34;C\u0026#34; d q ....//-----FLAG---DaiYi 2010-07-12 ....s resFlag=$p(rec,\u0026#34;|\u0026#34;,4) ....If resFlag=0 Set resFlag=\u0026#34;\u0026#34; ....If resFlag=26 Set resFlag=\u0026#34;$\u0026#34; ....If resFlag=5 Set resFlag=\u0026#34;Z\u0026#34; ....If resFlag=43 Set resFlag=\u0026#34;!\u0026#34; ....If resFlag=1 Set resFlag=\u0026#34;A\u0026#34; ....If resFlag=2 Set resFlag=\u0026#34;Q\u0026#34; ....If resFlag=3 Set resFlag=\u0026#34;V\u0026#34; ....If resFlag=4 Set resFlag=\u0026#34;T\u0026#34; ....If resFlag=6 Set resFlag=\u0026#34;P\u0026#34; ....If resFlag=7 Set resFlag=\u0026#34;I\u0026#34; ....If resFlag=8 Set resFlag=\u0026#34;J\u0026#34; ....If resFlag=9 Set resFlag=\u0026#34;K\u0026#34; ....If resFlag=10 Set resFlag=\u0026#34;W\u0026#34; ....If resFlag=11 Set resFlag=\u0026#34;F\u0026#34; ....If resFlag=12 Set resFlag=\u0026#34;H\u0026#34; ....If resFlag=13 Set resFlag=\u0026#34;U\u0026#34; ....If resFlag=14 Set resFlag=\u0026#34;S\u0026#34; ....If resFlag=15 Set resFlag=\u0026#34;Y\u0026#34; ....If resFlag=16 Set resFlag=\u0026#34;G\u0026#34; ....If resFlag=17 Set resFlag=\u0026#34;B\u0026#34; ....If resFlag=18 Set resFlag=\u0026#34;N\u0026#34; ....If resFlag=19 Set resFlag=\u0026#34;L\u0026#34; ....If resFlag=20 Set resFlag=\u0026#34;E\u0026#34; ....If resFlag=21 Set resFlag=\u0026#34;R\u0026#34; ....If resFlag=22 Set resFlag=\u0026#34;D\u0026#34; ....If resFlag=23 Set resFlag=\u0026#34;\u0026amp;\u0026#34; ....If resFlag=24 Set resFlag=\u0026#34;Z\u0026#34; ....If resFlag=25 Set resFlag=\u0026#34;M\u0026#34; ....If resFlag=27 Set resFlag=\u0026#34;$\u0026#34; ....If resFlag=28 Set resFlag=\u0026#34;@\u0026#34; ....If resFlag=29 Set resFlag=\u0026#34;#\u0026#34; ....If resFlag=30 Set resFlag=\u0026#34;#\u0026#34; ....If resFlag=31 Set resFlag=\u0026#34;#\u0026#34; ....If resFlag=32 Set resFlag=\u0026#34;#\u0026#34; ....If resFlag=33 Set resFlag=\u0026#34;#\u0026#34; ....If resFlag=34 Set resFlag=\u0026#34;#\u0026#34; ....If resFlag=35 Set resFlag=\u0026#34;+\u0026#34; ....If resFlag=36 Set resFlag=\u0026#34;+\u0026#34; ....If resFlag=37 Set resFlag=\u0026#34;%\u0026#34; ....If resFlag=38 Set resFlag=\u0026#34;O\u0026#34; ....If resFlag=39 Set resFlag=\u0026#34;X\u0026#34; ....If resFlag=42 Set resFlag=\u0026#34;\u0026#39;\u0026#34; ....If resFlag=43 Set resFlag=\u0026#34;!\u0026#34; ....If resFlag=44 Set resFlag=\u0026#34;=\u0026#34; ....If resFlag=45 Set resFlag=\u0026#34;=\u0026#34; ....If resFlag=46 Set resFlag=\u0026#34;\u0026gt;\u0026#34; ....If resFlag=51 Set resFlag=\u0026#34;:\u0026#34; ....If resFlag=52 Set resFlag=\u0026#34;;\u0026#34; ....If resFlag=53 Set resFlag=\u0026#34;/\u0026#34; ....If resFlag=55 Set resFlag=\u0026#34;r\u0026#34; ....If resFlag=62 Set resFlag=\u0026#34;g\u0026#34; ....If resFlag=63 Set resFlag=\u0026#34;a\u0026#34; ....If resFlag=64 Set resFlag=\u0026#34;b\u0026#34; ....If resFlag=65 Set resFlag=\u0026#34;p\u0026#34; ....If resFlag=66 Set resFlag=\u0026#34;q\u0026#34; ....If resFlag=67 Set resFlag=\u0026#34;h\u0026#34; ....If resFlag=68 Set resFlag=\u0026#34;k\u0026#34; ....If resFlag=69 Set resFlag=\u0026#34;m\u0026#34; ....If resFlag=70 Set resFlag=\u0026#34;f\u0026#34; ....If resFlag=71 Set resFlag=\u0026#34;d\u0026#34; ....If resFlag=72 Set resFlag=\u0026#34;e\u0026#34; ....If resFlag=74 Set resFlag=\u0026#34;y\u0026#34; ....If resFlag=75 Set resFlag=\u0026#34;t\u0026#34; ....If resFlag=76 Set resFlag=\u0026#34;s\u0026#34; ....If resFlag=77 Set resFlag=\u0026#34;c\u0026#34; ....If resFlag=86 Set resFlag=\u0026#34;u\u0026#34; ....If resFlag=87 Set resFlag=\u0026#34;n\u0026#34; ....If resFlag=93 Set resFlag=\u0026#34;z\u0026#34; ....If resFlag=94 Set resFlag=\u0026#34;]\u0026#34; ....If resFlag=95 Set resFlag=\u0026#34;[\u0026#34; ....If resFlag=96 Set resFlag=\u0026#34;[\u0026#34; ....If resFlag=97 Set resFlag=\u0026#34;}\u0026#34; ....If resFlag=98 Set resFlag=\u0026#34;v\u0026#34; ....If resFlag=99 Set resFlag=\u0026#34;w\u0026#34; ....If resFlag=100 Set resFlag=\u0026#34;\u0026lt;\u0026#34; ....If resFlag=101 Set resFlag=\u0026#34;￥\u0026#34; ....;s result=result_code_ResultDeli_res_$c(92,92,92)_resFlag_$c(44) ....s result=result_code_ResultDeli_res_ItemDeli ....//------------------------------------------------ ...i type=\u0026#34;L\u0026#34; d Last q q Last\t; file result if exist s AllRecord=\u0026#34;\u0026#34; d BUILD d Trace^MI.MIF000(mi,mi,\u0026#34;1H\u0026lt;--M\u0026#34;) d Trace^MI.MIF000(mi,result,\u0026#34;1H\u0026lt;--M\u0026#34;) //s epis=9775 i $l(epis),$l(result) d Save^MI.MIF000(mi,epis,result,date,time,QC) s (epis,result,date,time,QC)=\u0026#34;\u0026#34; q BUILD i \u0026#39;$d(^TMP($zn)) q i \u0026#39;$d(^TMP($zn,$j)) q s labno=\u0026#34;\u0026#34; f s labno=$o(^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,labno)) q:labno=\u0026#34;\u0026#34; d .;根据预置条码号取得检验条码号 .;s ^aai200(763,labno)=\u0026#34;\u0026#34; .//s labno1=$$GetLabNo^CHDhcLabDoEpis(labno) .//s ^aai200(764,labno)=labno1_\u0026#34;,\u0026#34;_labno_\u0026#34;,\u0026#34;_mi .//----判断日志条码和系统条码是否一样---- .//If labno=labno1 Quit .//-------------------------------------- .d ScanOne^MI.MIF000(mi,labno) .s tcx=\u0026#34;\u0026#34; .s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) q:chl=\u0026#34;\u0026#34; d ..s tcx=tcx_\u0026#34;^^^\u0026#34;_$p(chl,\u0026#34;_\u0026#34;,1)_\u0026#34;^\\\u0026#34; .s tcx=$e(tcx,1,$l(tcx)-1) .;s xx=$$extdate2^SSUTIL4($h),date=$p(xx,\u0026#34;/\u0026#34;,3)_$p(xx,\u0026#34;/\u0026#34;,2)_$p(xx,\u0026#34;/\u0026#34;,1) .;s xx=$$exttime^SSUTIL4($p($h,\u0026#34;,\u0026#34;,2)),time=$p(xx,\u0026#34;:\u0026#34;,1)_$p(xx,\u0026#34;:\u0026#34;,2)_\u0026#34;00\u0026#34; .s temepis=\u0026#34;\u0026#34; .s str=\u0026#34;1H|\\^\u0026amp;|||host^1|||||LST008AS|TSDWN^REPLY|P|1\u0026#34;_cr .//s str=str_\u0026#34;P|1|||||||M||||||48^Y\u0026#34;_cr .s str=str_\u0026#34;P|1|||||||||||||\u0026#34;_cr .s samtype=\u0026#34;1\u0026#34; .s racksid=$p(^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,labno),\u0026#34;^\u0026#34;,1) .;s rackno=$p(^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,labno),\u0026#34;^\u0026#34;,2) .s temlabnoInfo=^TMP($zn,$j,\u0026#34;temlabnoInfo\u0026#34;,labno) .i labno=\u0026#34;N\u0026#34; s labno=\u0026#34;\u0026#34; .;d SetTSMachine(mi,labno,racksid,rackno) .s str=str_\u0026#34;O|1|\u0026#34;_labno_\u0026#34;|\u0026#34;_temlabnoInfo_\u0026#34;|\u0026#34; .s str=str_tcx_\u0026#34;|R||\u0026#34;_$tr($tr($zdt($h,8),\u0026#34; \u0026#34;),\u0026#34;:\u0026#34;)_\u0026#34;||||A||||1||||||||||O\u0026#34;_cr .;s str=str_\u0026#34;O|1|40045259602|0^00001^1^^S1^SC|^^^601^\\^^^1011^dec\\1012^400|R||20000630131236||||A||||1||||||||||O\u0026#34;_cr .s str=str_\u0026#34;C|1|I|comment1^comment2^comment3^comment4^comment5|G\u0026#34;_cr .s str=str_\u0026#34;L|1|N\u0026#34;_cr .d Send(labno,str) .k ^TMP($zn,$j,\u0026#34;ENQ\u0026#34;) .k ^TMP($zn,$j,\u0026#34;temlabnoInfo\u0026#34;) q //读取自动上传的标本 BUILD2 K ^TMP($zn,$j) s LabnoList=\u0026#34;\u0026#34; S AddDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s ^TMP(\u0026#34;MI\u0026#34;,1)=AddDate s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d .s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime,\u0026#34;\u0026#34;)) .s Labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) .//H 1 //每隔2S处理一个标本上传 .S SIMAck=$$BUILD3() .I SIMAck=0 D ..s err=##Class(MI.MachineUpload).SetSendFlag(mi,Labno,\u0026#34;S\u0026#34;,\u0026#34;\u0026#34;) //成功 .E D ..s err=##Class(MI.MachineUpload).SetSendFlag(mi,Labno,\u0026#34;F\u0026#34;,\u0026#34;\u0026#34;) //失败 q BUILD3() ; S episx=Labno,Labno=$P(Labno,\u0026#34;-\u0026#34;,1),suffix=\u0026#34;\u0026#34;,RetAck=1 s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q 1 s WorkGPMiDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR, \u0026#34;\u0026#34;)) i WorkGPMiDR=\u0026#34;\u0026#34; q 1 s RptOrder=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR, WorkGPMiDR,\u0026#34;\u0026#34;)) i RptOrder=\u0026#34;\u0026#34; q 1 s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR, WorkGPMiDR,RptOrder,\u0026#34;\u0026#34;)) i ReportDR=\u0026#34;\u0026#34; q 1 s EpisodeNo=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),8) i EpisodeNo=\u0026#34;\u0026#34; q 1 s epis=EpisodeNo d ScanOne^MI.MIF000(mi,Labno) ;创建上传化验项目列表 i \u0026#39;$D(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,Labno)) q 1 s tcx=\u0026#34;\u0026#34; s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,Labno,chl)) q:chl=\u0026#34;\u0026#34; d ..s tcx=tcx_\u0026#34;^^^\u0026#34;_$p(chl,\u0026#34;_\u0026#34;,1)_\u0026#34;/\\\u0026#34; s tcx=$e(tcx,1,$l(tcx)-1) s date=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s time=$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;) s str=\u0026#34;1H|\\^\u0026amp;|||H7600^1|||||host|TSDWN^REPLY|P|1\u0026#34;_cr s str=str_\u0026#34;P|1\u0026#34;_cr s str=str_\u0026#34;O|1|\u0026#34;_epis_\u0026#34;^^1^^|R1|\u0026#34; s str=str_tcx_\u0026#34;|R||\u0026#34;_date_time_\u0026#34;||||N||||||||^^^^||||||O\u0026#34;_cr s str=str_\u0026#34;L|1|N\u0026#34;_cr d Send(epis,str) Q 0 //给检验号赋仪器和位置号 SetTSMachine(mi,labno,rack,pos) n (mi,labno,rack,pos) s mi=$g(mi),labno=$g(labno),rack=$g(rack),pos=$g(pos) If $Data(^DHCSndLabNo(labno)) Set ^DHCSndLabNo(labno)=labno_\u0026#34;\\\u0026#34;_rack_\u0026#34;-\u0026#34;_pos_\u0026#34;\\\u0026#34; q ORDER ; create list of orders if exists ; ^DHCMIFLoadList(mi,\u0026#34;PEND\u0026#34;,flowno) 暂时存储上传医嘱列表 s ord=\u0026#34;\u0026#34; f s ord=$o(^DHCMIFLoadList(mi,\u0026#34;PEND\u0026#34;,ord)) q:ord=\u0026#34;\u0026#34; d .s rectemp=$g(^DHCMIFLoadList(mi,\u0026#34;PEND\u0026#34;,ord)) .s epis=ord .s (str,tcs,date,time)=\u0026#34;\u0026#34; .;化验项目列表 .f i=1:1:$l(rectemp,\u0026#34;,\u0026#34;) d ..s tc=$p(rectemp,\u0026#34;,\u0026#34;,i) ..q:tc=\u0026#34;\u0026#34; ..s tcs=tcs_\u0026#34;^^^\u0026#34;_tc_\u0026#34;/\\\u0026#34; .s tcs=$e(tcs,1,$l(tcs)-1) .;日期时间 .s date=$p($h,\u0026#34;/\u0026#34;,3)_$p($h,\u0026#34;/\u0026#34;,2)_$p($h,\u0026#34;/\u0026#34;,1) .s xx=$p($h,\u0026#34;,\u0026#34;,2),time=$p(xx,\u0026#34;:\u0026#34;,1)_$p(xx,\u0026#34;:\u0026#34;,2)_\u0026#34;00\u0026#34; .;s xx=$$extdate2^SSUTIL4($h),date=$p(xx,\u0026#34;/\u0026#34;,3)_$p(xx,\u0026#34;/\u0026#34;,2)_$p(xx,\u0026#34;/\u0026#34;,1) .;s xx=$$exttime^SSUTIL4($p($h,\u0026#34;,\u0026#34;,2)),time=$p(xx,\u0026#34;:\u0026#34;,1)_$p(xx,\u0026#34;:\u0026#34;,2)_\u0026#34;00\u0026#34; .s str=\u0026#34;1H|\\^\u0026amp;|||HOST^1|||||1-99999|TSDWN^REPLY|P|1\u0026#34;_cr .s str=str_\u0026#34;P|1\u0026#34;_cr .s str=str_\u0026#34;O|1|\u0026#34;_epis_\u0026#34;^ ^1^^|R1|\u0026#34; .s str=str_tcs_\u0026#34;|R||\u0026#34;_date_time_\u0026#34;||||N||||||||^^^^||||||O\u0026#34;_cr .s str=str_\u0026#34;L|1|N\u0026#34;_cr .d Send(epis,str) .s ^DHCMIFLoadList(mi,\u0026#34;TRAN\u0026#34;,epis)=$g(^DHCMIFLoadList(mi,\u0026#34;PEND\u0026#34;,epis)) ;保存已传输数据 .k ^DHCMIFLoadList(mi,\u0026#34;PEND\u0026#34;,epis) ;删除待传输数据 q Send(epis,str) ; send list of orders if exists h 0.5 ;w enq,*-3 d trace^MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) w enq,*-3 d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;1H\u0026lt;--M\u0026#34;) i $c(R)=enq q i $c(R)\u0026#39;=ack w eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q i $l(str)\u0026gt;240 d .s str1=$e(str,1,240) .s ret=$$SEND(str1,1) .s strS=$e(str,241,$l(str)) .i $l(strS)\u0026gt;240 d ..s str2=\u0026#34;2\u0026#34;_$e(strS,1,240) ..s ret=$$SEND(str2,1) ..s strS1=$e(strS,241,$l(strS)) ..i $l(strS1)\u0026gt;240 d ...s str3=\u0026#34;3\u0026#34;_$e(strS1,1,240) ...s ret=$$SEND(str3,1) ...s str4=\u0026#34;4\u0026#34;_$e(strS1,241,$l(strS1)) ...s ret=$$SEND(str4,0) ..e d ...s str3=\u0026#34;3\u0026#34;_$e(strS1,241,$l(strS1)) ...s ret=$$SEND(str3,0) .e d ..s str2=\u0026#34;2\u0026#34;_$e(str,241,$l(str)) ..s ret=$$SEND(str2,0) e d .s ret=$$SEND(str,0) ;f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q ;d trace^MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;2H\u0026lt;--M\u0026#34;) w eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q Sendold(epis,str) ; send list of orders if exists w enq,*-3 d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;1H\u0026lt;--M\u0026#34;) i $c(R)=enq q i $c(R)\u0026#39;=ack w eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q i $l(str)\u0026gt;241 d .s str1=$e(str,1,241) .s ret=$$SEND(str1,1) .s str2=\u0026#34;2\u0026#34;_$e(str,242,$l(str)) .s ret=$$SEND(str2,0) e d .s ret=$$SEND(str,0) w eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q SEND(str,flag) ; send string to instrument i flag=1 d .s str=str_etb .s chsum=$$CHSUM(str) e d .s str=str_etx .s chsum=$$CHSUM(str) w stx,str,chsum,cr,lf,*-3 d Trace^MI.MIF000(mi,str_chsum,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:6 r *R:1 i ($c(R)=ack)!($c(R)=eot) q i $c(R)=ack d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) q 0 i $c(R)=eot d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) q 0 i $c(R)=-1 w nak,*-3 d Trace^MI.MIF000(mi,R,\u0026#34;H\u0026lt;--M\u0026#34;) q 1 CHSUM(x) ; calculate check sum n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y) s z=$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#256\\16+1)_$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#16+1) q z ACK ; send \u0026#39;ack\u0026#39; to instrument w ack,*-3 d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q NEXTTRAY(tray) q tray ​​\n通过收到 ACK 发送多条数据 示例接口(贝克曼 DXH900) 标准的 ASTM 发送等收到 ACK 后继续回传下一条信息\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 MIFDXH800I(MachID) s MachID=$g(MachID) S ^TMPMACH10(MachID,104)=$H i \u0026#39;$l(MachID) q s ItemDeli=$li(^dbo.BTMIMachineParameterD(MachID),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(MachID),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(MachID),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(MachID),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(MachID),17) //端口号 //控制字符 s stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4),lf=$c(10),cr=$c(13),nak=$c(21) //s stx=\u0026#34;[\u0026#34;,etx=\u0026#34;]\u0026#34; S ^TMPMACH10(MachID,102)=$H i $$Start^MI.MIF000(MachID) q f d Main i $$Stop^MI.MIF000(MachID) q c Port q ///结果采集和数据分解 Main r *R:10 e d q .d ORDER i $c(R)\u0026#39;=enq q d Trace^MI.MIF000(MachID,\u0026#34;ENQ\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) d ACK s (Epis,Result,Date,Time,QC)=\u0026#34;\u0026#34; f r *R:10 q:$c(R)=eot q:R=-1 d .i $c(R)\u0026#39;=stx q .s Record=$$Read^MI.MIF000(MachID,\u0026#34;\u0026#34;,lf) q:\u0026#39;$l(Record) .d Trace^MI.MIF000(MachID,Record,\u0026#34;H\u0026lt;--M\u0026#34;) .d ACK .i $e(Record,2)=\u0026#34;C\u0026#34; d q ..//报警信息 ..s PoliceInfo=$p(Record,\u0026#34;|\u0026#34;,4) ..i $l(PoliceInfo),$d(^LISPolice(\u0026#34;DXH900\u0026#34;,PoliceInfo)) d ...s InputInfo=$g(^LISPolice(\u0026#34;DXH900\u0026#34;,PoliceInfo)) ...d Trace^MI.MIF000(MachID,PoliceInfo_\u0026#34;$$\u0026#34;_InputInfo,\u0026#34;报警信息\u0026#34;) ...try{s ret=##Class(MI.Special.Common).SaveAlarmInformation(MachID,Epis,InputInfo)}catch{} .i $e(Record,2)=\u0026#34;Q\u0026#34; d q ..//询问信息 ..s QEpis=$tr($p(Record,\u0026#34;|\u0026#34;,3),\u0026#34;!\u0026#34;) ..;d Trace^MI.MIF000(MachID,QEpis,\u0026#34;QEpis\u0026#34;) ..S ^TMPQUERY(MachID,1)=QEpis ..i $l(QEpis) s ^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,QEpis)=\u0026#34;\u0026#34; .i $e(Record,2)=\u0026#34;H\u0026#34; d q ..//结果头信息 ..d Last s (Epis,Result,Date,Time,QC)=\u0026#34;\u0026#34; .i $e(Record,2)=\u0026#34;P\u0026#34; d q ..//病人信息 .i $e(Record,2)=\u0026#34;O\u0026#34; d q ..s Epis=$tr($p($p(Record,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ..s QC=$tr($p(Record,\u0026#34;|\u0026#34;,12),\u0026#34; \u0026#34;) ..s:\u0026#39;$l(Epis) Epis=$tr($p($p(Record,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ..//判断是否是质控编号 ..//s QC=$$findQC^MIF000(mi,epis) .i $e(Record,2)=\u0026#34;R\u0026#34; d q ..//结果信息 ..s Chl=$tr($tr($p($p(Record,\u0026#34;|\u0026#34;,3),\u0026#34;!\u0026#34;,4),\u0026#34; \u0026#34;),\u0026#34;@\u0026#34;) ..//s ResStus=$tr($p($p(Record,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,11),\u0026#34; \u0026#34;) ..s Res=$p($tr($p(Record,\u0026#34;|\u0026#34;,4),\u0026#34; \u0026#34;),\u0026#34;!\u0026#34;,1) ..//i ResStus\u0026#39;=\u0026#34;F\u0026#34; q //判断结果状态 ..i $l(Chl),$l(Res) s Result=Result_Chl_ResultDeli_Res_ItemDeli .//绘图 .i $e(Record,2)=\u0026#34;M\u0026#34; d q ..//结果信息 ..s Chl=$tr($p($p(Record,\u0026#34;|\u0026#34;,3),\u0026#34;!\u0026#34;,4),\u0026#34; \u0026#34;) ..s Res=$P($tr($p(Record,\u0026#34;|\u0026#34;,4),\u0026#34; |\u0026#34;),\u0026#34;!\u0026#34;,1) ..s Chl=$p(Chl,\u0026#34;.\u0026#34;,1) ..i Chl=\u0026#34;WBC\u0026#34; d ...s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() ...s tret=tretObj.DrawImage(Epis,Res,MachID,\u0026#34;MI.MIFDXH800\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#WBCF.bmp#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.ImageDealDXH800,LIS.Mach.ImageDeal\u0026#34;) ...d Trace^MI.MIF000(MachID,tret,\u0026#34;绘图返回\u0026#34;) ..i Chl=\u0026#34;Plt\u0026#34; d ...s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() ...s tret=tretObj.DrawImage(Epis,Res,MachID,\u0026#34;MI.MIFDXH800\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#PLT.bmp#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.ImageDealDXH800,LIS.Mach.ImageDeal\u0026#34;) ...d Trace^MI.MIF000(MachID,tret,\u0026#34;绘图返回\u0026#34;) ..i Chl=\u0026#34;RBC\u0026#34; d ...s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() ...s tret=tretObj.DrawImage(Epis,Res,MachID,\u0026#34;MI.MIFDXH800\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#RBCH.bmp#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.ImageDealDXH800,LIS.Mach.ImageDeal\u0026#34;) ...d Trace^MI.MIF000(MachID,tret,\u0026#34;绘图返回\u0026#34;) ..i Chl=\u0026#34;5PD1\u0026#34; d ...s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() ...s tret=tretObj.DrawImage(Epis,Res,MachID,\u0026#34;MI.MIFDXH800\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#5PD1.bmp#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.ImageDealDXH800,LIS.Mach.ImageDeal\u0026#34;) ...d Trace^MI.MIF000(MachID,tret,\u0026#34;绘图返回\u0026#34;) ..i Chl=\u0026#34;NRBC1\u0026#34; d ...s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() ...s tret=tretObj.DrawImage(Epis,Res,MachID,\u0026#34;MI.MIFDXH800\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#NRBC1.bmp#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.ImageDealDXH800,LIS.Mach.ImageDeal\u0026#34;) ...d Trace^MI.MIF000(MachID,tret,\u0026#34;绘图返回\u0026#34;) .i $e(Record,2)=\u0026#34;L\u0026#34; d Last q d Trace^MI.MIF000(MachID,$s($c(R)=eot:\u0026#34;EOT\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) d ORDER q ///保存结果 Last ; file result if exist i $l(Epis),$l(Result) d Save^MI.MIF000(MachID,Epis,Result,Date,Time,QC) q ///上传项目 ORDER s date=$tr($zdt($p($h,\u0026#34;,\u0026#34;,1),3),\u0026#34;-\u0026#34;)_$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;) s ^TMPQUERY(MachID,2)=$d(^TMP($zn,$j)) i \u0026#39;$d(^TMP($zn,$j)) q ;d Trace^MI.MIF000(MachID,\u0026#34;准备上传,清除缓存\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) k ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,MachID) k ^TMPQUERY(MachID,4) s Epis=\u0026#34;\u0026#34; f s Epis=$o(^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,Epis)) q:Epis=\u0026#34;\u0026#34; d .d ScanOne^MI.MIF000(MachID,Epis) .;d PATDET(Epis) .s LSH=\u0026#34;\u0026#34; .s LSH=$$CHANGEEPIS(MachID,Epis) .d Trace^MI.MIF000(MachID,Epis,\u0026#34;Epis\u0026#34;) .s TCx=\u0026#34;\u0026#34;,Episx=Epis .s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,MachID,Epis,chl)) q:chl=\u0026#34;\u0026#34; d ..s TCx=TCx_\u0026#34;!!!\u0026#34;_chl .;s TCx=TCx_\u0026#34;\\\u0026#34; .i TCx[\u0026#34;CDR\u0026#34; s TCx=\u0026#34;!!!CDR\u0026#34; .s sam=\u0026#34;Sam\u0026#34; .s pat=\u0026#34;219!King!Eric!T\u0026#34; .s F=\u0026#34;F\u0026#34; .s FA=\u0026#34;Fairview!952-121-1123\u0026#34; .s ^TMPQUERY(MachID,3)=TCx .i $l(TCx) d ..s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;H|\\!~|||LISHOST|||||||P|LIS2-A|\u0026#34;_date ..s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;P|1||\u0026#34;_LSH ..;s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;O|1|\u0026#34;_Episx_\u0026#34;|\u0026#34;_Pos_\u0026#34;|\u0026#34;_tcx_\u0026#34;|R||||||A||||Whole blood|||||||||||\u0026#34; ..;s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;O|1|\u0026#34;_Episx_\u0026#34;||\u0026#34;_TCx_\u0026#34;|R|\u0026#34;_date_\u0026#34;|\u0026#34;_date_\u0026#34;|||\u0026#34;_sam_\u0026#34;|A||||Whole blood|\u0026#34;_pat_\u0026#34;|||||||||\u0026#34;_F_\u0026#34;||\u0026#34;_FA ..s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;O|1|\u0026#34;_Episx_\u0026#34;||\u0026#34;_TCx_\u0026#34;|R|\u0026#34;_date_\u0026#34;|\u0026#34;_date_\u0026#34;|||\u0026#34;_sam_\u0026#34;|A||||Whole blood\u0026#34; ..s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;L|1|N\u0026#34; .e d ..s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;Q|1|^\u0026#34;_Epis_\u0026#34;||^^^ALL||||||||X\u0026#34; k ^TMP($zn,$j,\u0026#34;ENQ\u0026#34;) k ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,MachID) q:\u0026#39;$d(^TMPTMIF(MachID,22)) m ^TMPQUERY(MachID,4)=^TMPTMIF(MachID,22) d Send k ^TMPTMIF(MachID,22) q ///病人基本信息 PATDET(Epis) ; set patient details record s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;P|1|\u0026#34;_+$h_\u0026#34;||||||U||||||||||||||||||||||||||\u0026#34; q ///发送检测项目 Send w enq,*-3 d Trace^MI.MIF000(MachID,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q d Trace^MI.MIF000(MachID,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) i $c(R)=enq q i $c(R)\u0026#39;=ack w eot,*-3 d Trace^MI.MIF000(MachID,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q //q:$$SEND(\u0026#34;1H|\\^\u0026amp;\u0026#34;) ;q:$$SEND(\u0026#34;1H|\\^\u0026amp;|||LIS||||||||LIS2-A|\u0026#34;_date) s x=\u0026#34;\u0026#34; f FRAME=1:1 s x=$O(^TMPQUERY(MachID,4,x)) q:x=\u0026#34;\u0026#34; q:$$SEND(FRAME#8_^TMPQUERY(MachID,4,x)) w eot,*-3 d Trace^MI.MIF000(MachID,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) k ^TMPTMIF(MachID,22) q ///发送字符串 SEND(str) s str=str_cr_etx,chsum=$$CHSUM(str) w stx,str,chsum,cr,lf,*-3 d Trace^MI.MIF000(MachID,str_chsum,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:6 r *R:1 i ($c(R)=ack)!($c(R)=eot) q i $c(R)=ack d Trace^MI.MIF000(MachID,\u0026#34;ACK\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) q 0 i $c(R)=eot d Trace^MI.MIF000(MachID,\u0026#34;EOT\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) q 0 d Trace^MI.MIF000(MachID,R,\u0026#34;H\u0026lt;--M\u0026#34;) q 1 ///生成校验码 CHSUM(x) n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y) s z=$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#256\\16+1)_$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#16+1) q z ///发送回应符到仪器 ACK w ack,*-3 d Trace^MI.MIF000(MachID,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q CHANGEEPIS(mi,epis) //根据流水号找检测号 S DATA=$zd($h,8) s mi=$g(mi),epis=$g(epis) s VisitNumberReportDR=\u0026#34;\u0026#34; b ;//^dbo.RPVisitNumberReportI(\u0026#34;IndexEpisodeNo\u0026#34;,TransmitDate, WorkGroupMachineDR, EpisodeNo) i \u0026#39;$l(mi) q epis i \u0026#39;$l(epis) q epis s WorkGroupMachineDR=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) i \u0026#39;$l(WorkGroupMachineDR) q epis s VisitNumberReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAcceptDate\u0026#34;,WorkGroupMachineDR,DATA,\u0026#34; \u0026#34;_epis,\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberReportDR) q epis s LSH=$lg($g(^dbo.RPVisitNumberReportD(VisitNumberReportDR)),8) i \u0026#39;$l(LSH) q epis B ;LSH Q LSH //// w $$GetName^MI.MIFBECKImage(70,3003497773) //// 取病人姓名按拼音输出,\u0026#34;^\u0026#34;分隔 GetName(MachID,epis) s epis = $g(epis),MachID=$g(MachID) s SurName=\u0026#34;\u0026#34; i $l(epis)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(epis),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s SurName=$lg(RPVisitNumberData,13) i SurName\u0026#39;=\u0026#34;\u0026#34; s SurName=$$GetCNCODE(SurName,3,\u0026#34;^\u0026#34;) q SurName /// Description:返回汉字的编码信息 /// Input：\tHANZI:汉字 /// FLAG:返回何种编码(1:ASC码,2:汉字,3:拼音,4:首拼,5:四角码6:五笔码7:区位码8:笔划数9:郑码) /// SPLIT:分割符(可以为空) /// Output： /// 非0:返回编码信息:ASC码^汉字^拼音^首拼^四角码^五笔码^区位码^笔划数^郑码 /// 0：未找到编码信息 /// CreatDate:2011-06-08 /// w ##class(web.DHCINSUPort).GetCNCODE(\u0026#34;东华\u0026#34;,4,\u0026#34;^\u0026#34;) /// w ##class(web.DHCINSUPort).GetCNCODE(\u0026#34;东华\u0026#34;,4,\u0026#34;\u0026#34;) GetCNCODE(HANZIS,FLAG, SPLIT) s Rtnstr=\u0026#34;0\u0026#34; q:$g(HANZIS)=\u0026#34;\u0026#34; Rtnstr s Rtnstr=\u0026#34;\u0026#34; f i=1:1:$l(HANZIS) d .s HANZI=$EXTRACT(HANZIS,i) .s ASCIICODE=$ASCII(HANZI) .i $D(^DHCCharacterEncoding(\u0026#34;0\u0026#34;,\u0026#34;ASCII\u0026#34;,ASCIICODE))\u0026#39;=0 d ..s rowid=$o(^DHCCharacterEncoding(\u0026#34;0\u0026#34;,\u0026#34;ASCII\u0026#34;,ASCIICODE,\u0026#34;\u0026#34;)) ..s tmpstr=\u0026#34;\u0026#34; ..s:FLAG=\u0026#34;\u0026#34; tmpstr=$g(^DHCCharacterEncoding(rowid)) ..s:FLAG\u0026#39;=\u0026#34;\u0026#34; tmpstr=$p(^DHCCharacterEncoding(rowid),\u0026#34;^\u0026#34;,FLAG) ..i Rtnstr=\u0026#34;\u0026#34; d ...s Rtnstr=tmpstr ..e d ...s Rtnstr=Rtnstr_SPLIT_tmpstr .e d ..s:Rtnstr=\u0026#34;\u0026#34; Rtnstr=\u0026#34;?\u0026#34; ..s Rtnstr=Rtnstr_SPLIT_\u0026#34;?\u0026#34; q Rtnstr ​​\n通过文件请求双向 上机生成请求文件请求 示例代码(爱康 Aigel400) 仪器上机扫条码后生成请求文件，通过监听读取文件，解析数据后回传文件，此处需特殊解析设置。将仪器配置为主动上传模式，解析数据时，将主动上传信息从 C 变为 X，QryLabInfo 循环读取为 X 的标本，从而实现文件双向。\n双向比较特殊，需要配置两台仪器，一台用于接收，一台用于双向上传 */ /// [{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;Drect\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;3000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;D:\\\\OUTPUT\\\\\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFAigel400\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;.txt\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoMAll,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UpPara\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;MachID\u0026#34;:\u0026#34;41\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;Drect\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;3000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;D:\\\\Aigel400\\\\Data\\\\\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFAigel400\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;regexImport.dat\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoMAll,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;,\u0026#34;UpPara\u0026#34;:\u0026#34;D:\\\\Aigel400\\\\Data\\\\\u0026#34;}] Class MI.MIFAigel400 Extends %RegisteredObject { /// H|\\^\u0026amp;|||Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|||||||P|4|20230503095046[13][10]P|1|12|[13][10]O|1|12^^^^^^|69449292212011757621|^^^ABO/RhD血型定型试剂卡|R|20230503094655||||||||||||||||||Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|C|[13][10]R|1|^^^ABO/RhD血型定型试剂卡|-A=-^-B=4+^-D=3+^control=-^Ac=3+^Bc=-^B/Rh+|||N||F||A1|20230503091546|20230503094655|Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|[13][10]L|1|N[13][10] /// H|\\^\u0026amp;|||Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|||||||P|4|20230602161519[13][10]P|1|102|[13][10]O|1|102^^^^^^|69449292211011587452|^^^抗人球蛋白检测卡(抗筛)|R|20230602094910||||||||||||||||||Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|F|[13][10]R|1|^^^抗人球蛋白检测卡(抗筛)|IgG=-^C3d=-^Ctl=-^-|||N||F||A1|20230602091802|20230602094910|Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|[13][10]L|1|N[13][10] /// d ##class(MI.MIFAigel300).fileMTHD(28,\u0026#34;H|\\^\u0026amp;|||Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|||||||P|4|20230503095046[13][10]P|1|12|[13][10]O|1|12^^^^^^|69449292212011757621|^^^ABO/RhD血型定型试剂卡|R|20230503094655||||||||||||||||||Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|C|[13][10]R|1|^^^ABO/RhD血型定型试剂卡|-A=-^-B=4+^-D=3+^control=-^Ac=3+^Bc=-^B/Rh+|||N||F||A1|20230503091546|20230503094655|Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|[13][10]L|1|N[13][10]\u0026#34;) ClassMethod fileMTHD(mi, record, epis, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q s (sample,epis,result,date,time,QC)=\u0026#34;\u0026#34; i \u0026#39;$l(record) q \u0026#34;\u0026#34; d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) i P3\u0026#39;[\u0026#34;Import\u0026#34; d Result e d Upload q \u0026#34;\u0026#34; Upload s AllEpis=\u0026#34;\u0026#34; f i=1:1:$l(record,\u0026#34;[13][10]\u0026#34;) d .s rec=$p(record,\u0026#34;[13][10]\u0026#34;,i) .s rtype=$e(rec,1) .i rtype=\u0026#34;H\u0026#34; d ..s ASTMH=rec ..d Trace^MI.MIF000(mi,ASTMH,\u0026#34;ASTMH\u0026#34;) ..s ^LISAigel400(\u0026#34;DATA\u0026#34;)=ASTMH .i rtype=\u0026#34;Q\u0026#34; d ..s epis=$p(rec,\u0026#34;|\u0026#34;,3) ..i \u0026#39;$l(AllEpis) s AllEpis=epis ..e s AllEpis=AllEpis_\u0026#34;^\u0026#34;_epis i $l(AllEpis) d .s ^LISAigel400(\u0026#34;Epis\u0026#34;,1)=AllEpis d Trace^MI.MIF000(mi,AllEpis,\u0026#34;AllEpis\u0026#34;) s ^LISAigel400(\u0026#34;OutFlag\u0026#34;)=1 ;d ##Class(MI.MachineUpload).SetSendFlag(mi,\u0026#34;9000000256\u0026#34;,\u0026#34;X\u0026#34;,\u0026#34;\u0026#34;) q \u0026#34;\u0026#34; Result f i=1:1:$l(record,\u0026#34;[13][10]\u0026#34;) d .s rec=$p(record,\u0026#34;[13][10]\u0026#34;,i) .s rtype=$e(rec,1) .i rtype=\u0026#34;O\u0026#34; d ..s epis=$P($P(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,1) .i rtype=\u0026#34;R\u0026#34; d ..s TestSet=$p($P(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,4) ..i TestSet[\u0026#34;ABO\u0026#34; d ...s allres=$p($P(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,9) ...s code1=\u0026#34;ABO\u0026#34; s res1=$P(allres,\u0026#34;/\u0026#34;,1)_\u0026#34;型\u0026#34; ...s code2=\u0026#34;Rh\u0026#34; s res2=$p(allres,\u0026#34;/\u0026#34;,2) ...i res2[\u0026#34;+\u0026#34; s res2=\u0026#34;阳性\u0026#34; ...i res2[\u0026#34;-\u0026#34; s res2=\u0026#34;阴性\u0026#34; ...s result=code1_\u0026#34;\\\u0026#34;_res1_\u0026#34;,\u0026#34;_code2_\u0026#34;\\\u0026#34;_res2_\u0026#34;,\u0026#34; ..i TestSet[\u0026#34;交叉配血\u0026#34; d ...s code1=\u0026#34;JCPX\u0026#34; s res1=$p($P(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,3) ...i res1=\u0026#34;+\u0026#34; s res1=\u0026#34;阳性\u0026#34; ...i res1=\u0026#34;-\u0026#34; s res1=\u0026#34;阴性\u0026#34; ...s result=code1_\u0026#34;\\\u0026#34;_res1_\u0026#34;,\u0026#34; ..i TestSet[\u0026#34;不规则抗体筛查\u0026#34; d ...s code1=\u0026#34;KRQDB\u0026#34; s res1=$p($P(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,3) ...i res1[\u0026#34;=\u0026#34; d ....s res1=$p(res1,\u0026#34;=\u0026#34;,2) ...i res1=\u0026#34;+\u0026#34; s res1=\u0026#34;阳性\u0026#34; ...i res1=\u0026#34;-\u0026#34; s res1=\u0026#34;阴性\u0026#34; ...s result=code1_\u0026#34;\\\u0026#34;_res1_\u0026#34;,\u0026#34; d Trace^MI.MIF000(mi,epis_\u0026#34;$$\u0026#34;_result,\u0026#34;AllResult\u0026lt;--M\u0026#34;) i $l(epis),$l(result) d ##Class(MI.Common.MIFBase).Save(mi, epis, result, date, time, QC) q \u0026#34;\u0026#34; } ClassMethod SaveImageMTHD(mi, epis, ImageClass, FileName, FullName, SaveImageRetName, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //通过OtherPara配置取图的在这里通过epis和ImageClass的图片名字提取出流水号和图片类别 s mi=$g(mi) s epis=$g(epis) s ImageClass=$g(ImageClass) s FileName=$g(FileName) s FullName=$g(FullName) s SaveImageRetName=$g(SaveImageRetName) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; d ##Class(MI.Common.MIFBase).Trace(mi,epis_\u0026#34;:\u0026#34;_ImageClass_\u0026#34;:\u0026#34;_FileName,\u0026#34;H\u0026lt;--M\u0026#34;) s (ReceiveDate, ImageOrder, Caption, DisplayRatio, Height, Width, Sequence)=\u0026#34;\u0026#34; //加上当前时间，防止浏览器缓存 s FileName=FileName_\u0026#34;?\u0026#34;_$p($h,\u0026#34;,\u0026#34;,2) //OtherPara用^分隔第四位指定SaveImageRetName的话在这里改FileName为新名称。同时让方法返回新图片名字 s NewFileName=\u0026#34;\u0026#34; i SaveImageRetName=\u0026#34;SaveImageRetName\u0026#34; d .//图片新名字 .s NewFileName=epis_\u0026#34;-\u0026#34;_ImageClass_\u0026#34;-\u0026#34; .//路径新名字 .s NewPathName=\u0026#34;\u0026#34; .s SPLen=$l(FileName,\u0026#34;/\u0026#34;) .f ii=1:1:SPLen d ..i ii\u0026lt;SPLen d ...s NewPathName=NewPathName_$p(FileName,\u0026#34;/\u0026#34;,ii)_\u0026#34;/\u0026#34; ..i ii=SPLen d ...s NewFileName=NewFileName_$p(FileName,\u0026#34;/\u0026#34;,ii) .s NewPathName=NewPathName_NewFileName .s FileName=NewPathName //最后返回NewFileName s ret=##Class(MI.Common.MachineResult).SaveImage(ReceiveDate, epis, ImageClass, ImageOrder, FileName, mi, Caption, DisplayRatio, Height, Width, Sequence) //返回值控制图片名称模式 i SaveImageRetName=\u0026#34;SaveImageRetName\u0026#34; d .s ret=NewFileName q ret } // w ##class(MI.XN9000).GetFtpMTHD(\u0026#34;7\u0026#34;) ClassMethod GetFtpMTHD(mi, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //文件服务模式必须改的地方，老的FTP模式这么改了也没问题，所以建议都这样 s mi=$g(mi) q ##Class(MI.Common.MIFBase).GetMiFtpPath(mi) } /// Creator： 查询患者信息，监听配置上传前处理类后会定时调用这个query查询数据进行上传操作 /// CreatDate： 20140919 /// Description:： /// Table： /// Input： mi：仪器主键 /// Output： 仪器信息 /// Return： 仪器信息 /// Others： Query QryLabInfo(mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Query(ROWSPEC = \u0026#34;labno,labnoInfo,patInfo\u0026#34;) { } /// Query的执行方法 /// d ##class(%ResultSet).RunQuery(\u0026#34;MI.MIFAigel400\u0026#34;,\u0026#34;QryLabInfo\u0026#34;,\u0026#34;41\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) ClassMethod QryLabInfoExecute(ByRef qHandle As %Binary, mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Status { Set repid=$i(^CacheTemp) Set ind=1 s mi=$g(mi),flag=$g(flag) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; s LabnoList=\u0026#34;\u0026#34; s VisitNumberDR=\u0026#34;\u0026#34; s AddDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s DeleteFlag=0 i $d(^LISAigel400(\u0026#34;Epis\u0026#34;,1)) d .s DeleteFlag=1 .b ;MiUploadDR .s labno=$g(^LISAigel400(\u0026#34;Epis\u0026#34;,1)) .;s EpisNo=$$getEpis^MI.MIF000(labno,mi) .;i \u0026#39;$l(EpisNo) q .i \u0026#39;$l(labno) q .//测试类型0：文本，1：数据库 .s TestType=\u0026#34;0\u0026#34; .i TestType=\u0026#34;0\u0026#34; d ..//文本双向上传开始****************************************************** ..//控制输出文本的内容 ..s txtInfo=..GetLabnoInfo(mi,labno) ..;s filename=\u0026#34;L\u0026#34;_$e($zd($p($h,\u0026#34;,\u0026#34;,1),8),3,8)_\u0026#34;_\u0026#34;_labno_\u0026#34;.txt\u0026#34; ..s filename=\u0026#34;Servers.dat\u0026#34; ..s labno1=$p(labno,\u0026#34;^\u0026#34;,1) ..s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo(filename,txtInfo,labno1,0,\u0026#34;\u0026#34;) ..d Trace^MI.MIF000(mi,txtInfo,\u0026#34;上传信息\u0026#34;) ..d OutputRow ..//文本双向上传结束****************************************************** i DeleteFlag=1 k ^LISAigel400(\u0026#34;Epis\u0026#34;,1) Set qHandle=$lb(0,repid,0) Quit $$$OK OutputRow Set ColFields=\u0026#34;labno,labnoInfo,patInfo\u0026#34; Set ^CacheTemp(repid,ind)=##Class(LIS.Util.Common).TransListNull(Data,ColFields) Set ind=ind+1 quit } ClassMethod QryLabInfoClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set repid=$LIST(qHandle,2) Kill ^CacheTemp(repid) Quit $$$OK } ClassMethod QryLabInfoFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set AtEnd=$LIST(qHandle,1) Set repid=$LIST(qHandle,2) Set ind=$LIST(qHandle,3) Set ind=$o(^CacheTemp(repid,ind)) If ind=\u0026#34;\u0026#34; { Set AtEnd=1 Set Row=\u0026#34;\u0026#34; } Else { Set Row=^CacheTemp(repid,ind) } s qHandle=$lb(AtEnd,repid,ind) Quit $$$OK } /// w ##Class(MI.MIFAigel400).GetLabnoInfo(41,\u0026#34;9000000256^9000000258\u0026#34;) ClassMethod GetLabnoInfo(mi, labno) As %String { s mi=$g(mi),labno=$g(labno) d Trace^MI.MIF000(mi,labno,\u0026#34;labno\u0026#34;) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; s tcx=\u0026#34;\u0026#34; s ASTMH=$g(^LISAigel400(\u0026#34;DATA\u0026#34;)) s (ASTMP,ASTMO,ASTMPO)=\u0026#34;\u0026#34; for i=1:1:$l(labno,\u0026#34;^\u0026#34;) d .s labnoi=$p(labno,\u0026#34;^\u0026#34;,i) .s ASTMP=\u0026#34;P|1|\u0026#34;_labnoi_\u0026#34;|\u0026#34; .s ASTMO=$$GetASTMO(mi,labnoi) .s ASTMPO=ASTMPO_ASTMP_\u0026#34;[13]\u0026#34;_ASTMO_\u0026#34;[13]\u0026#34; s ASTML=\u0026#34;L|1|N\u0026#34; i $l(ASTMP,ASTMO) d .s tcx=ASTMH_\u0026#34;[13]\u0026#34;_ASTMPO_ASTML q tcx GetASTMO(mi,VisitNumber) s patInfo=..GetPatInfo(mi,VisitNumber) s PatName=$p(patInfo,\u0026#34;,\u0026#34;,10) //获取项目通道号 d ScanOne^MI.MIF000(mi,VisitNumber) s ASTMO=\u0026#34;\u0026#34; s str=\u0026#34;\u0026#34; s Num=0 s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,VisitNumber,chl)) q:chl=\u0026#34;\u0026#34; d .s Num=Num+1 .s str=\u0026#34;O|\u0026#34;_Num_\u0026#34;|\u0026#34;_VisitNumber_\u0026#34;^\u0026#34;_PatName_\u0026#34;^^^^|||^^^^\u0026#34;_chl .i \u0026#39;$l(ASTMO) s ASTMO=str .e s ASTMO=ASTMO_\u0026#34;[13]\u0026#34;_str q ASTMO } /// w ##Class(MI.MIFKRD).GetLabnoInfo(22,\u0026#34;9000000253\u0026#34;) ClassMethod GetLabnoInfoBak(mi, labno) As %String { s OutFlag=$g(^LISAigel400(\u0026#34;OutFlag\u0026#34;)) s tcx=\u0026#34;\u0026#34; i OutFlag=1 d .s ASTMH=$g(^LISAigel400(\u0026#34;DATA\u0026#34;)) .s ASTMP=\u0026#34;P|1|001\u0026#34; .s ASTMO1=\u0026#34;O|1|001^测试^^^^|||^^^^ABO/RhD血型抗原检测卡\u0026#34; .s ASTMO2=\u0026#34;O|2|001^测试^^^^|||^^^^ABO正反定型及Rh(D/C/E)血型检测卡\u0026#34; .s ASTMO3=\u0026#34;O|3|001^测试^^^^|||^^^^抗人球蛋白检测卡(IgG+C3d)不规则抗体筛查\u0026#34; .s ASTMO4=\u0026#34;O|1|001^测试^^^^|||^^^^O|4|001^测试^^^^|||^^^^抗人球蛋白检测卡(抗IgG+C3d)交叉配血\u0026#34; .s ASTMO5=\u0026#34;O|1|001^测试^^^^|||^^^^Rh血型抗原检测卡\u0026#34; .s ASTML=\u0026#34;L|1|N\u0026#34; .s tcx=ASTMH_\u0026#34;[13]\u0026#34;_ASTMP_\u0026#34;[13]\u0026#34;_ASTMO1_\u0026#34;[13]\u0026#34;_ASTMO2_\u0026#34;[13]\u0026#34;_ASTMO3_\u0026#34;[13]\u0026#34;_ASTMO4_\u0026#34;[13]\u0026#34;_ASTMO5_\u0026#34;[13]\u0026#34;_ASTML q tcx s mi=$g(mi),labno=$g(labno) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; //获取项目通道号 d ScanOne^MI.MIF000(mi,labno) s tcx=\u0026#34;\u0026#34; s str=\u0026#34;\u0026#34; s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) q:chl=\u0026#34;\u0026#34; d .s str=str_chl_\u0026#34;[9]\u0026#34; s tcx=labno_\u0026#34;[9]\u0026#34;_str q tcx } /// w ##Class(MI.MIFLISMonitorTest).GetPatInfo(6,1001367) ClassMethod GetPatInfo(mi, labno) As %String { s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$lg(RPVisitNumberData,3) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),3) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$lg(RPVisitNumberData,28) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; s Patna=PatName ;病人姓名 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode q RetString } /// 监听做上传操作后调用改方法设置标本上传表状态 ClassMethod SaveSDFMTHD(mi, labno, epis, filename, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi),labno=$g(labno),epis = $g(epis),filename=$g(filename) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q s ret=##Class(MI.MachineUpload).SetSendFlag(mi,labno,\u0026#34;S\u0026#34;,filename) q } } 私有协议接口双向 类 ASTM 双向回复 ACK 示例接口(万泰 Wan200) W1N1111222222222222222200334S555555556666abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij 2 1141123\nmi) s mi=$g(mi) S ^TMPMACH10(mi,104)=$H i \u0026#39;$l(mi) q s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),17) //端口号 //控制字符 SET $ZTRAP=\u0026#34;ErrHandler\u0026#34; S iERR=0 s stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4) s lf=$c(10),cr=$c(13),nak=$c(21),(result,epis)=\u0026#34;\u0026#34;,etb=$c(23) S ^TMPMACH10(mi,102)=$H i $$Start^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q c Port q ErrHandler h 10 d Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) s iERR=+$g(iERR)+1 i iERR\u0026gt;30 s ret=$$Stop^MI.MIF000(mi) Q Main r *R:10 e d q .d BUILD i $c(R)=enq d .s record1=\u0026#34;\u0026#34; .d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) .d ACK .f r *R:10 q:$c(R)=eot d ..i $c(R)\u0026#39;=stx q ..s record=$$Read^MI.MIF000(mi,\u0026#34;\u0026#34;,etx) q:\u0026#39;$l(record) ..d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) ..d ACK ..s (sample,epis,surname,result,date,time,QC)=\u0026#34;\u0026#34; ..//\u0026#34;D1N15 15 xx500015S 1 1 3975631111.05 12016121020170223165831\u0026#34;_$C(3) ..s Type=$e(record,1) ..//请求 ..i Type=\u0026#34;R\u0026#34; d q ...s epis=$tr($e(record,4,19),\u0026#34; \u0026#34;) ...i $l(epis) s ^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,epis)=record ..//结果 D1N7008□□11□□□□□□□□□□□□□□□800383S□□□□□□□□1□□□T□□□□□ ..// D1N7001□□□1□□□□□□900023407700382S□□□□□□□□1□□□N□□□□□□□□□□□□□ ..i Type=\u0026#34;D\u0026#34; d q ...s ResultType=$e(record,3) ...i ResultType=\u0026#34;C\u0026#34; d ....s epis=$tr($e(record,8,16),\u0026#34; \u0026#34;) ...e d ....s epis=$tr($e(record,17,27),\u0026#34; \u0026#34;) ...s code=$tr($e(record,126,128),\u0026#34; \u0026#34;) ...i code=28 s code=$tr($e(record,45,46),\u0026#34; \u0026#34;)_code ...s res=$tr($e(record,137,142),\u0026#34; \u0026#34;) ...;try{s res1=##class(MI.Special.JudgeResult).IsYang(mi,epis,code,res)}catch{s res1=\u0026#34;\u0026#34;} ...s PoliceInfo=$e(record,157,172) ...try{s ret=$$GetPolice(PoliceInfo)}catch{} ...s resFuHao=\u0026#34;\u0026#34; ...i $d(^LISCaris200(\u0026#34;Data\u0026#34;,43)) s resFuHao=\u0026#34;\u0026lt;\u0026#34; ...i $d(^LISCaris200(\u0026#34;Data\u0026#34;,42)) s resFuHao=\u0026#34;\u0026gt;\u0026#34; ...k ^LISCaris200(\u0026#34;Data\u0026#34;) ...i $l(resFuHao) s res=resFuHao_res ...i $l(code),$l(res) s result=result_code_$c(92)_res_$c(92)_res1_$c(44) ...d Trace^MI.MIF000(mi,epis_\u0026#34;$$\u0026#34;_result,\u0026#34;Result\u0026#34;) ...i $l(epis),$l(result) d Save^MI.MIF000(mi,epis,result,date,time,QC) .d Trace^MI.MIF000(mi,$s($c(R)=eot:\u0026#34;EOT\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) .d BUILD q GetPolice(PoliceInfo) s str=$$scale(PoliceInfo,\u0026#34;16\u0026#34;,\u0026#34;2\u0026#34;) k ^LISCaris200(\u0026#34;Data\u0026#34;) s strLong=$l(str) f i=1:1:strLong d .s stri=$e(str,i) .i stri=1 d ..s ^LISCaris200(\u0026#34;Data\u0026#34;,strLong+1-i)=1 q \u0026#34;\u0026#34; /// 进制转换，将snum从scale1进制转换为scale2进制 scale(snum, scale1, scale2) // 转十进制 s snum=$g(snum) s tnum=0 s numlong=$l(snum) f i=1:1:$L(snum) d .s numi=$e(snum,i) .s numi=$$Sixteen2Ten(numi) .s tnum=tnum+(numi*(scale1**(numlong-i))) // 转scale2进制 s tnum=$g(tnum) s num=\u0026#34;\u0026#34; s GoTo=1 while (GoTo=1){ s pnum1=tnum s tnum=$p(tnum/scale2,\u0026#34;.\u0026#34;,1) s pnum2=pnum1#scale2 s pnum2=$$Ten2Sixteen(pnum2) i tnum\u0026lt;scale2 d .s num=tnum_pnum2_num .s GoTo=0 e s num=pnum2_num if (tnum=0)||\u0026#39;$l(tnum) s GoTo=0 } q num Ten2Sixteen(pnum2) i pnum2=10 s pnum2=\u0026#34;A\u0026#34; i pnum2=11 s pnum2=\u0026#34;B\u0026#34; i pnum2=12 s pnum2=\u0026#34;C\u0026#34; i pnum2=13 s pnum2=\u0026#34;D\u0026#34; i pnum2=14 s pnum2=\u0026#34;E\u0026#34; i pnum2=15 s pnum2=\u0026#34;F\u0026#34; q pnum2 Sixteen2Ten(numi) i (numi=\u0026#34;A\u0026#34;)||(numi=\u0026#34;a\u0026#34;) s numi=10 i (numi=\u0026#34;B\u0026#34;)||(numi=\u0026#34;b\u0026#34;) s numi=11 i (numi=\u0026#34;C\u0026#34;)||(numi=\u0026#34;c\u0026#34;) s numi=12 i (numi=\u0026#34;D\u0026#34;)||(numi=\u0026#34;d\u0026#34;) s numi=13 i (numi=\u0026#34;E\u0026#34;)||(numi=\u0026#34;e\u0026#34;) s numi=14 i (numi=\u0026#34;F\u0026#34;)||(numi=\u0026#34;f\u0026#34;) s numi=15 q numi //W1N11112222222222222222aa\u0026#34; BUILD i \u0026#39;$d(^TMP($zn)) q i \u0026#39;$d(^TMP($zn,$j)) q s labno=\u0026#34;\u0026#34; f s labno=$o(^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,labno)) q:labno=\u0026#34;\u0026#34; d .d ScanOne^MI.MIF000(mi,labno) .s tcx=\u0026#34;\u0026#34;,tcNum=0 .s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) q:chl=\u0026#34;\u0026#34; d ..s AutoDil=1 ///自动稀释倍数 ..i $l(chl)=1 s tcx=tcx_\u0026#34; \u0026#34;_chl_AutoDil ..i $l(chl)=2 s tcx=tcx_\u0026#34; \u0026#34;_chl_AutoDil ..i $l(chl)=3 s tcx=tcx_chl_AutoDil ..s tcNum=tcNum+1 .//组串 .s tStr=$g(^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,labno)) .s TNUM=$e($p($h,\u0026#34;,\u0026#34;,2),2,5) . .//\u0026#34;W1N1111222222222222222200334S555555556666abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij 2 1141123\u0026#34; .s str=\u0026#34;W1N\u0026#34;_TNUM_$e(tStr,4,19)_\u0026#34; S 1 \u0026#34; .s Commend=\u0026#34; \u0026#34; .//i $l(tcNum)=1 s str=str_Commend_\u0026#34; \u0026#34;_tcNum .//i $l(tcNum)=2 s str=str_Commend_tcNum .s str=str_Commend_\u0026#34; \u0026#34;_tcNum_tcx .d Send(str) k ^TMP($zn,$j,\u0026#34;ENQ\u0026#34;) q Send(str) ; send list of orders if exists w enq,*-3 d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) i $c(R)=enq q i $c(R)\u0026#39;=ack w eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q q:$$SEND(str) w eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q SEND(str) ; send string to instrument s str=str,chsum=$$CHSUM(str_etx) w stx,str,etx,chsum,*-3 d Trace^MI.MIF000(mi,str_chsum,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:6 r *R:1 i ($c(R)=ack)!($c(R)=eot) q i $c(R)=ack d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) q 0 i $c(R)=eot d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) q 0 d Trace^MI.MIF000(mi,R,\u0026#34;H\u0026lt;--M\u0026#34;) q 1 CHSUM(x) ; calculate check sum n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y) s z=$zh(z) //转16进制 i $l(z)=3 s z=\u0026#34;0\u0026#34;_z q z aa(val) s ret = \u0026#34;\u0026#34; f j=1:1:$l(val) d .s ascii = $a($e(val,j)) .if ascii\u0026lt;16 set ret = ret_\u0026#34;0\u0026#34;_$zh(ascii) .else set ret = ret_$zh(ascii) q ret ACK ; send \u0026#39;ack\u0026#39; to instrument w ack,*-3 d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q NEXTTRAY(tray) q tray ​​\n​​\n​​\n安图协议 示例接口(安图 2000) {10,0,[S]41,1,0,[S]0,[S]BL07,3,[S]100,1,[S]112,1,[S]113,1}\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 MIFAUTOLUMOA2000(mi) ///仪器名称:\t全自动化学发光测定仪 ///仪器型号:\tA2000 ///仪器厂商:\tAutoLumo ///通信协议:\t自定义V0.07 ///交互方式:\t双向 ///接 口:\tRS232 ///编 写 者:\twwh ///编写日期:\t2015-11-05 ///备 注:\t仪器配置:系统设置--\u0026gt;LIS通信设置 ///\t仪器也可读取文件,文件路径log/LisData/,文件内容与通信协议中一致 ///接口版本:\tV0.0.1 ///更新日志: ///-1.更新日期: ///---更 新 者: ///---更新备注: s mi=$g(mi) i \u0026#39;$l(mi) q s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 //控制字符 S stx=$C(2),etx=$C(3),ack=$C(6),enq=$C(5),eot=$C(4),etb=$C(23) S sb=$C(11),eb=$C(28),cr=$C(13) S lf=$C(10),nak=$C(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 s ^TMPMACHDATA1(mi,10)=mi S leftBrace=\u0026#34;{\u0026#34;,rightBrace=\u0026#34;}\u0026#34; i $$Start^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q s ^TMPMACH10(mi,50)=$h c Port q /* S mi=$G(mi) Q:\u0026#39;$L(mi) Q:$$select^LVBMIMP(mi) F j=1:1:PLIST { S @(\u0026#34;par\u0026#34;_j)=PLIST(j) } S mi1=$P($G(par36),\u0026#34;,\u0026#34;,1) S stx=$C(2),etx=$C(3),ack=$C(6),enq=$C(5),eot=$C(4),etb=$C(23) S sb=$C(11),eb=$C(28),cr=$C(13) S lf=$C(10),nak=$C(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 S $ZT=\u0026#34;ErrHandler\u0026#34;,$EC=\u0026#34;\u0026#34; S leftBrace=\u0026#34;{\u0026#34;,rightBrace=\u0026#34;}\u0026#34; S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType)=\u0026#34;\u0026#34; Q:$$start^MIF000() F { D Main Q:$$stop^MIF000() } C par4 Q */ Main S $ZT=\u0026#34;ErrHandler\u0026#34;,$EC=\u0026#34;\u0026#34; S record=$$Read^MI.MIF000(mi,leftBrace,rightBrace) Q:\u0026#39;$l(record) d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) S (epis,result,date,time,QC,data)=\u0026#34;\u0026#34; S cmd=$P(record,\u0026#34;,\u0026#34;,1) I cmd=\u0026#34;1\u0026#34; {\t//获取指定样本编号和指定病历号的样本详细测试请求数据 S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S sampleId=$P(record,\u0026#34;,\u0026#34;,3)\t//测试请求ID S epis=sampleId S:epis[\u0026#34;[S]\u0026#34; epis=$P(epis,\u0026#34;[S]\u0026#34;,2) K PLIST S error=$$BuildItems(mi,epis) I $L(error) { S ack=\u0026#34;{2,1,\u0026#34;_sampleId_\u0026#34;}\u0026#34; D ACK(mi,ack) ;D trace^MIF000(mi,error,\u0026#34;Error\u0026#34;) Q } S tc=\u0026#34;\u0026#34;,items=\u0026#34;\u0026#34; F { S tc=$O(PLIST(tc)) Q:\u0026#39;$L(tc) S itemDiluFactor=$G(PLIST(tc)) S:\u0026#39;$L(itemDiluFactor) itemDiluFactor=1\t//稀释倍数,机器内部稀释,必须在该测试项目的支持范围内 S items=items_\u0026#34;[S]\u0026#34;_tc_\u0026#34;,\u0026#34;_itemDiluFactor_\u0026#34;,\u0026#34; } S itemCount=+$G(PLIST) S items=$E(items,1,$L(items)-1) S dilutionFactor=1\t//稀释倍数 S isEmergency=0\t//是否急诊:0=普通,1=急诊 S medicareId=\u0026#34;[S]\u0026#34;\t//病案号 S secondName=\u0026#34;[S]\u0026#34;\t//姓 S firstName=\u0026#34;[S]\u0026#34;\t//名 S sex=\u0026#34;\u0026#34;\t//性别 0:女 1:男 S age=\u0026#34;\u0026#34;\t//年龄:整数 S location=\u0026#34;[S]\u0026#34;\t//科室 S ward=\u0026#34;[S]\u0026#34;\t//病区 S bed=\u0026#34;[S]\u0026#34;\t//床号 S reqDoctor=\u0026#34;[S]\u0026#34;\t//送检医生 S reqDate=\u0026#34;\u0026#34;\t//送检日期(格式:YYYY/MM/DD) S receiveUser=\u0026#34;[S]\u0026#34;\t//检验人员 S remark=\u0026#34;[S]\u0026#34;\t//备注 S ack=\u0026#34;{2,0,\u0026#34;_sampleId_\u0026#34;,\u0026#34;_dilutionFactor_\u0026#34;,\u0026#34;_isEmergency_\u0026#34;,\u0026#34;_medicareId_\u0026#34;,\u0026#34; S ack=ack_secondName_\u0026#34;,\u0026#34;_firstName_\u0026#34;,\u0026#34;_sex_\u0026#34;,\u0026#34;_age_\u0026#34;,\u0026#34;_location_\u0026#34;,\u0026#34;_ward_\u0026#34;,\u0026#34; S ack=ack_bed_\u0026#34;,\u0026#34;_reqDoctor_\u0026#34;,\u0026#34;_reqDate_\u0026#34;,\u0026#34;_receiveUser_\u0026#34;,\u0026#34;_remark_\u0026#34;,\u0026#34; S ack=ack_itemCount_\u0026#34;,\u0026#34;_items_\u0026#34;}\u0026#34; D ACK(mi,ack) Q } I cmd=\u0026#34;3\u0026#34; {\t//获取分配给指定仪器所有患者测试样本的个数 S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S sampleTotal=\u0026#34;0\u0026#34; S ack=\u0026#34;{4,1}\u0026#34;\t//暂时不处理 D ACK(mi,ack) Q } I cmd=\u0026#34;5\u0026#34; {\t//按测试模式发送结果到LIS //{5,[S]A2000,[S]41,[S]132,47925,970200L,183.145F} S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S sampleId=$P(record,\u0026#34;,\u0026#34;,5)\t//测试请求ID S sampleNo=$P(record,\u0026#34;,\u0026#34;,3)\t//测试样本编号 S itemId=$P(record,\u0026#34;,\u0026#34;,4)\t//测试项目编号 S medicareId=\u0026#34;[S]\u0026#34;\t//病案号 //{6,0,47925,[S]41,[S],[S]132} S ack=\u0026#34;{6,0,\u0026#34;_sampleId_\u0026#34;,\u0026#34;_sampleNo_\u0026#34;,\u0026#34;_medicareId_\u0026#34;,\u0026#34;_itemId_\u0026#34;}\u0026#34; D ACK(mi,ack) S epis=sampleNo //sampleId S:epis[\u0026#34;[S]\u0026#34; epis=$P(epis,\u0026#34;[S]\u0026#34;,2) // 2017-09-13 WxC 质控标示特殊处理 ;I \u0026#34;H1,L1,P1,C1\u0026#34;[epis S epis=\u0026#34;liver1\u0026#34; ;I \u0026#34;H2,L2,P2,C2\u0026#34;[epis S epis=\u0026#34;liver2\u0026#34; ;I \u0026#34;M1,G1\u0026#34;[epis S epis=\u0026#34;HEV1\u0026#34; ;I \u0026#34;M2,G2\u0026#34;[epis S epis=\u0026#34;HEV2\u0026#34; // S channel=itemId S:channel[\u0026#34;[S]\u0026#34; channel=$P(channel,\u0026#34;[S]\u0026#34;,2) S valueL=$P(record,\u0026#34;,\u0026#34;,6)\t//RLU((检测结果相对发光值) S valueL=$P(valueL,\u0026#34;L\u0026#34;,1) S valueF=$P(record,\u0026#34;,\u0026#34;,7)\t//浓度值或S/CO值 S valueF=$P(valueF,\u0026#34;F\u0026#34;,1) S:valueF[\u0026#34;[S]\u0026#34; valueF=$tr(valueF,\u0026#34;[S]\u0026#34;,\u0026#34;\u0026#34;) Q:\u0026#39;$L(channel) S result=\u0026#34;\u0026#34; //S result=result_channel_\u0026#34;-L\u0026#34;_$C(par10)_valueL_$C(par11) //S result=result_channel_\u0026#34;-F\u0026#34;_$C(par10)_valueF_$C(par11) S result=result_channel_ResultDeli_valueF_ItemDeli D Save Q } I cmd=\u0026#34;7\u0026#34; {\t//按样本模式发送结果到LIS //{7,[S]A2000,101,[S]41,3,[S]132,970200L,183.145F,[S]112,673200L,13.15F,[S]113,1378200L,13.5F S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S sampleId=$P(record,\u0026#34;,\u0026#34;,3)\t//样本ID S sampleNo=$P(record,\u0026#34;,\u0026#34;,4)\t//测试样本编号 S itemCount=+$P(record,\u0026#34;,\u0026#34;,5)\t//测试样本包含的测试个数 S items=$P(record,\u0026#34;,\u0026#34;,6,$L(record,\u0026#34;,\u0026#34;)) S medicareId=\u0026#34;[S]\u0026#34;\t//病案号 //{8,0,101,[S]41,[S] S ack=\u0026#34;{8,0,\u0026#34;_sampleId_\u0026#34;,\u0026#34;_sampleNo_\u0026#34;,\u0026#34;_medicareId_\u0026#34;}\u0026#34; D ACK(mi,ack) S epis=sampleId S:epis[\u0026#34;[S]\u0026#34; epis=$P(epis,\u0026#34;[S]\u0026#34;,2) // 2017-09-13 WxC 质控标示特殊处理 I \u0026#34;H1,L1,P1,C1\u0026#34;[epis S epis=\u0026#34;liver1\u0026#34; I \u0026#34;H2,L2,P2,C2\u0026#34;[epis S epis=\u0026#34;liver2\u0026#34; I \u0026#34;M1,G1\u0026#34;[epis S epis=\u0026#34;HEV1\u0026#34; I \u0026#34;M2,G2\u0026#34;[epis S epis=\u0026#34;HEV2\u0026#34; // S result=\u0026#34;\u0026#34; F itemIndex=1:3:$L(items,\u0026#34;,\u0026#34;) { S itemId=$P(items,\u0026#34;,\u0026#34;,itemIndex)\t//测试项目编号 S channel=itemId S:channel[\u0026#34;[S]\u0026#34; channel=$P(channel,\u0026#34;[S]\u0026#34;,2) Continue:\u0026#39;$L(channel) S valueL=$P(items,\u0026#34;,\u0026#34;,itemIndex+1)\t//RLU((检测结果相对发光值) S valueL=$P(valueL,\u0026#34;L\u0026#34;,1) S valueF=$P(items,\u0026#34;,\u0026#34;,itemIndex+2)\t//浓度值或S/CO值 S valueF=$P(valueF,\u0026#34;F\u0026#34;,1) S:valueF[\u0026#34;[S]\u0026#34; valueF=$tr(valueF,\u0026#34;[S]\u0026#34;,\u0026#34;\u0026#34;) //S result=result_channel_\u0026#34;-L\u0026#34;_$C(par10)_valueL_$C(par11) //S result=result_channel_\u0026#34;-F\u0026#34;_$C(par10)_valueF_$C(par11) S result=result_channel_ResultDeli_valueF_ItemDeli } D Save Q } I cmd=\u0026#34;9\u0026#34; {\t//双向 //{9,[S]A2000,[S]41} S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S sampleId=$P(record,\u0026#34;,\u0026#34;,3)\t//样本ID S epis=sampleId S:epis[\u0026#34;[S]\u0026#34; epis=$P(epis,\u0026#34;[S]\u0026#34;,2) ///2016-04-13 WXC 扫条码转换仪器 ///D SetTSMachine^MIF000(mi,epis) ;s Err=##Class(LIS.Common.DHCVisitNumber).ReceiveLabNoByWGM(mi,epis,\u0026#34;\u0026#34;) ;d Trace^MI.MIF000(mi,Err,\u0026#34;核收到仪器返回\u0026#34;) s Err=\u0026#34;\u0026#34; s RetLL=$$SaveLastMachine^MI.MIF000(mi,epis) d Trace^MI.MIF000(mi,RetLL,\u0026#34;保存最后仪器\u0026#34;) K PLIST S error=$$BuildItems(mi,epis) I $L(error) { S ack=\u0026#34;{10,1,\u0026#34;_sampleId_\u0026#34;}\u0026#34; D ACK(mi,ack) d Trace^MI.MIF000(mi,error,\u0026#34;Error\u0026#34;) Q } S tc=\u0026#34;\u0026#34;,items=\u0026#34;\u0026#34; F { S tc=$O(PLIST(tc)) Q:\u0026#39;$L(tc) S itemDiluFactor=$G(PLIST(tc)) S:\u0026#39;$L(itemDiluFactor) itemDiluFactor=1\t//稀释倍数,机器内部稀释,必须在该测试项目的支持范围内 S items=items_\u0026#34;[S]\u0026#34;_tc_\u0026#34;,\u0026#34;_itemDiluFactor_\u0026#34;,\u0026#34; } S items=$E(items,1,$L(items)-1) S dilutionFactor=1\t//稀释因子 S isEmergency=0\t//是否急诊:0=普通,1=急诊 S specimen=\u0026#34;[S]\u0026#34;_$$GetSpecimen(epis)\t//样本类型:字符串,如果仪器不能识别则默认为血清 S itemCount=+$G(PLIST) //{10,0,[S]41,1,0,[S],3,[S]132,1,[S]112,1,[S]113,1} S ack=\u0026#34;{10,0,[S]\u0026#34;_sampleId_\u0026#34;,\u0026#34;_dilutionFactor_\u0026#34;,\u0026#34;_isEmergency_\u0026#34;,\u0026#34;_specimen_\u0026#34;,\u0026#34;_itemCount_\u0026#34;,\u0026#34;_items_\u0026#34;}\u0026#34; D Trace^MI.MIF000(mi,ack,\u0026#34;ack\u0026lt;--M\u0026#34;) D ACK(mi,ack) Q } I cmd=\u0026#34;11\u0026#34; {\t//连接LIS系统开始通信 S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S lisCommVersion=$P(record,\u0026#34;,\u0026#34;,3)\t//LIS通信模块版本号 S lisVersion=\u0026#34;[S]V0.0.1\u0026#34;\t//LIS系统版本号 S ack=\u0026#34;{12,0,\u0026#34;_lisVersion_\u0026#34;}\u0026#34; D ACK(mi,ack) Q } I cmd=\u0026#34;15\u0026#34; {\t//快速获取指定样本架编号测试请求数据 S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S rackId=$P(record,\u0026#34;,\u0026#34;,3)\t//样本架编号 S position=$P(record,\u0026#34;,\u0026#34;,4)\t//样本位置号 S ack=\u0026#34;{16,1,\u0026#34;_rackId_\u0026#34;,\u0026#34;_position_\u0026#34;0,[S]}\u0026#34;\t//不处理此模式 D ACK(mi,ack) Q } Q ErrHandler h 10 d Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) Q GetSpecimen(Labno) n (Labno) s Labno=$G(Labno) i \u0026#39;$l(Labno) q \u0026#34;\u0026#34; s SpecName=\u0026#34;\u0026#34; s SpecDR=\u0026#34;\u0026#34; \u0026amp;sql(SELECT SpecimenDR into :SpecDR FROM dbo.RP_VisitNumber WHERE VisitNumber=:Labno) i SQLCODE q \u0026#34;\u0026#34; q:SpecDR=\u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026amp;sql(select IName into :SpecName from dbo.BT_Specimen where RowID=:SpecDR) q SpecName //构建测试项目,返回错误代码 BuildItems(mi,epis) N (mi,epis,PLIST) K PLIST S mi=$G(mi),epis=$G(epis) Q:\u0026#39;$L(mi) \u0026#34;仪器代码为空\u0026#34; Q:\u0026#39;$L(epis) \u0026#34;标本号为空\u0026#34; //Q:\u0026#39;$D(^TMIF(mi)) \u0026#34;仪器代码错误\u0026#34; //Q:\u0026#39;$D(^TEPI(epis)) \u0026#34;在LIS系统未找到样本号:\u0026#34;_epis_\u0026#34;,确定样本号正确或已经在LIS系统接收\u0026#34; S error=\u0026#34;\u0026#34;,PLIST=0 K ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$J,mi,epis) d ScanOneNew^MI.MIF000(mi,epis) K PLIST S tc=\u0026#34;\u0026#34; F { S tc=$O(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$J,mi,epis,tc)) Q:\u0026#39;$L(tc) S tc=$P(tc,\u0026#34;-\u0026#34;,1) Continue:\u0026#39;$L(tc) Continue:$D(PLIST(tc)) S PLIST(tc)=\u0026#34;\u0026#34; S PLIST=$I(PLIST) } Q:+$G(PLIST)\u0026lt;1 \u0026#34;未找到样本号:\u0026#34;_epis_\u0026#34;需要上传的项目,确定样本为登记状态且所开医嘱已经正确维护到仪器\u0026#34; Q \u0026#34;\u0026#34; ACK(mi,data) N (mi,data) S mi=$G(mi),data=$G(data) Q:\u0026#39;$L(mi) \u0026#34;\u0026#34; Q:\u0026#39;$L(data) \u0026#34;\u0026#34; //Q:\u0026#39;$D(^TMIF(mi)) \u0026#34;\u0026#34; W data,*-3 d Trace^MI.MIF000(mi,data,\u0026#34;H--\u0026gt;M\u0026#34;) Q \u0026#34;\u0026#34; Save d Trace^MI.MIF000(mi,epis_\u0026#34;$$\u0026#34;_result,\u0026#34;Result\u0026#34;) I $l(epis),$l(result) { //S QC=$$findQC^MIF000(mi,epis) d Save^MI.MIF000(mi,epis,result,date,time,QC) //file^MIF000(mi,sample,epis,surname,result,date,time,QC,mi1) } S (epis,rec,res,result,date,time,QC,resultType)=\u0026#34;\u0026#34; Q ​​\n主动上传双向 通过监听文件双向 不同路径回传患者信息和检测项目信息 示例接口(希森美康 XN1000) 通过配置监听 UPPreDealClass 字段“PreDeal.DealStandSysmexImage,PreDeal“，通过 M 进行编写上传信息，会同时上传两个文件，一个文件传患者信息，一个文件传标本项目。\n{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;Drect\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;1000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;D:\\\\Laboman6.0\\\\2\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;D:\\\\Laboman6.0\\\\1\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;D:\\\\Laboman6.0\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFXN1000\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;.CDF\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealStandSysmexImage,PreDeal\u0026#34;,\u0026#34;UpPara\u0026#34;:\u0026#34;D:\\\\Laboman6.0\\\\1,D:\\\\Laboman6.0\u0026#34;,\u0026#34;IsCombineLines\u0026#34;:\u0026#34;1\u0026#34;}] /// [{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;Drect\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;1000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;C:\\\\Laboman\\\\2\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;C:\\\\Laboman\\\\1\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;C:\\\\Laboman\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFXN1000\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;.CDF\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealStandSysmexImage,PreDeal\u0026#34;,\u0026#34;UpPara\u0026#34;:\u0026#34;C:\\\\Laboman\\\\1,C:\\\\Laboman\u0026#34;,\u0026#34;IsCombineLines\u0026#34;:\u0026#34;1\u0026#34;}] Class MI.MIFXN1000 Extends %RegisteredObject { // D ##class(MI.MIFLISMonitorTest).fileMTHD(\u0026#34;38\u0026#34;,\u0026#34;1,BASO#,1,0.02,,,,,\u0026#34;,\u0026#34;1\u0026#34;) // mi:仪器主键 // record:一个数据行合并提交用#enter#分割多行数据 // epis:流水号，前处理提取出了的画 // fileNameOrColName:读文件的是文件全名，数据库的是数据库查询的列名用~分割 // [{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;Drect\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;3000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;D:\\\\Result\\\\2\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;D:\\\\Result\\\\1\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;D:\\\\Result\\\\\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFXEMSYS\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;.cdf\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoMAll,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealImage,PreDeal\u0026#34;,\u0026#34;UpPara\u0026#34;:\u0026#34;\u0026#34;}] ClassMethod fileMTHD(mi, record As %String(MAXLEN=99999999), epis, fileNameOrColName, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; i \u0026#39;$l(record) q \u0026#34;\u0026#34; //多行数据 s recordbak=record //返回值 s retcode=\u0026#34;\u0026#34; //解析多行合并数据，按#enter#分隔，监听config开启与否合并提交都支持 d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) s (sample,result,date,time,QC,image,retimage,imageR,retimageR,imageres,Ipcode,IpName,conclusion)=\u0026#34;\u0026#34; f i=1:1:$l(record,\u0026#34;#enter#\u0026#34;) d .S resVal=$p(record,\u0026#34;#enter#\u0026#34;,i) .//0,2020-12-10,00:00:00,40,XS500,17944,35,[13][10] .//1,RDW-SD,1,41.60,,,,,[13][10]1,WBC,1,4.15,,,,,[13][10] .//3,,HPLT,C:\\Laboman4.0\\XS500\\gram\\20201210\\0000000040_201210153004_HPLT.gif,1[13][10] .s type=$p(resVal,\u0026#34;,\u0026#34;,1) .i type=0 s epis=$p(resVal,\u0026#34;,\u0026#34;,4) .i type=1 d ..s code=$p(resVal,\u0026#34;,\u0026#34;,2),res=$p(resVal,\u0026#34;,\u0026#34;,4) ..s result=result_code_$c(92)_res_$c(44) .i type=3 d ..s image=$p(resVal,\u0026#34;,\u0026#34;,3) ..s retimage=$p(resVal,\u0026#34;,\u0026#34;,4) ..s imageR=imageR_image_\u0026#34;,\u0026#34; ..s retimageR=retimageR_retimage_\u0026#34;,\u0026#34; .i type=4 d //记录仪器报警信息,Ipcode 信息代码,IpName 信息内容 ..s Ipcode=$p(resVal,\u0026#34;,\u0026#34;,3) ..s IpName=$p(resVal,\u0026#34;,\u0026#34;,4) ..//s conclusion=conclusion_Ipcode_\u0026#34;^\u0026#34;_IpName ..i $l(conclusion) s conclusion=conclusion_\u0026#34;，\u0026#34;_Ipcode_\u0026#34;：\u0026#34;_IpName ..e s conclusion=Ipcode_\u0026#34;：\u0026#34;_IpName .i type=9 d ..s imageR=$e(imageR,1,$l(imageR)-1) ..s retimageR=$e(retimageR,1,$l(retimageR)-1) ..d conversion ..s imageres=\u0026#34;getimage#\u0026#34;_epis_\u0026#34;#\u0026#34;_imageR_\u0026#34;#\u0026#34;_retimageR ..d Trace^MI.MIF000(mi,imageres,\u0026#34;H\u0026lt;--M\u0026#34;) ..d Trace^MI.MIF000(mi,epis_\u0026#34;:\u0026#34;_result,\u0026#34;提示\u0026#34;) ..i $l(epis),$l(conclusion) d ...s epis1=\u0026#34;\u0026#34; ...i $l(epis)\u0026lt;6 s epis1=$$ChangeEpisnew^MI.MIF000(mi,epis,\u0026#34;\u0026#34;) ...i $l(epis)\u0026gt;6 s epis1=epis ...d Trace^MI.MIF000(mi,epis1_\u0026#34;:\u0026#34;_conclusion,\u0026#34;报警信息\u0026#34;) ...i $l(epis1) d ##Class(MI.Common.MIFBase).SaveMajorConclusion(epis1, conclusion, mi) ..i $l(conclusion) s result=result_\u0026#34;BJ\u0026#34;_$c(92)_conclusion_$c(44) ..i $l(epis),$l(result) d ##Class(MI.Common.MIFBase).Save(mi, epis, result, date, time, QC) q imageres conversion i imageR=\u0026#34;HPLT\u0026#34; s imageR=\u0026#34;PLT\u0026#34; i imageR=\u0026#34;HRBC\u0026#34; s imageR=\u0026#34;RBC\u0026#34; i imageR=\u0026#34;HWBC\u0026#34; s imageR=\u0026#34;DIFF\u0026#34; i imageR=\u0026#34;SBASO\u0026#34; s imageR=\u0026#34;Baso\u0026#34; q } // D ##class(MI.MIFLISMonitorTest)SaveImageMTHD(\u0026#34;7\u0026#34;,\u0026#34;9999\u0026#34;, \u0026#34;\u0026#34;,\u0026#34;175\u0026#34;) // mi:仪器 // epis：流水号，如果是监听图片模式该位置放图片名称，自己在保存前提取流水 // ImageClass:图片类别，如果是监听图片模式该位置放图片名称，自己在保存前提取图片类型 // FileName:保存在文件服务的相对路径，默认不动 // FullName:文件全路径，如果是监听图片模式该位置放图片全路径名称，满足有的图片名称无法得到流水和图片类别的情况 ClassMethod SaveImageMTHD(mi, epis, ImageClass, FileName, FullName, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //通过OtherPara配置取图的在这里通过epis和ImageClass的图片名字提取出流水号和图片类别 s mi=$g(mi) s epis=$g(epis) s ImageClass=$g(ImageClass) s FileName=$g(FileName) s FullName=$g(FullName) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; d Trace^MI.MIF000(mi,epis_\u0026#34;:\u0026#34;_ImageClass_\u0026#34;:\u0026#34;_FileName,\u0026#34;H\u0026lt;--M\u0026#34;) s (ReceiveDate, ImageOrder, Caption, DisplayRatio, Height, Width, Sequence)=\u0026#34;\u0026#34; s ret=##Class(MI.Common.MachineResult).SaveImage(ReceiveDate, epis, ImageClass, ImageOrder, FileName, mi, Caption, DisplayRatio, Height, Width, Sequence) q ret } // 返回给监听当前上传文件路径名称，默认不要动 // w ##class(MI.MIFLISMonitorTest).GetFtpMTHD(\u0026#34;7\u0026#34;) // mi:仪器 ClassMethod GetFtpMTHD(mi, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //文件服务模式必须改的地方，老的FTP模式这么改了也没问题，所以建议都这样 s mi=$g(mi) q ##Class(MI.Common.MIFBase).GetMiFtpPath(mi) } /// Creator： 查询患者信息，监听配置上传前处理类后会定时调用这个query查询数据进行上传操作 /// CreatDate： 20140919 /// Description:： /// Table： /// Input： mi：仪器主键 /// Output： 仪器信息 /// Return： 仪器信息 /// Others： Query QryLabInfo(mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Query(ROWSPEC = \u0026#34;labno,labnoInfo,patInfo\u0026#34;) { } /// Query的执行方法 /// d ##class(%ResultSet).RunQuery(\u0026#34;MI.MIFXN1000\u0026#34;,\u0026#34;QryLabInfo\u0026#34;,\u0026#34;11\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) ClassMethod QryLabInfoExecute(ByRef qHandle As %Binary, mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Status { Set repid=$i(^CacheTemp) Set ind=1 s mi=$g(mi),flag=$g(flag) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; s LabnoList=\u0026#34;\u0026#34; s AddDate=\u0026#34;\u0026#34; f s AddDate=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,\u0026#34;C\u0026#34;,AddDate)) q:AddDate=\u0026#34;\u0026#34; d .s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,\u0026#34;C\u0026#34;,AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d ..s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,\u0026#34;C\u0026#34;,AddDate,AddTime,\u0026#34;\u0026#34;)) ..s labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) ..i \u0026#39;$l(labno) q ..//ref ..s labnoInfo=..GetLabnoInfo(mi,labno) ..//cdf ..s patInfo=..GetPatInfo(mi,labno) ..d OutputRow Set qHandle=$lb(0,repid,0) Quit $$$OK OutputRow Set Data=$lb(labno,labnoInfo,patInfo) Set ColFields=\u0026#34;labno,labnoInfo,patInfo\u0026#34; Set ^CacheTemp(repid,ind)=##Class(LIS.Util.Common).TransListNull(Data,ColFields) Set ind=ind+1 quit } ClassMethod QryLabInfoClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set repid=$LIST(qHandle,2) Kill ^CacheTemp(repid) Quit $$$OK } ClassMethod QryLabInfoFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set AtEnd=$LIST(qHandle,1) Set repid=$LIST(qHandle,2) Set ind=$LIST(qHandle,3) Set ind=$o(^CacheTemp(repid,ind)) If ind=\u0026#34;\u0026#34; { Set AtEnd=1 Set Row=\u0026#34;\u0026#34; } Else { Set Row=^CacheTemp(repid,ind) } s qHandle=$lb(AtEnd,repid,ind) Quit $$$OK } /// w ##Class(MI.XN9000).GetLabnoInfo(2,1709040020) ClassMethod GetLabnoInfo(mi, labno) As %String { s mi=$g(mi),labno=$g(labno) //s ^TMPLIS(800,mi, labno)=\u0026#34;\u0026#34; i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; //获取项目通道号 i $e(labno)=\u0026#34;*\u0026#34; q \u0026#34;\u0026#34; d ScanOne^MI.MIF000(mi,labno) s tcx=\u0026#34;\u0026#34; s num=1 s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) q:chl=\u0026#34;\u0026#34; d .s tcx=tcx_chl_\u0026#34;+\u0026#34; s tcx=$e(tcx,1,$l(tcx)-1) k ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno) i $l(tcx) s tcx=labno_\u0026#34;,\u0026#34;_tcx_\u0026#34;|\u0026#34; i $l(tcx) d Trace^MI.MIF000(mi,tcx,\u0026#34;工单\u0026#34;) q tcx } /// w ##Class(MI.MIFLISMonitorTest).GetPatInfo(6,1001367) ClassMethod GetPatInfo(mi, labno) As %String { s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,labno,\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$tr($lg(RPVisitNumberData,3),\u0026#34; \u0026#34;) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),3) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$tr($lg(RPVisitNumberData,28),\u0026#34; \u0026#34;) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; //i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; i $d(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR)) d .s WorkGroupMachineDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,\u0026#34;\u0026#34;)) .s OrderNo=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,WorkGroupMachineDR,\u0026#34;\u0026#34;)) .s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,WorkGroupMachineDR,OrderNo,\u0026#34;\u0026#34;)) .s EpisodeNo=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),8) .s BarCode=EpisodeNo s Patna=$tr(PatName,\u0026#34; \u0026#34;) ;病人姓名 //b ;1 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode q RetString } // 监听做上传操作后调用改方法设置标本上传表状态 ClassMethod SaveSDFMTHD(mi, labno, epis, filename, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi),labno=$g(labno),epis = $g(epis),filename=$g(filename) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q s ret=##Class(MI.MachineUpload).SetSendFlag(mi,labno,\u0026#34;S\u0026#34;,filename) q } /// w ##Class(MI.MIFX1800IA).QueryCDF(-6,\u0026#34;2015-09-10\u0026#34;) ClassMethod QueryCDF(mi, date) As %String { s mi=$g(mi),date=$g(date) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; i $l(date) s date=$tr(date,\u0026#34;-\u0026#34;) e s date=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s retList=\u0026#34;\u0026#34; s cnt=0 s time=\u0026#34;\u0026#34; f s time=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,\u0026#34; S\u0026#34;,date,time)) q:time=\u0026#34;\u0026#34; d .s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,\u0026#34; S\u0026#34;,date,time,\u0026#34;\u0026#34;)) .s labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) .s datetime=date_\u0026#34; \u0026#34;_$zt(time,2) .s filename=\u0026#34;\u0026#34; .s cnt=cnt+1 .i cnt\u0026gt;300 q .s retList=retList_$c(9)_cnt_$c(9)_datetime_$c(9)_labno_$c(9)_labno_$c(9)_filename_$c(2) s retList=$e(retList,1,$l(retList)-1) q retList } } 同一路径回传文件上传一个或多个文件 示例接口(贝克曼流水线) 通过配置监听 UPPreDealClass 字段“PreDeal.DealDemoM,PreDeal”，通过 M 进行编写上传信息，只输出一次 OutPut 就可以生成一个文件，通过输出两次 OutPut 修改第二次 OutPut 内容可以在同一路径回传两个不同的文件。\n{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;Drect\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;2000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;C:\\\\Inetpub\\\\UL\\\\\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFRemisolN\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;.hpr,.ok\u0026#34;,\u0026#34;UpPara\u0026#34;:\u0026#34;C:\\\\Inetpub\\\\DL\\\\\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoMALL,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;}] Class MI.MIFRemisolN Extends %RegisteredObject { /// D ##class(MI.MIFBeckmanRemisol).fileMTHD(\u0026#34;38\u0026#34;,\u0026#34;1,BASO#,1,0.02,,,,,\u0026#34;,\u0026#34;1\u0026#34;) /// mi:仪器主键 /// record:一个数据行合并提交用#enter#分割多行数据 /// epis:流水号，前处理提取出了的画 /// fileNameOrColName:读文件的是文件全名，数据库的是数据库查询的列名用~分割 /// D ##class(MI.MIFRemisolN).fileMTHD(\u0026#34;1\u0026#34;,\u0026#34;H|\\^\u0026amp;|||REMISOL||||||UPLOAD_SIGN=0\\INTERPRETATION_FLAG=1\\INSTRUMENT_FLAG=1|P|1|20231207134318[13][10]Q|1|^ssss||||||||||O[13][10]L|1[13][10]\u0026#34;) /// D ##class(MI.MIFRemisolN).fileMTHD(\u0026#34;24\u0026#34;,\u0026#34;H|\\^\u0026amp;|||Lb1k□V1.5.5||||||UPLOAD_SIGN=1\\INTERPRETATION_FLAG=0\\INSTRUMENT_FLAG=1|P|1|20241011155213[13][10]P|1||0000000072||彭均秀^||19480902|F|||||||||||||||||普外科门诊[13][10]O|1|24101100017^0020^01|||RO|20241011155213|20241011155213||||||||S|||UV[13][10]R|1|^^^GLU^^2286\\2286^1598\\1609^^0|7.05^M|||N||R||||20241011102518|AU5800[13][10]R|2|^^^LIPEM^^^^^0|0|||N||R||||20241011102518|AU5800[13][10]R|3|^^^ICTER^^^^^0|0|||N||R||||20241011102518|AU5800[13][10]R|4|^^^HEMOL^^^^^0|0|||N||R||||20241011102518|AU5800[13][10]L|1[13][10]\u0026#34;) ClassMethod fileMTHD(mi, record As %String(MAXLEN=99999999), epis, fileNameOrColName, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; i \u0026#39;$l(record) q \u0026#34;\u0026#34; s (Code,result,date,time,res,QC)=\u0026#34;\u0026#34; d Trace^MI.MIF000(mi,record,\u0026#34;record\u0026#34;) for i=1:1:$l(record,\u0026#34;[13][10]\u0026#34;) d .s rec=$p(record,\u0026#34;[13][10]\u0026#34;,i) .i \u0026#39;$l(rec) q .d Trace^MI.MIF000(mi,rec,\u0026#34;rec\u0026#34;) .S type=$e(rec,1,1) .i type=\u0026#34;O\u0026#34; d q ..s epis=$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) .i type=\u0026#34;R\u0026#34; d q ..s code=$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,4),\u0026#34; \u0026#34;) ..S res=$p(rec,\u0026#34;|\u0026#34;,4) ..s ResNoes=$p(res,\u0026#34;^\u0026#34;,2) ..s ResNoes=##class(MI.MIFRemisolN).ConvertResNoes(ResNoes) ..s res=$tr($p(res,\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;,\u0026#34;\u0026#34;) ..s resKZJG=##class(MI.MIFRemisolN).ConvertresKZJG(mi,epis,code,res) ..s result=result_code_$c(92)_res_$c(92)_resKZJG_$c(92)_ResNoes_$c(44) .i type=\u0026#34;L\u0026#34; d q ..d Trace^MI.MIF000(mi,epis_\u0026#34;$$\u0026#34;_result,\u0026#34;Result\u0026#34;) ..i $l(epis),$l(result) d Save^MI.MIF000(mi,epis,result,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) q \u0026#34;\u0026#34; } /// 获取扩展结果 ClassMethod ConvertresKZJG(mi, epis, code, res) { s code=$g(code),res=$g(res) s OutPut=\u0026#34;\u0026#34; s Labno=$$GetLabnoByEpis(mi,epis) i $l(Labno),$d(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,Labno)) d .s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,Labno,\u0026#34;\u0026#34;)) .s Age=$lg($g(^dbo.RPVisitNumberD(VisitNumberDR)),18) s Age=$g(Age) i \u0026#39;$l(code),\u0026#39;$l(res) q OutPut i code=\u0026#34;BNP\u0026#34;,0 d\t// BNP N端脑钠肽前体 .i \u0026#39;$l(Age) q .i Age\u0026lt;=50 d ..i res\u0026lt;=450 s OutPut=\u0026#34;正常\u0026#34; ..i res\u0026gt;450,res\u0026lt;=600 s OutPut=\u0026#34;急性心衰\u0026#34; ..i res\u0026gt;600 s OutPut=\u0026#34;慢性心衰\u0026#34; .i ((Age\u0026gt;50)\u0026amp;\u0026amp;(Age\u0026lt;=75)) d ..i res\u0026lt;=900 s OutPut=\u0026#34;正常\u0026#34; ..i res\u0026gt;900 s OutPut=\u0026#34;急性心衰\u0026#34; .i Age\u0026gt;75 d ..i res\u0026lt;=1800 s OutPut=\u0026#34;正常\u0026#34; ..i res\u0026gt;1800 s OutPut=\u0026#34;急性心衰\u0026#34; i code=\u0026#34;25OHD\u0026#34; d\t// 25羟维生素D .i res\u0026lt;=20 s OutPut=\u0026#34;缺乏\u0026#34; .i res\u0026gt;20,res\u0026lt;=30 s OutPut=\u0026#34;不足\u0026#34; .i res\u0026gt;30,res\u0026lt;=100 s OutPut=\u0026#34;充足\u0026#34; .i res\u0026gt;100 s OutPut=\u0026#34;超上限\u0026#34; q OutPut GetLabnoByEpis(mi,Epis) s ret=Epis,mi=$g(mi) s date=$zd($h,8) i \u0026#39;$l(mi) q Epis s WGMachineID=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) i \u0026#39;$l(WGMachineID) q Epis i $d(^dbo.RPVisitNumberReportI(\u0026#34;IndexEpisodeNo\u0026#34;,date,WGMachineID,##Class(LIS.Util.Common).IndexData(Epis))) { s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexEpisodeNo\u0026#34;,date,WGMachineID,##Class(LIS.Util.Common).IndexData(Epis),\u0026#34;\u0026#34;),-1) S VisitNumberDR=$LG($G(^dbo.RPVisitNumberReportD(ReportDR)),2) s ret=$lg(^dbo.RPVisitNumberD(VisitNumberDR),2) } q ret } /// 转换报警信息 ClassMethod ConvertResNoes(ResNoes) { s ResNoes=$g(ResNoes) s OutPut=\u0026#34;\u0026#34; i \u0026#39;$l(ResNoes) q OutPut i $d(^LISPolice(\u0026#34;BKMLSX\u0026#34;,ResNoes)) d .s OutPut=$g(^LISPolice(\u0026#34;BKMLSX\u0026#34;,ResNoes)) i $l(ResNoes),\u0026#39;$l(OutPut) s OutPut=\u0026#34;旗标:\u0026#34;_ResNoes q OutPut } /// D ##class(MI.MIFBeckmanRemisol)SaveImageMTHD(\u0026#34;7\u0026#34;,\u0026#34;9999\u0026#34;, \u0026#34;\u0026#34;,\u0026#34;175\u0026#34;) /// mi:仪器 /// epis：流水号，如果是监听图片模式该位置放图片名称，自己在保存前提取流水 /// ImageClass:图片类别，如果是监听图片模式该位置放图片名称，自己在保存前提取图片类型 /// FileName:保存在文件服务的相对路径，默认不动 /// FullName:文件全路径，如果是监听图片模式该位置放图片全路径名称，满足有的图片名称无法得到流水和图片类别的情况 ClassMethod SaveImageMTHD(mi, epis, ImageClass, FileName, FullName, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //通过OtherPara配置取图的在这里通过epis和ImageClass的图片名字提取出流水号和图片类别 s mi=$g(mi) s epis=$g(epis) s ImageClass=$g(ImageClass) //解析流水号和图片类别 s Name=epis s epis=$p(Name,\u0026#34;_\u0026#34;,1) s ImageClass=$p(Name,\u0026#34;_\u0026#34;,2) s ImageClass=$p(ImageClass,\u0026#34;.\u0026#34;,1) s FileName=$g(FileName) s FullName=$g(FullName) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; d ##Class(MI.Common.MIFBase).Trace(mi,epis_\u0026#34;:\u0026#34;_ImageClass_\u0026#34;:\u0026#34;_FileName,\u0026#34;H\u0026lt;--M\u0026#34;) s (ReceiveDate, ImageOrder, Caption, DisplayRatio, Height, Width, Sequence)=\u0026#34;\u0026#34; //加上当前时间，防止浏览器缓存 s FileName=FileName_\u0026#34;?\u0026#34;_$p($h,\u0026#34;,\u0026#34;,2) s ret=##Class(MI.Common.MachineResult).SaveImage(ReceiveDate, epis, ImageClass, ImageOrder, FileName, mi, Caption, DisplayRatio, Height, Width, Sequence) q ret } /// 返回给监听当前上传文件路径名称，默认不要动 /// w ##class(MI.MIFBeckmanRemisol).GetFtpMTHD(\u0026#34;7\u0026#34;) /// mi:仪器 ClassMethod GetFtpMTHD(mi, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //文件服务模式必须改的地方，老的FTP模式这么改了也没问题，所以建议都这样 s mi=$g(mi) q ##Class(MI.Common.MIFBase).GetMiFtpPath(mi) } /// Creator： 查询患者信息，监听配置上传前处理类后会定时调用这个query查询数据进行上传操作 /// CreatDate： 20140919 /// Description:： /// Table： /// Input： mi：仪器主键 /// Output： 仪器信息 /// Return： 仪器信息 /// Others： Query QryLabInfo(mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Query(ROWSPEC = \u0026#34;labno,labnoInfo,patInfo\u0026#34;) { } /// Query的执行方法 /// d ##class(%ResultSet).RunQuery(\u0026#34;MI.MIFRemisolN\u0026#34;,\u0026#34;QryLabInfo\u0026#34;,\u0026#34;24\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) ClassMethod QryLabInfoExecute(ByRef qHandle As %Binary, mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Status { Set repid=$i(^CacheTemp) Set ind=1 s mi=$g(mi),flag=$g(flag) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; //*--------------------------------\u0026gt;*申请项目 s AddDate=$zd($p($h,\u0026#34;,\u0026#34;,1)-8,8) f s AddDate=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate)) q:AddDate=\u0026#34;\u0026#34; d .s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d ..//20秒以内的先不上传，防止没接收完 ..i (AddDate=$zd($h,8)),(($p($h,\u0026#34;,\u0026#34;,2)-AddTime)\u0026lt;20) q ..s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime,\u0026#34;\u0026#34;)) ..s labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) ..i \u0026#39;$l(labno) q ..s labnoInfo=..GetLabnoInfo(mi,labno) ..s patInfo=\u0026#34;\u0026#34; ..s FileName=$zd($h,8)+$p($h,\u0026#34;,\u0026#34;,2)_MiUploadDR ..//输出hpr文件 ..s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo(FileName_\u0026#34;.hpr\u0026#34;,labnoInfo,labno,\u0026#34;\u0026#34;) ..d Trace^MI.MIF000(mi,FileName_\u0026#34;.hpr\u0026#34;_\u0026#34;$$\u0026#34;_labno_\u0026#34;$$\u0026#34;_labnoInfo,\u0026#34;上传信息\u0026#34;) ..d OutputRow ..//输出OK文件 ..s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo(FileName_\u0026#34;.OK\u0026#34;,patInfo,labno,\u0026#34;\u0026#34;) ..d Trace^MI.MIF000(mi,FileName_\u0026#34;.OK\u0026#34;_\u0026#34;$$\u0026#34;_labno_\u0026#34;$$\u0026#34;_patInfo,\u0026#34;上传信息\u0026#34;) ..d OutputRow /* //*--------------------------------\u0026gt;*复查项目 s AddDate=$zd($p($h,\u0026#34;,\u0026#34;,1)-8,8) f s AddDate=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;U\u0026#34;),AddDate)) q:AddDate=\u0026#34;\u0026#34; d .s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;U\u0026#34;),AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d ..//20秒以内的先不上传，防止没接收完 ..i (AddDate=$zd($h,8)),(($p($h,\u0026#34;,\u0026#34;,2)-AddTime)\u0026lt;20) q ..s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;U\u0026#34;),AddDate,AddTime,\u0026#34;\u0026#34;)) ..s labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) ..i \u0026#39;$l(labno) q ..s labnoInfo=..GetLabnoInfo(mi,labno) ..s patInfo=\u0026#34;\u0026#34; ..s FileName=$zd($h,8)+$p($h,\u0026#34;,\u0026#34;,2)_MiUploadDR ..//输出hpr文件 ..s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo(FileName_\u0026#34;.hpr\u0026#34;,labnoInfo,labno,\u0026#34;\u0026#34;) ..d Trace^MI.MIF000(mi,FileName_\u0026#34;.hpr\u0026#34;_\u0026#34;$$\u0026#34;_labno_\u0026#34;$$\u0026#34;_labnoInfo,\u0026#34;上传信息\u0026#34;) ..d OutputRow ..//输出OK文件 ..s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo(FileName_\u0026#34;.OK\u0026#34;,patInfo,labno,\u0026#34;\u0026#34;) ..d Trace^MI.MIF000(mi,FileName_\u0026#34;.OK\u0026#34;_\u0026#34;$$\u0026#34;_labno_\u0026#34;$$\u0026#34;_patInfo,\u0026#34;上传信息\u0026#34;) ..d OutputRow */ Set qHandle=$lb(0,repid,0) Quit $$$OK OutputRow Set ColFields=\u0026#34;labno,labnoInfo,patInfo\u0026#34; Set ^CacheTemp(repid,ind)=##Class(LIS.Util.Common).TransListNull(Data,ColFields) Set ind=ind+1 quit } ClassMethod QryLabInfoClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set repid=$LIST(qHandle,2) Kill ^CacheTemp(repid) Quit $$$OK } ClassMethod QryLabInfoFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set AtEnd=$LIST(qHandle,1) Set repid=$LIST(qHandle,2) Set ind=$LIST(qHandle,3) Set ind=$o(^CacheTemp(repid,ind)) If ind=\u0026#34;\u0026#34; { Set AtEnd=1 Set Row=\u0026#34;\u0026#34; } Else { Set Row=^CacheTemp(repid,ind) } s qHandle=$lb(AtEnd,repid,ind) Quit $$$OK } /// 得到标本信息 /// w ##class(MI.MIFRemisolN).GetLabnoInfo(24,\u0026#34;24092600054\u0026#34;) ClassMethod GetLabnoInfo(miRowId, labno) As %String { S miRowId=$G(miRowId),labno=$G(labno) K PLIST Q:\u0026#39;$L(miRowId)||\u0026#39;$L(labno) 0 K ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$J,miRowId,labno) S visitNumberDR=$O(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) Q:\u0026#39;$L(visitNumberDR) 1 S visitNumberData=$G(^dbo.RPVisitNumberD(visitNumberDR)) Q:\u0026#39;$L(visitNumberData) 2 D ScanOne^MI.MIF000(miRowId,labno) S chl=\u0026#34;\u0026#34;,chlList=\u0026#34;\u0026#34;,hcg5d=\u0026#34;\u0026#34;,chlCnt=0 F { S chl=$O(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$J,miRowId,labno,chl)) i $l(chl)\u0026#39;=0 { S:$E(chl,1)=\u0026#34;A\u0026#34; chlCnt=chlCnt+1 S:chl=\u0026#34;A179\u0026#34; hcg5d=chl Continue:chl=\u0026#34;A179\u0026#34; S chlList=chlList_\u0026#34;^^^\u0026#34;_chl_\u0026#34;\\\u0026#34; } else { Q:\u0026#39;$L(chl) } } I $L(hcg5d) { I (chlCnt\u0026#39;=2)\u0026amp;\u0026amp;(chlCnt\u0026#39;=3)\u0026amp;\u0026amp;(chlCnt\u0026#39;=4) { S hcg5d=\u0026#34;A178\u0026#34; } S chlList=chlList_\u0026#34;^^^\u0026#34;_hcg5d_\u0026#34;\\\u0026#34; } S chlList=$E(chlList,1,$L(chlList)-1) Q:\u0026#39;$L(chlList) 3 S locationDR=$LG(visitNumberData,22),location=\u0026#34;\u0026#34; S:$L(locationDR) location=$LG($G(^dbo.BTLocationD(locationDR)),3) S doctorDR=$LG(visitNumberData,23),doctor=\u0026#34;\u0026#34;,doctorCode=\u0026#34;\u0026#34; I $L(doctorDR) { S doctor=$LG($G(^dbo.BTDoctorD(doctorDR)),3) S doctorCode=$LG($G(^dbo.BTDoctorD(doctorDR)),2) } S receiveDate=$LG(visitNumberData,66) S receiveTime=$LG(visitNumberData,67) S receiveUserDR=$LG(visitNumberData,68),receiveUser=\u0026#34;\u0026#34; S:$L(receiveUserDR) receiveUser=$LG($G(^dbo.SYSUserD(receiveUserDR)),3) S patientId=$LG(visitNumberData,3) S surName=$LG(visitNumberData,13) S givenName=$LG(visitNumberData,14) S patName=surName_givenName S:surName=givenName patName=surName S speciesDR=$LG(visitNumberData,15),species=\u0026#34;\u0026#34;,speciesCode=\u0026#34;\u0026#34; I $L(speciesDR) { S species=$LG($G(^dbo.BTSpeciesD(speciesDR)),3) S speciesCode=$LG($G(^dbo.BTSpeciesD(speciesDR)),2) } S admTypeDR=$LG(visitNumberData,4),admType=\u0026#34;\u0026#34; S:$L(admTypeDR) admType=$LG($g(^dbo.BTAdmissionTypeD(admTypeDR)),3) S bed=$LG(visitNumberData,27) S age=$LG(visitNumberData,18) S ageUnitDR=$LG(visitNumberData,19),ageUnit=\u0026#34;\u0026#34;,ageUnitCode=\u0026#34;\u0026#34; I $L(ageUnitDR) { S ageUnit=$LG($g(^dbo.BTAgeUnitD(ageUnitDR)),3) S ageUnitCode=$LG($g(^dbo.BTAgeUnitD(ageUnitDR)),2) } S collectDate=$LG(visitNumberData,51) S collectTime=$LG(visitNumberData,52) S collectDateTime=collectDate_##Class(LIS.Core.Util).CvtClientTime(collectTime,\u0026#34;HHMMSS\u0026#34;) S diagnosis=$LG(visitNumberData,28) S birthday=$LG(visitNumberData,16) S:\u0026#34;MF\u0026#34;\u0026#39;[speciesCode speciesCode=\u0026#34;\u0026#34; S:\u0026#34;YMD\u0026#34;\u0026#39;[ageUnitCode ageUnitCode=\u0026#34;\u0026#34; S PLIST=0 S PLIST($I(PLIST))=\u0026#34;H|\\^\u0026amp;|||LIS^1|||||REMISOL||P|1|\u0026#34;_$ZD($H,8)_$TR($ZT($P($H,\u0026#34;,\u0026#34;,2),1),\u0026#34;:\u0026#34;) S patRecord=\u0026#34;P|1||||||||||||||||||||||||||||||||||\u0026#34; S $P(patRecord,\u0026#34;|\u0026#34;,4)=patientId s givenName=\u0026#34;\u0026#34; S $P(patRecord,\u0026#34;|\u0026#34;,6)=surName_\u0026#34;^\u0026#34;_givenName_\u0026#34;^^^\u0026#34; S $P(patRecord,\u0026#34;|\u0026#34;,8)=birthday_\u0026#34;^\u0026#34;_age_\u0026#34;^\u0026#34;_ageUnitCode S $P(patRecord,\u0026#34;|\u0026#34;,9)= speciesCode S $P(patRecord,\u0026#34;|\u0026#34;,14)= doctorCode S $P(patRecord,\u0026#34;|\u0026#34;,22)= diagnosis //诊断 S $P(patRecord,\u0026#34;|\u0026#34;,26)=location S PLIST($I(PLIST))=patRecord S order=\u0026#34;O|1|\u0026#34;_labno_\u0026#34;||\u0026#34;_chlList_\u0026#34;|||||||||||||||||||||\u0026#34; S specType=..GetSpecimen(labno) //S specTypeId=\u0026#34;S\u0026#34; // 样品类型，如血清、血浆、尿液等。0-血清，1-血浆，2-尿液，3-脑脊液，4-胃液，5-胸水，6-腹水，7-其他: I specType[\u0026#34;血清\u0026#34; { S specTypeId=\u0026#34;0\u0026#34; } ELSEIF specType[\u0026#34;血浆\u0026#34; { S specTypeId=\u0026#34;1\u0026#34; } ELSEIF specType[\u0026#34;尿\u0026#34; { S specTypeId=\u0026#34;2\u0026#34; } ELSEIF specType[\u0026#34;脑脊液\u0026#34; { S specTypeId=\u0026#34;3\u0026#34; } ELSEIF specType[\u0026#34;胃液\u0026#34; { S specTypeId=\u0026#34;4\u0026#34; } ELSEIF specType[\u0026#34;胸水\u0026#34; { S specTypeId=\u0026#34;5\u0026#34; } ELSEIF specType[\u0026#34;腹水\u0026#34; { S specTypeId=\u0026#34;6\u0026#34; } ELSE { S specTypeId=\u0026#34;7\u0026#34; } S $P(order,\u0026#34;|\u0026#34;,6)=\u0026#34;R\u0026#34; //priority:R=Routine,S=Stat S $P(order,\u0026#34;|\u0026#34;,8)=collectDateTime S $P(order,\u0026#34;|\u0026#34;,12)=\u0026#34;A\u0026#34; //Action Code: A=Add,C=Clear,Q=Control S $P(order,\u0026#34;|\u0026#34;,16)=specTypeId S PLIST($I(PLIST))=order S PLIST($I(PLIST))=\u0026#34;L|1|\u0026#34; s del=\u0026#34;[13][10]\u0026#34; s ret=\u0026#34;\u0026#34; s seq=\u0026#34;\u0026#34; f s seq=$o(PLIST(seq)) q:seq=\u0026#34;\u0026#34; d .s ret=ret_PLIST(seq)_del Q ret } /// 得到标本类型 ClassMethod GetSpecimen(labno As %String) As %String { s ret=\u0026#34;\u0026#34; s labno=\u0026#34; \u0026#34;_labno i \u0026#39;$d(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,labno)) q ret s RowId=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,labno,\u0026#34;\u0026#34;)) s obj=##class(dbo.RPVisitNumber).%OpenId(RowId) s spDr=obj.SpecimenDR s spDesc=\u0026#34;\u0026#34; i $l(spDr) d .s objSp=##class(dbo.BTSpecimen).%OpenId(spDr) .s spDesc=objSp.IName .s ret=spDesc q ret } /// w ##Class(MI.MIFBeckmanRemisol).GetPatInfo(6,1001367) ClassMethod GetPatInfo(mi, labno) As %String { s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$lg(RPVisitNumberData,3) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),3) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$lg(RPVisitNumberData,28) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; s Patna=PatName ;病人姓名 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode q RetString } // 监听做上传操作后调用改方法设置标本上传表状态 ClassMethod SaveSDFMTHD(mi, labno, epis, filename, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi),labno=$g(labno),epis = $g(epis),filename=$g(filename) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q s ret=##Class(MI.MachineUpload).SetSendFlag(mi,labno,\u0026#34;S\u0026#34;,filename) q } /// 保存图片Base64串到仪器 /// mi:仪器主键(*必填) /// epis:流水号(*必填) /// ImageClass:图片类别(*必填) /// base64Stream:图片的Base64流(*必填) /// fileName:文件名 /// ftpFfolderName:文件服务的文件夹名称 /// w ##Class(MI.MIFBeckmanRemisol).SaveBase64ToMachineTest() ClassMethod SaveBase64ToMachineTest() { s charStream=##class(%GlobalCharacterStream).%New() d charStream.Write(\u0026#34;Qk02fQAAAAAAADYEAAAoAAAAsAAAALAAAAABAAgAAAAAAAB5AAB0EgAAdBIAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADA3MAA8MqmAKo/KgD/PyoAAF8qAFVfKgCqXyoA/18qAAB/KgBVfyoAqn8qAP9/KgAAnyoAVZ8qAKqfKgD/nyoAAL8qAFW/KgCqvyoA/78qAADfKgBV3yoAqt8qAP/fKgAA/yoAVf8qAKr/KgD//yoAAABVAFUAVQCqAFUA/wBVAAAfVQBVH1UAqh9VAP8fVQAAP1UAVT9VAKo/VQD/P1UAAF9VAFVfVQCqX1UA/19VAAB/VQBVf1UAqn9VAP9/VQAAn1UAVZ9VAKqfVQD/n1UAAL9VAFW/VQCqv1UA/79VAADfVQBV31UAqt9VAP/fVQAA/1UAVf9VAKr/VQD//1UAAAB/AFUAfwCqAH8A/wB/AAAffwBVH38Aqh9/AP8ffwAAP38AVT9/AKo/fwD/P38AAF9/AFVffwCqX38A/19/AAB/fwBVf38Aqn9/AP9/fwAAn38AVZ9/AKqffwD/n38AAL9/AFW/fwCqv38A/79/AADffwBV338Aqt9/AP/ffwAA/38AVf9/AKr/fwD//38AAACqAFUAqgCqAKoA/wCqAAAfqgBVH6oAqh+qAP8fqgAAP6oAVT+qAKo/qgD/P6oAAF+qAFVfqgCqX6oA/1+qAAB/qgBVf6oAqn+qAP9/qgAAn6oAVZ+qAKqfqgD/n6oAAL+qAFW/qgCqv6oA/7+qAADfqgBV36oAqt+qAP/fqgAA/6oAVf+qAKr/qgD//6oAAADUAFUA1ACqANQA/wDUAAAf1ABVH9QAqh/UAP8f1AAAP9QAVT/UAKo/1AD/P9QAAF/UAFVf1ACqX9QA/1/UAAB/1ABVf9QAqn/UAP9/1AAAn9QAVZ/UAKqf1AD/n9QAAL/UAFW/1ACqv9QA/7/UAADf1ABV39QAqt/UAP/f1AAA/9QAVf/UAKr/1AD//9QAVQD/AKoA/wAAH/8AVR//AKof/wD/H/8AAD//AFU//wCqP/8A/z//AABf/wBVX/8Aql//AP9f/wAAf/8AVX//AKp//wD/f/8AAJ//AFWf/wCqn/8A/5//AAC//wBVv/8Aqr//AP+//wAA3/8AVd//AKrf/wD/3/8AVf//AKr//wD/zMwA/8z/AP//MwD//2YA//+ZAP//zAAAfwAAVX8AAKp/AAD/fwAAAJ8AAFWfAACqnwAA/58AAAC/AABVvwAAqr8AAP+/AAAA3wAAVd8AAKrfAAD/3wAAVf8AAKr/AAAAACoAVQAqAKoAKgD/ACoAAB8qAFUfKgCqHyoA/x8qAAA/KgBVPyoA8Pv/AKSgoACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wu0026#34;) d charStream.Write(\ux8fHx8fEAAADxAAAA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPHxAPHx8fEAAPEA8QAA8QDxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QDxAADx8fHx8fHx8fHxAPHx8QAA8fEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8fHxAPHx8fHx8fHx8fEA8QDxAAAAAADxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEA8fHx8QDx8fHx8fHx8fEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEA8QAAAADx8fHx8fHx8QDx8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QAA8fHx8fEA8fHx8fHxAPEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QDxAAAAAPHx8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEAAPHx8fHxAPEA8fEA8fEAAPE\u0026#34;) d charStream.Write(\u0026#34;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAAAAAPEAAPEA8QAA8QDxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QDx8QDx8QAA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8fHx8QAAAPEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAADx8fEA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAADxAAAAAPEAAAAAAPEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QAA8fEA8fHxAAAAAADxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QAAAAAAAADxAADxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADx8QAA8QAAAAAA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEA8fEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEAAPEA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAPEA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\u0026#34;) d charStream.Write(\u0026#34;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgICAAACAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgAAAgAAAgIAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAgICAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAC+gACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAgIAAgAAAPoCAAIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD6APr6AvoAAgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAICAgICAAACAPr6AAIAAgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA+voAAgAAAgD6AAAA+gIAAgAAAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAD6AAACAAIAAAIAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD6AAAAAPr6AgL6AAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAPoC+gAC+gAAAgAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvoAAAD6AgAC+gD6+gD6AgIAAgIAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6+gIAAPr6+gD6+gL6AAD6AAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAACAPoA+gD6+vr6AgL6AAICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPoAAAACAvoCAgD6AvoCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAL6APoCAgAC+vr6+gICAAAAAgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+gACAgAAAgIAAAACAgACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6+gAC+gIC+voC+gIAAAD6AAIAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIAAvr6+gAAAgICAgD6AAACAPoCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPoAAgD6+voCAvr6AvoAAgIAAgACAAAAAAAAAAAAAAAAAAAAAAAAAAA\u0026#34;) d charStream.Write(\u0026#34;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAICAAACAAACAgD6+gIA+voC+gACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+gIAAAICAAIAAAL6AvoAAgIAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgIA+gAAAgL6+vr6+gACAAICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAQABAQAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAIA+gAA+voCAPoAAgIA+gACAAICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAEAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAvoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAQAAAAABAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6+gICAgIAAPr6+gAAAAAAAAIAAgAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAAACAAAAAAL6AgICAAACAgAAAAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAABAAABAAAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL6AgACAgD6AAIA+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAAAAAAAAAgACAgIAAAIAAAACAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAABAAAAAAD5AQAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAICAAIAAPoAAgL6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQABAAAAAAAAAAAAAQAAAAABAAEAAAABAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAD6AAAAAAAAAAAAAAAAAgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAgAAAAIAAgAAAgAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAQEAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgAAAAIAAAAAAAAAAgIAAAAA+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAA+QAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgACAPogAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\u0026#34;) d charStream.Write(\u0026#34;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAAABAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAFBQAFAAAAAAD9AAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9AAAFBQAFAAX9AAAAAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAABgAAAAAGAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAFBf0ABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAYGAAAABgYGAAAAAAAGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFAAUAAAUAAAAFAAAFBQUAAAAAAAAAAAAAAAAAAAYAAAAABgAAAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFAAUAAAUABQAAAAUFAAAAAAAFAAAAAAAAAAAAAAAAAAAAAP4GBgYGBv4AAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFBQD9AAAFBQAAAP0AAAUAAP0AAAUFAAAAAAAAAAAAAAAAAP4GAAAABgb+BgYABgAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAF/QX9BQAFBf0AAAAABQAAAAAAAAAAAAAAAAAABgD+BgAABgYGAP4GBgYAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/QAFBQD9/f0ABQAFBf0AAAAFAAAAAAAAAAAAAAAAAAAABgb+AAD+BgYGBv4GAP4G/gYGAAAGBgYAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQD9AAX9/QAABQAFBQAAAP0ABQAAAAAAAAYABgAGAAb+Bgb+AP4ABgb+/v4GBgAGAAAGAAYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAP0F/QD9Bf39AP39AAAAAAAFAAAAAAAAAAAABgYABgYGAP7+/v4GBgb+Bv4ABgAABgAGBgYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAFAAX9/f39AAX9AAUF/QUAAAAAAAAAAAAABgAAAAAABgYGBv4G/v7+/v7+/v7+/v7+AAYGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUF/QX9AP39BQAFAP39/QUA/QAAAAAAAAAGAAAAAAAGAP4GBv7+/v7+/v7+/v7+/gYGBgb+BgD+AAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBQX9AAUABQUABf0AAP0AAAX9AAAFAAAAAAAGBgYABv7+/v7+AAb+/v7+/v7+/v7+/v4GBv4GAAb+AAAGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAA/QUFAAX9/QX9AP0FBQAA/QAAAAAAAAAAAAYGAAD+AAD+/v7+/v7+/v7+/v7+/v7+Bv4GBgYAAAAGBgAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAX9Bf39AAD9BQAA/QD9/QAABQAFAAYAAAAABgAG/gYG/v7+/v7+/v7+/v7+/v7+/v4GBv7+AAYGBgAAAAYGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF/QAF/\u0026#34;) d charStream.Write(\u0026#34;QUF/QAFBf0AAAAFAAAAAAAAAAAAAAAAAAAAAP7+/gb+/v7+/v7+/v7+/v7+/v7+/v4GAAYGAAAGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/f0A/QD9AAAFBQAABQAAAAAAAAAAAAAAAAAABgAGAP4G/v7+/v7+/v7+/v7+/v7+/v7+/v4G/gAGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAA/QUAAAAFAAD9BQAABQAAAAAAAAAAAAAAAAYABgYGBgb+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/gAABgYGAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP0FAAUABQAA/QX9BQAFBQAAAAAAAAAAAAAAAAAAAAAG/v7+/gb+/v7+/v7+/v7+/v7+/v7+/v7+/gYGBgYGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUAAAD9/QX9BQAAAAAABQAAAAAAAAAAAAYGAAAAAAYA/gD+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v4ABgYAAAYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFAAAAAAAAAAAABgYAAAYA/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v4GAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAUFAAAABQAAAAAAAAAAAAUAAAAAAAAABgAAAAYAAAb+/gYGBv7+/v7+/v7+/v7+/v7+/v7+Bv7+/v4GBgAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAFAAAAAAAAAAAABgYGAAAGBgYGBv7+/v7+/v7+/v7+/v7+/v4G/v7+BgAABgYGAAYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAABgYGBv7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/gYA/gAG/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYG/v7+/v7+/v7+/v7+/v7+/v7+Bgb+AAYGAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYABgAG/v4G/gb+/v7+/v7+/v7+/v7+BgAGBgAGAAYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYABv4G/v4A/v7+/v4G/v7+/v7+/gb+BgAABgYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYABgAA/v7+/v7+BgYA/v4GBv4GBv4GAAYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYABgYAAP7+/v4G/v4GBgYGBgYGBgYAAAAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYABgYABgYABgYAAAb+/gAGBgYABgYGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAGBgYAAAYGBgAGAAYABgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAABgAAAAAABgAGBgAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAAAAYAAAAGBgu0026#34;) d charStream.Write(\u0026#34;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\u0026#34;) d charStream.Write(\uu0026#34;) d charStream.Write(\uu0026#34;) s mi=16 s epis=999 s ret=##Class(MI.Common.MIFBase).SaveBase64ToMachine(mi,epis,\u0026#34;DIFF\u0026#34;,charStream,epis_\u0026#34;-DIFF.bmp\u0026#34;,\u0026#34;ZLZ\u0026#34;) i ret\u0026#39;=1 d Trace^MI.MIF000(mi,\u0026#34;错误\u0026#34;_ret,\u0026#34;H\u0026lt;--M\u0026#34;) q ret } /// 转移标本 /// w ##Class(MI.MIFRemisolN).TransMachineGroup(1,9000000071,\u0026#34;DXI800\u0026#34;) /// w ##Class(MI.MIFRemisolN).TransMachineGroup(1,9000000071,\u0026#34;AU5800\u0026#34;) ClassMethod TransMachineGroup(mi, epis, machineName) { s ret=\u0026#34;\u0026#34; i $l(epis)\u0026lt;7 d .s epis=$$GetLabnoByEpis(mi,epis) s date=$zd($h,8) s WGMachineID=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) s VisitnumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,epis,\u0026#34;\u0026#34;)),ReportDR=\u0026#34;\u0026#34; i $d(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitnumberDR,WGMachineID,1)) d .s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitnumberDR,WGMachineID,1,\u0026#34;\u0026#34;),-1) //----------------------转移标本 i machineName=\u0026#34;AU5800\u0026#34; d .s TransMachineGroupDR=61 .s ParamList=TransMachineGroupDR_\u0026#34;^@\u0026#34;_ReportDR .s ret=##Class(LISSP.DHCRPVisitNumberReport).TransMachineGroup(ParamList,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P0\u0026gt;\u0026lt;/P0\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;8280^18^0^2^1\u0026#34;,\u0026#34;\u0026#34;) .;i ret[\u0026#34;流水号已存在\u0026#34; d\t//YHR 20230101 如果流水号冲突是否获取最大流水号保证转移成功 ..s objReport=##class(dbo.RPVisitNumberReport).%OpenId(ReportDR) ..s NewEpis=##Class(LISSP.DHCRPVisitNumberReport).GetMaxEpisodeNo(TransMachineGroupDR,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P0\u0026gt;\u0026#34;_$zd($h,3)_\u0026#34;\u0026lt;/P0\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,$c(0)) ..s objReport.EpisodeNo=NewEpis ..s sc=objReport.%Save() ..s ret=##Class(LISSP.DHCRPVisitNumberReport).TransMachineGroup(ParamList,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P0\u0026gt;\u0026lt;/P0\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;8280^18^0^2^1\u0026#34;,\u0026#34;\u0026#34;) i machineName=\u0026#34;DXI800\u0026#34; d .s TransMachineGroupDR=71 .s ParamList=TransMachineGroupDR_\u0026#34;^@\u0026#34;_ReportDR .s ret=##Class(LISSP.DHCRPVisitNumberReport).TransMachineGroup(ParamList,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P0\u0026gt;\u0026lt;/P0\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;8280^18^0^2^1\u0026#34;,\u0026#34;\u0026#34;) .;i ret[\u0026#34;流水号已存在\u0026#34; d ..s objReport=##class(dbo.RPVisitNumberReport).%OpenId(ReportDR) ..s NewEpis=##Class(LISSP.DHCRPVisitNumberReport).GetMaxEpisodeNo(TransMachineGroupDR,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P0\u0026gt;\u0026#34;_$zd($h,3)_\u0026#34;\u0026lt;/P0\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,$c(0)) ..s objReport.EpisodeNo=NewEpis ..s sc=objReport.%Save() ..s ret=##Class(LISSP.DHCRPVisitNumberReport).TransMachineGroup(ParamList,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P0\u0026gt;\u0026lt;/P0\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;8280^18^0^2^1\u0026#34;,\u0026#34;\u0026#34;) q ret GetLabnoByEpis(mi,Epis) s ret=\u0026#34;\u0026#34;,mi=$g(mi) s date=$zd($h,8) i \u0026#39;$l(mi) q Epis s WGMachineID=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) i \u0026#39;$l(WGMachineID) q Epis i $d(^dbo.RPVisitNumberReportI(\u0026#34;IndexEpisodeNo\u0026#34;,date,WGMachineID,##Class(LIS.Util.Common).IndexData(Epis))) { s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexEpisodeNo\u0026#34;,date,WGMachineID,##Class(LIS.Util.Common).IndexData(Epis),\u0026#34;\u0026#34;),-1) S VisitNumberDR=$LG($G(^dbo.RPVisitNumberReportD(ReportDR)),2) s ret=$lg(^dbo.RPVisitNumberD(VisitNumberDR),2) } q ret } } 通过串口网口主动上传 上传和下载为不同的串口或端口 示例代码(西门子流水线) 仪器为两个接口，一个接口上传，一个接口接收数据解析数据。上传数据为在 main 调用 Build2 方法循环调用读取 dbo.RPMachineUpload 表中的数据。\n接收数据 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 MIFNYSIMRec(mi) ; 7/17/14 ; ASTM protocol - 西门子流水线(MCR) s mi=$g(mi) i \u0026#39;$l(mi) q s ^TMPMACHDATA1(mi,11)=mi s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),17) //端口号 S $ECODE=\u0026#34;\u0026#34; //捕获运行时错误,并显示 //控制字符 S stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4) S lf=$c(10),cr=$c(13),nak=$c(21),(result,epis)=\u0026#34;\u0026#34;,etb=$c(23) s isDebug=1,iError=0 s ^TMPMACHDATA1(mi,10)=mi i $$StartUTF8^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q s ^TMPMACH10(mi,50)=$h c Port q Main ;s ^MIFSIMENSTRecive=$zdt($h,3) S $ZT=\u0026#34;RuntimeError\u0026#34; r *R:10 e d q .;d BUILD2 i $c(R)\u0026#39;=enq Q s AllRecord=\u0026#34;\u0026#34; d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) d ACK f r *R:10 q:$c(R)=eot d .i $c(R)\u0026#39;=stx q .s record=$$Read^MI.MIF000(mi,\u0026#34;\u0026#34;,lf) q:\u0026#39;$l(record) .s record=$e(record,2,$l(record)-1) .d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) .i $l(record,etb)\u0026gt;1 s AllRecord=AllRecord_$p($e(record,1,$l(record)-1),etb,1) .i $l(record,etx)\u0026gt;1 s AllRecord=AllRecord_$p($e(record,1,$l(record)-1),etx,1) .d ACK .s type=$tr($p(record,\u0026#34;|\u0026#34;,1),\u0026#34; \u0026#34;) .i type=\u0026#34;M\u0026#34; d q ..s Intype=$tr($p($p(record,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ..s Inlabno=$tr($p($p(record,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,2),\u0026#34; \u0026#34;) ..d Trace^MI.MIF000(mi,Inlabno,\u0026#34;Inlabno\u0026#34;) ..try{s ret=##class(MI.Special.AutomaticReceipt).ZDHS(mi,Inlabno)}catch{}\t//YHR 20230910 生化流水线自动核收 d Trace^MI.MIF000(mi,$s($c(R)=eot:\u0026#34;EOT\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) s k=1 d Trace^MI.MIF000(mi,AllRecord,\u0026#34;AllRecord\u0026#34;) i $c(R)=eot,$l(AllRecord) d .s (mid,sample,epis,surname,rec,res,result,date,time,QC,flag,machiecode)=\u0026#34;\u0026#34; .f i=1:1:$l(AllRecord,cr) d ..s rec=$p(AllRecord,cr,i) ..s type=$tr($p(rec,\u0026#34;|\u0026#34;),\u0026#34; \u0026#34;) ..i type=\u0026#34;H\u0026#34; d q ..i type=\u0026#34;M\u0026#34; d q ...s Intype=$tr($p($p(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ...s Inlabno=$tr($p($p(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,2),\u0026#34; \u0026#34;) ...d Trace^MI.MIF000(mi,Inlabno,\u0026#34;Inlabno\u0026#34;) ...;try{s ret=##class(MI.Special.AutomaticReceipt).ZDHS(mi,Inlabno)}catch{}\t//YHR 20230910 生化流水线自动核收 ..i type=\u0026#34;O\u0026#34; d q ...s epis=$tr($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34; \u0026#34;) ..i type=\u0026#34;R\u0026#34; d q ...s code=$p($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,4),\u0026#34;/\u0026#34;,1) ...s flag=$p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,8) ...s machiecode=$p($p(rec,\u0026#34;|\u0026#34;,14),\u0026#34;_\u0026#34;,1) ...i machiecode=\u0026#34;CentaurXP\u0026#34;,flag\u0026#39;=\u0026#34;DOSE\u0026#34; Q ...//R|1|^^^Glu^Neat^1.0^^^N|7.70|||||||^batch|20191116093550||Advia2400_1【13】【3】C2 ...s MachID=$P($p(rec,\u0026#34;|\u0026#34;,14),$C(13),1) ...s res=$p(rec,\u0026#34;|\u0026#34;,4) ...I res=\u0026#34;No Result\u0026#34; s res=\u0026#34;\u0026#34; ...i \u0026#39;$l(code) q ...i \u0026#39;$l(res) q ...s result=result_code_ResultDeli_res_ItemDeli ...s DateStr=$p(rec,\u0026#34;|\u0026#34;,13) ...s:\u0026#39;$L(DateStr) DateStr=$p(rec,\u0026#34;|\u0026#34;,12) ...i $l(DateStr) d ....s date=$zdh($e(DateStr,1,4)_\u0026#34;-\u0026#34;_$e(DateStr,5,6)_\u0026#34;-\u0026#34;_$e(DateStr,7,8),3) ....s time=($e(DateStr,9,10)*3600)+($e(DateStr,11,12)*60+$e(DateStr,13,14)) ..s k=k+1 ..i type=\u0026#34;L\u0026#34; d Last q q Last ;s resultmi=40 d Trace^MI.MIF000(mi,mi,\u0026#34;仪器rowid\u0026#34;) d Trace^MI.MIF000(mi,date_\u0026#34;^\u0026#34;_time_\u0026#34;^\u0026#34;_epis_\u0026#34;^:\u0026#34;_result,\u0026#34;Save in SIMENS\u0026#34;) i $l(epis),$l(result) d Save^MI.MIF000(mi,epis,result,date,time,QC) s (epis,result,date,time,QC)=\u0026#34;\u0026#34; ///标本核收 ; i $l(epis),\u0026#39;$d(^DHCUploadAllBAK(\u0026#34;B\u0026#34;,epis)) s retVal=$$ReceiveLabno^MI.MIF000(28,epis,\u0026#34;\u0026#34;) q RuntimeError h 10 s iError=iError+1 d Trace^MI.MIF000(mi,\u0026#34;Error Code:\u0026#34;_$ECODE_\u0026#34;,Error:\u0026#34;_$ZERROR,\u0026#34;Runtime Error\u0026#34;) i iError\u0026gt;100 s ret=$$Stop^MI.MIF000(mi) Q ///CreateDate： 20140717 ///Description： 构建医嘱列表 ///Table DHC_LoadSpecimen ///Input：\t///Output：\t///Return：\t///Others：DHCLoadSpecimen(0,\u0026#34;DateTime\u0026#34;,\u0026#34;TDMTS\u0026#34;,\u0026#34;C\u0026#34;,62301,42467,\u0026#34;T623010010\u0026#34;,\u0026#34;T101\u0026#34;,1) /// ^DHCLoadSpecimen({DHC_LoadSpecimen.DLSP_LabNo},{DHC_LoadSpecimen.DLSP_TS},{DHC_LoadSpecimen.DLSP_TSCNT},\u0026#34;TC\u0026#34;,{DLST_TestCode}) /// ^DHCLoadSpecimen({DLSP_LabNo},{DLSP_TS},{DLSP_TSCNT}) /// W $$BUILD2^DEBUG BUILD2 i $d(^DHCENQ(1)) d .d SendENQ .k ^DHCENQ Q //wwh,20140812,不上传标本 K ^TMP($zn,$j) I \u0026#39;$D(^DHCLoadSpecimen(0,\u0026#34;DateTime\u0026#34;,mi,\u0026#34;C\u0026#34;,+$h)) H 10 Q S SIMTT=\u0026#34;\u0026#34; F S SIMTT=$o(^DHCLoadSpecimen(0,\u0026#34;DateTime\u0026#34;,mi,\u0026#34;C\u0026#34;,+$h,SIMTT)) Q:SIMTT=\u0026#34;\u0026#34; D .S SIMEpis=\u0026#34;\u0026#34; F S SIMEpis=$o(^DHCLoadSpecimen(0,\u0026#34;DateTime\u0026#34;,mi,\u0026#34;C\u0026#34;,+$h,SIMTT,SIMEpis)) Q:SIMEpis=\u0026#34;\u0026#34; D ..S SIMTS=\u0026#34;\u0026#34; F S SIMTS=$O(^DHCLoadSpecimen(0,\u0026#34;DateTime\u0026#34;,mi,\u0026#34;C\u0026#34;,+$h,SIMTT,SIMEpis,SIMTS)) Q:SIMTS=\u0026#34;\u0026#34; D ...S epis=SIMEpis ...S SIMAck=$$BUILD() ...;;;I (SIMAck=3)!(SIMAck=6) D ...I SIMAck=0 D ....;;S err=$$UpdSendStatus^DHCLABLoadSpecimen(mi,epis,1,SIMTS) ....S err=$$UpdSendStatus^DHCLABLoadSpecimen(mi,epis,1) ...E D ....S err=$$UpdSendStatus^DHCLABLoadSpecimen(mi,epis,0) Q BUILD() S episx=epis,epis=$P(epis,\u0026#34;-\u0026#34;,1),suffix=\u0026#34;\u0026#34;,RetAck=1 S ^TMPsim(1)=epis I $l(epis),\u0026#39;$D(^TEPI(epis,1)) S suffix=$E(epis,$L(epis)),epis=$E(epis,1,$L(epis)-1) I $L(epis),\u0026#39;$D(^TEPI(epis,1)) Q S ^TMPsim(2)=epis_\u0026#34;,\u0026#34;_mi_\u0026#34;,\u0026#34;_suffix ;;;S err=$$CreateTCList^MIF000(mi,epis,SIMTS) ;创建上传医嘱列表 S err=$$CreateTCList^MIF000(mi,epis) ;创建上传医嘱列表 M ^TMPCHL(7)=^TMP(\u0026#34;MIF-SINGLE\u0026#34;,$j) Q:\u0026#39;$D(^TMP(\u0026#34;MIF-SINGLE\u0026#34;,$j,mi,epis_suffix)) M ^TMPCHL(2)=^TMP(\u0026#34;MIF-SINGLE\u0026#34;,$j) S (surn,givn,sex,dob,date,urno,age,loc)=\u0026#34;\u0026#34; ; check for entered/pre-entered patient details K PLIST I \u0026#39;$$select^LVBEPVIS(epis,\u0026#34;Y\u0026#34;) D .F j=\u0026#34;surn;3\u0026#34;,\u0026#34;givn;4\u0026#34;,\u0026#34;sex;5\u0026#34;,\u0026#34;dob;6\u0026#34;,\u0026#34;date;12\u0026#34;,\u0026#34;urno;20\u0026#34;,\u0026#34;age;26\u0026#34;,\u0026#34;loc;66\u0026#34; S @($P(j,\u0026#34;;\u0026#34;))=$g(PLIST($p(j,\u0026#34;;\u0026#34;,2))) K PLIST S sex=$P(sex,$c(1),1) s:sex=\u0026#34;\u0026#34; sex=\u0026#34;M\u0026#34; S urno=$p(urno,$c(1),1) I givn=surn s givn=\u0026#34;\u0026#34; S diag=$P($G(^TEPI(epis,8)),\u0026#34;\\\u0026#34;,15) ;;; 诊断 S SpecType=$$GetSpecType(epis) ;;; 标本 I $l(epis),$D(^TEPI(epis)) D .D scanone^MIF000(mi,epis) ;^TMP(\u0026#34;MIF-SINGLE\u0026#34;,208912,\u0026#34;AH7471\u0026#34;,\u0026#34;A611071030\u0026#34;,1)= .S tcx=\u0026#34;\u0026#34; .S chl=\u0026#34;\u0026#34; F S chl=$o(^TMP(\u0026#34;MIF-SINGLE\u0026#34;,$j,mi,epis,chl)) Q:chl=\u0026#34;\u0026#34; D ..;s tcs=tcs_\u0026#34;^^^\u0026#34;_chl_\u0026#34;/\\\u0026#34; ..S tcx=tcx_\u0026#34;^^^\u0026#34;_chl_\u0026#34;^0\\\u0026#34; .S tcx=$e(tcx,1,$L(tcx)-1) .I \u0026#39;$L(tcx) S tcx=\u0026#34;^^^^^^0\u0026#34; .S xx=$$extdate2^SSUTIL4($h),date=$p(xx,\u0026#34;/\u0026#34;,3)_$p(xx,\u0026#34;/\u0026#34;,2)_$p(xx,\u0026#34;/\u0026#34;,1) .S xx=$$exttime^SSUTIL4($p($h,\u0026#34;,\u0026#34;,2)),time=$p(xx,\u0026#34;:\u0026#34;,1)_$p(xx,\u0026#34;:\u0026#34;,2)_\u0026#34;00\u0026#34; .S temepis=\u0026#34;\u0026#34; .;1H|\\^\u0026amp;|||BSLIS^V3.00|||||||P|1\u0026lt;CR\u0026gt; .S str=\u0026#34;1H|\\^\u0026amp;|||BSLIS^V3.00|||||host|TSDWN^REPLY|P|1\u0026#34;_cr ;头信息 .;2P|1|0010332409|0010332409||Doe^JohnlSmith||19150826|F|||||||||||||||||5500|||||||||\u0026lt;CR\u0026gt; .S str=str_\u0026#34;2P|1\u0026#34;_cr ;病人信息 .S str=str_\u0026#34;2P|1\u0026#34;_cr .I epis=\u0026#34;N\u0026#34; s epis=\u0026#34;\u0026#34; .;3O|1|112448100||^^^TP^^^0\\^^^ALB^^^0|R||20110826112206||||A|hep|lipemic||Serum||||||||||Q\u0026lt;CR\u0026gt; .S str=str_\u0026#34;3O|1|\u0026#34;_epis_\u0026#34;||\u0026#34;_tcx_\u0026#34;|R||\u0026#34;_date_time_\u0026#34;||||A|hep|lipemic||\u0026#34;_SpecType_\u0026#34;||||||||||\u0026#34; .S str=str_\u0026#34;Q\u0026#34;_cr .;4L|1\u0026lt;CR\u0026gt; .S str=str_\u0026#34;4L|1|\u0026#34;_cr .S RetAck=$$Send(epis,str) .K ^TMIF(\u0026#34;MIF_SINGLE\u0026#34;,$j,mi,epis) S ^TMPsim(mi,$H,epis)=str_\u0026#34;||\u0026#34;_RetAck Q RetAck Send(epis,str) ; send list of orders if exists W enq,*-3 d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) S ret=1 F j=1:1:10 R *R:1 I $c(R)=ack!($c(R)=enq) Q d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;1H\u0026lt;--M\u0026#34;) I $c(R)=enq Q ret I $c(R)\u0026#39;=ack W eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) Q ret I $L(str)\u0026gt;241 D .S str1=$e(str,1,241) .S ret=$$SEND(str1,1) .S str2=\u0026#34;2\u0026#34;_$E(str,242,$L(str)) .S ret=$$SEND(str2,0) E D .S ret=$$SEND(str,0) ;f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q ;d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;2H\u0026lt;--M\u0026#34;) W eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) Q ret SEND(str,flag) ; send string to instrument I flag=1 D .S str=str_etb .S chsum=$$CHSUM(str) E D .S str=str_etx .S chsum=$$CHSUM(str) W stx,str,chsum,cr,lf,*-3 d Trace^MI.MIF000(mi,str_chsum,\u0026#34;H--\u0026gt;M\u0026#34;) F j=1:1:6 R *R:1 I ($c(R)=ack)!($c(R)=eot) Q I $c(R)=ack d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) Q 0 I $c(R)=eot d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) Q 0 I $c(R)=-1 W nak,*-3 d Trace^MI.MIF000(mi,R,\u0026#34;H\u0026lt;--M\u0026#34;) Q 1 CHSUM(x) ; calculate check sum n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y) s z=$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#256\\16+1)_$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#16+1) q z ACK ; send \u0026#39;ack\u0026#39; to instrument w ack,*-3 d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q NEXTTRAY(tray) q tray /// GetSpecType(labno) n (labno) s labno=$g(labno) s spdr=$o(^TEPI(labno,4,\u0026#34;\u0026#34;)) s RetVal=\u0026#34;SE\u0026#34; s spec=\u0026#34;\u0026#34; i $l(spdr),$d(^TTAB(\u0026#34;SPEC\u0026#34;,spdr)) s spec=$p(^TTAB(\u0026#34;SPEC\u0026#34;,spdr),\u0026#34;\\\u0026#34;,1) i spec[\u0026#34;血\u0026#34; s RetVal=\u0026#34;SE\u0026#34; i spec[\u0026#34;尿\u0026#34; s RetVal=\u0026#34;UR\u0026#34; q RetVal SendENQ ; send list of orders if exists W enq,*-3 d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) //r *R:10 e d q //.d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;1H\u0026lt;--M\u0026#34;) F j=1:1:10 R *R:1 I $c(R)=ack!($c(R)=enq) d .d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;1H\u0026lt;--M\u0026#34;) I $c(R)=enq Q I $c(R)\u0026#39;=ack W eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q 发送数据end(mi) ; 7/17/14 ; ASTM protocol - 西门子流水线(MCR) s mi=$g(mi) i \u0026#39;$l(mi) q s ^TMPMACHDATA1(mi,11)=mi s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 //控制字符 s isDebug=1,iError=100 S stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4) S lf=$c(10),cr=$c(13),nak=$c(21),(result,epis)=\u0026#34;\u0026#34;,etb=$c(23) s ^TMPMACHDATA1(mi,10)=mi i $$Start^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q s ^TMPMACH10(mi,50)=$h c Port q Main S $ZT=\u0026#34;RuntimeError\u0026#34;,$ECODE=\u0026#34;\u0026#34; //捕获运行时错误,并显示 r *R:10 e d q .D BUILD2 i $c(R)=enq d .s AllRecord=\u0026#34;\u0026#34; .d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) .d ACK .f r *R:10 q:$c(R)=eot d ..i $c(R)\u0026#39;=stx q ..s record=$$Read^MI.MIF000(mi,\u0026#34;\u0026#34;,lf) q:\u0026#39;$l(record) ..s record=$e(record,2,$l(record)-1) ..d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) ..i $l(record,etb)\u0026gt;1 s AllRecord=AllRecord_$p($e(record,1,$l(record)-1),etb,1) ..i $l(record,etx)\u0026gt;1 s AllRecord=AllRecord_$p($e(record,1,$l(record)-1),etx,1) ..;s AllRecord=AllRecord_$p(record,etb,1) ..;s AllRecord=AllRecord_$p(record,etx,1) ..d ACK .d Trace^MI.MIF000(mi,$s($c(R)=eot:\u0026#34;EOT\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) .i $c(R)=eot,$l(AllRecord) d ..s (mid,sample,epis,surname,rec,res,result,date,time,QC)=\u0026#34;\u0026#34; ..f i=1:1:$l(AllRecord,cr) d ...s rec=$p(AllRecord,cr,i) ...s type=$tr($p(rec,\u0026#34;|\u0026#34;),\u0026#34; \u0026#34;) ...i type=\u0026#34;H\u0026#34; d q ...i type=\u0026#34;M\u0026#34; d q ....s Intype=$tr($p($p(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ....s Inlabno=$tr($p($p(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,2),\u0026#34; \u0026#34;) ....d Trace^MI.MIF000(mi,Inlabno,\u0026#34;Inlabno\u0026#34;) ....try{s ret=##class(MI.Special.AutomaticReceipt).ZDHS(mi,Inlabno)}catch{}\t//YHR 20230910 生化流水线自动核收 ....i Intype=\u0026#34;I\u0026#34; d .....i $l(Inlabno)=0 q .....q:\u0026#39;$d(^TEPI(Inlabno)) .....s temts=\u0026#34;\u0026#34; f s temts=$o(^TEPI(Inlabno,1,temts)) q:temts=\u0026#34;\u0026#34; d ......;q:\u0026#39;$d(^TMIF(mi,0,temts)) ......s temtscnt=\u0026#34;\u0026#34; f s temtscnt=$o(^TEPI(Inlabno,1,temts,temtscnt)) q:temtscnt=\u0026#34;\u0026#34; d .......s:$P(^TEPI(Inlabno,1,temts,temtscnt),\u0026#34;\\\u0026#34;,27)=\u0026#34;\u0026#34; $P(^TEPI(Inlabno,1,temts,temtscnt),\u0026#34;\\\u0026#34;,27)=mi .......s:$P(^TEPI(Inlabno,1,temts,temtscnt),\u0026#34;\\\u0026#34;,36)=\u0026#34;\u0026#34; $P(^TEPI(Inlabno,1,temts,temtscnt),\u0026#34;\\\u0026#34;,36)=$P(^TEPI(Inlabno,1,temts,temtscnt),\u0026#34;\\\u0026#34;,60) ...i type=\u0026#34;O\u0026#34; d q ....s epis=$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ....s qcid=$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,2),\u0026#34; \u0026#34;) ....s qcid=$tr(qcid,\u0026#34;-\u0026#34;) ....s QCStat=$tr($p(rec,\u0026#34;|\u0026#34;,4),\u0026#34; \u0026#34;) ....s SpecStat=$tr($p(rec,\u0026#34;|\u0026#34;,6),\u0026#34; \u0026#34;) ....i SpecStat=\u0026#34;S\u0026#34; s epis=\u0026#34;E\u0026#34;_epis ....i QCStat=\u0026#34;Q\u0026#34; s QC=\u0026#34;\\\u0026#34;_qcid,epis=qcid ....s datex=$p(rec,\u0026#34;|\u0026#34;,23) ....s date=$e(datex,5,6)_\u0026#34;/\u0026#34;_$e(datex,7,8)_\u0026#34;/\u0026#34;_$e(datex,1,4),date=$$intdate^SSUTIL4(date) ....s time1=$e(datex,9,10)_\u0026#34;:\u0026#34;_$e(datex,11,12)_\u0026#34;:\u0026#34;_$e(datex,13,14),time1=$$inttime^SSUTIL4(time1) ...i type=\u0026#34;R\u0026#34; d q ....s code=$p($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,4),\u0026#34;/\u0026#34;,1) ....s flag=$p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,8) ....s mid1=$p(rec,\u0026#34;|\u0026#34;,14) ....i mid1\u0026#39;=\u0026#34;\u0026#34; s mid=mid1 ....s res=$p(rec,\u0026#34;|\u0026#34;,4) ....s ^Test(i)=res_\u0026#34;\\\u0026#34;_flag ....i mid1[\u0026#34;CentaurXP\u0026#34;,$l(code),$l(res) D .....i flag=\u0026#34;DOSE\u0026#34; d ......s result=result_code_$c(par10)_res_$c(par11) //....E D ....i $l(code),$l(res) D .....s result=result_code_$c(par10)_res_$c(par11) ... //i type=\u0026#34;L\u0026#34; d Last q D BUILD2 q Last\t; file result if exist s AllRecord=\u0026#34;\u0026#34; i time1=\u0026#34;\u0026#34; s time1=$p($h,\u0026#34;,\u0026#34;,2) s time=time1 S date=$P($H,\u0026#34;,\u0026#34;,1),time=$P($H,\u0026#34;,\u0026#34;,2) i $l(epis),$l(result) d Save^MI.MIF000(mi,epis,result,date,time,QC) q RuntimeError h 10 s iError=iError+1 d Trace^MI.MIF000(mi,\u0026#34;Error Code:\u0026#34;_$ECODE_\u0026#34;,Error:\u0026#34;_$ZERROR,\u0026#34;Runtime Error\u0026#34;) D:isDebug Log(mi,\u0026#34;Error Code:\u0026#34;_$ECODE_\u0026#34;,Error:\u0026#34;_$ZERROR) i iError\u0026gt;100 s ret=$$Stop^MI.MIF000(mi) Q ///CreateDate： 20140717 ///Description： 构建医嘱列表 ///Table DHC_LoadSpecimen ///Input：\t///Output： ///Return：\t///Others：DHCLoadSpecimen(0,\u0026#34;DateTime\u0026#34;,\u0026#34;TDMTS\u0026#34;,\u0026#34;C\u0026#34;,62301,42467,\u0026#34;T623010010\u0026#34;,\u0026#34;T101\u0026#34;,1) /// ^DHCLoadSpecimen({DHC_LoadSpecimen.DLSP_LabNo},{DHC_LoadSpecimen.DLSP_TS},{DHC_LoadSpecimen.DLSP_TSCNT},\u0026#34;TC\u0026#34;,{DLST_TestCode}) /// ^DHCLoadSpecimen({DLSP_LabNo},{DLSP_TS},{DLSP_TSCNT}) /// W $$BUILD2^DEBUG BUILD2 K ^TMP($zn,$j) s LabnoList=\u0026#34;\u0026#34; S AddDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d .s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime,\u0026#34;\u0026#34;)) .s Labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) .;H 1 //每隔2S处理一个标本 .D:isDebug Log(mi,\u0026#34;BUILD2|labno=\u0026#34;_Labno) .S SIMAck=$$BUILD() .I SIMAck=0 D ..s err=##Class(MI.MachineUpload).SetSendFlag(mi,Labno,\u0026#34;S\u0026#34;,\u0026#34;\u0026#34;) .E D ..D:isDebug Log(mi,\u0026#34;BUILD2|Fail:labno=\u0026#34;_Labno) ..//Q:tryTimes\u0026lt;4 //失败3次才更新失败状态 ..s err=##Class(MI.MachineUpload).SetSendFlag(mi,Labno,\u0026#34;F\u0026#34;,\u0026#34;\u0026#34;) s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;U\u0026#34;),AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d .s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;U\u0026#34;),AddDate,AddTime,\u0026#34;\u0026#34;)) .s Labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) .;H 1 //每隔2S处理一个标本 .D:isDebug Log(mi,\u0026#34;BUILD2|labno=\u0026#34;_Labno) .S SIMAck=$$BUILD() .I SIMAck=0 D ..s err=##Class(MI.MachineUpload).SetSendFlag(mi,Labno,\u0026#34;S\u0026#34;,\u0026#34;\u0026#34;) .E D ..D:isDebug Log(mi,\u0026#34;BUILD2|Fail:labno=\u0026#34;_Labno) ..//Q:tryTimes\u0026lt;4 //失败3次才更新失败状态 ..s err=##Class(MI.MachineUpload).SetSendFlag(mi,Labno,\u0026#34;F\u0026#34;,\u0026#34;\u0026#34;) ///老年医院流水线上传所有集中接收标本 //s Labno=\u0026#34;\u0026#34; f s Labno=$o(^DHCUploadAll(Labno)) Q:Labno=\u0026#34;\u0026#34; d //.s WorkGroupMachineDR=$g(^DHCUploadAll(Labno)) //.S SIMAck=$$SendSorting(WorkGroupMachineDR) //.I SIMAck\u0026#39;=0 s ^DHCUploadAllBAK(\u0026#34;F\u0026#34;,Labno)=^DHCUploadAll(Labno) //.e s ^DHCUploadAllBAK(\u0026#34;S\u0026#34;,Labno)=^DHCUploadAll(Labno) //.s ^DHCUploadAllBAK(\u0026#34;B\u0026#34;,Labno)=^DHCUploadAll(Labno) //.k ^DHCUploadAll(Labno) Q JudgeUrgent d Trace^MI.MIF000(mi,urgent,\u0026#34;urgentJu\u0026#34;) i urgent=1 d .s urgent=\u0026#34;S\u0026#34; .d Trace^MI.MIF000(mi,urgent,\u0026#34;urgentJUS\u0026#34;) e d .s urgent=\u0026#34;R\u0026#34; BUILD() S episx=Labno,Labno=$P(Labno,\u0026#34;-\u0026#34;,1),suffix=\u0026#34;\u0026#34;,RetAck=1 S (surn,givn,sex,dob,date,urno,age,loc)=\u0026#34;\u0026#34; s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q s VisitNumberData = $g(^dbo.RPVisitNumberD(VisitNumberDR)) S urno=$p(urno,$c(1),1) I givn=surn s givn=\u0026#34;\u0026#34; s SName=$lg(VisitNumberData,13) s GName=$lg(VisitNumberData,13) S diag=$lg(VisitNumberData,28) ;;; 诊断 S SpecType=$$GetSpecType(VisitNumberDR) ;;; 标本 s debtor=$lg(VisitNumberData,3) ;登记号 s admtype=$lg(VisitNumberData,4) ;就诊类型 s urgent=$lg(VisitNumberData,50) ;是否加急 d Trace^MI.MIF000(mi,urgent,\u0026#34;urgent\u0026#34;) D JudgeAdmType D JudgeUrgent s SpeciesDR = $lg(VisitNumberData,15) //s Species = $s($l(SpeciesDR):$lg(^dbo.BTSpeciesD(SpeciesDR),3),1:\u0026#34;\u0026#34;) s Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$LG($G(^dbo.BTSpeciesD(SpeciesDR)),2) ;性别 ;S Species=SpeciesDR ;性别 s DOB= $lg(VisitNumberData,16) ;出生日期 ;s DOB=\u0026#34;20000202\u0026#34; s LocationDR = $lg(VisitNumberData,22) s Location = $s($l(LocationDR):$lg($g(^dbo.BTLocationD(LocationDR)),3),1:\u0026#34;\u0026#34;) s Loc=Location ;科室 s TSName=\u0026#34;\u0026#34; //多条医嘱信息合并 s TSName = \u0026#34;\u0026#34; s TestSetDR = \u0026#34;\u0026#34; for { s TestSetDR = $o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; i $l(TSName) s TSName=TSName_\u0026#34;+\u0026#34;_$lg($g(^dbo.BTTestSetD(TestSetDR)),3) e s TSName=$lg(^dbo.BTTestSetD(TestSetDR),3) } d ScanOne^MI.MIF000(mi,Labno) ;创建上传化验项目列表 i \u0026#39;$D(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,Labno)) q 1 S tcx=\u0026#34;\u0026#34; S chl=\u0026#34;\u0026#34; F S chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,Labno,chl)) Q:chl=\u0026#34;\u0026#34; D .S tcx=tcx_\u0026#34;^^^\u0026#34;_chl_\u0026#34;^^^0\\\u0026#34; S tcx=$e(tcx,1,$L(tcx)-1) I \u0026#39;$L(tcx) S tcx=\u0026#34;^^^^^^0\u0026#34; S date=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) S time=$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;) S temepis=\u0026#34;\u0026#34; ;H|\\^\u0026amp;|||BSLIS^V3.00|||||||P|1\u0026lt;CR\u0026gt; S str=\u0026#34;H|\\^\u0026amp;|||BSLIS^V3.00|||||host|TSDWN^REPLY|P|1\u0026#34;_cr ;头信息 ;P|1|0010332409|0010332409||Doe^JohnlSmith||19150826|F|||||||||||||||||5500|||||||||\u0026lt;CR\u0026gt; //S str=str_\u0026#34;P|1|\u0026#34;_debtor_\u0026#34;|\u0026#34;_cr ;病人信息 s SName=##class(OTH.DHCINSUPort).GetPinYingCode(SName) S str=str_\u0026#34;P|1|\u0026#34;_debtor_\u0026#34;|||\u0026#34;_SName_\u0026#34;^^^||\u0026#34;_DOB_\u0026#34;|\u0026#34;_Species_\u0026#34;|||||||||||||||||\u0026#34;_Loc_\u0026#34;|||||||||\u0026#34;_cr ;病人信息 I Labno=\u0026#34;N\u0026#34; s Labno=\u0026#34;\u0026#34; ;O|1|112448100||^^^TP^^^0\\^^^ALB^^^0|R||20110826112206||||N|hep|lipemic||Serum||||||||||Q\u0026lt;CR\u0026gt; ;s SpecType=\u0026#34;Serum\u0026#34;\t//YHR 设置空白的为血类型 S str=str_\u0026#34;O|1|\u0026#34;_Labno_\u0026#34;||\u0026#34;_tcx_\u0026#34;|\u0026#34;_urgent_\u0026#34;||\u0026#34;_date_time_\u0026#34;||||A|hep|lipemic||\u0026#34;_SpecType_\u0026#34;|||\u0026#34;_TSName_\u0026#34;|\u0026#34;_admtype_\u0026#34;||||||\u0026#34; S str=str_\u0026#34;Q\u0026#34;_cr ;4L|1\u0026lt;CR\u0026gt; S str=str_\u0026#34;L|1|\u0026#34; S RetAck=$$Send(Labno,str) K ^TMIF(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,Labno) Q RetAck JudgeAdmType i admtype=1 s admtype=2 i admtype=2 s admtype=1 i admtype=8 s admtype=3 SendSorting(WorkGroupMachineDR) S episx=Labno,Labno=$P(Labno,\u0026#34;-\u0026#34;,1),suffix=\u0026#34;\u0026#34;,RetAck=1 S (surn,givn,sex,dob,date,urno,age,loc)=\u0026#34;\u0026#34; s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q s VisitNumberData = $g(^dbo.RPVisitNumberD(VisitNumberDR)) S urno=$p(urno,$c(1),1) I givn=surn s givn=\u0026#34;\u0026#34; s admtype=$lg(VisitNumberData,4) ;就诊类型 D JudgeAdmType s urgent=$lg(VisitNumberData,50) ;是否加急 D JudgeUrgent s SName=$lg(VisitNumberData,13) s GName=$lg(VisitNumberData,13) S diag=$lg(VisitNumberData,28) ;;; 诊断 S SpecType=$$GetSpecType(VisitNumberDR) ;;; 标本 s debtor=$lg(VisitNumberData,3) ;登记号 s SpeciesDR = $lg(VisitNumberData,15) //s Species = $s($l(SpeciesDR):$lg(^dbo.BTSpeciesD(SpeciesDR),3),1:\u0026#34;\u0026#34;) s Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$LG($G(^dbo.BTSpeciesD(SpeciesDR)),2) ;性别 s TSName = \u0026#34;\u0026#34; ;S Species=SpeciesDR ;性别 s DOB= $lg(VisitNumberData,16) ;出生日期 s LocationDR = $lg(VisitNumberData,22) s Location = $s($l(LocationDR):$lg($g(^dbo.BTLocationD(LocationDR)),3),1:\u0026#34;\u0026#34;) s Loc=Location ;科室 s TSName=\u0026#34;\u0026#34; //多条医嘱信息合并 s TestSetDR = \u0026#34;\u0026#34; for { s TestSetDR = $o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; i $l(TSName) s TSName=TSName_\u0026#34;+\u0026#34;_$lg($g(^dbo.BTTestSetD(TestSetDR)),3) e s TSName=$lg(^dbo.BTTestSetD(TestSetDR),3) } S tcx=\u0026#34;\u0026#34;,chl=\u0026#34;Sorting\u0026#34;_WorkGroupMachineDR S tcx=tcx_\u0026#34;^^^\u0026#34;_chl_\u0026#34;^^^0\\\u0026#34; S date=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) S time=$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;) S temepis=\u0026#34;\u0026#34; ;H|\\^\u0026amp;|||BSLIS^V3.00|||||||P|1\u0026lt;CR\u0026gt; S str=\u0026#34;H|\\^\u0026amp;|||BSLIS^V3.00|||||host|TSDWN^REPLY|P|1\u0026#34;_cr ;头信息 ;P|1|0010332409|0010332409||Doe^JohnlSmith||19150826|F|||||||||||||||||5500|||||||||\u0026lt;CR\u0026gt; //S str=str_\u0026#34;P|1|\u0026#34;_debtor_\u0026#34;|\u0026#34;_cr ;病人信息 S str=str_\u0026#34;P|1|\u0026#34;_debtor_\u0026#34;|||\u0026#34;_SName_\u0026#34;^\u0026#34;_GName_\u0026#34;^^||\u0026#34;_DOB_\u0026#34;|\u0026#34;_Species_\u0026#34;|||||||||||||||||\u0026#34;_Loc_\u0026#34;|||||||||\u0026#34;_cr ;病人信息 I Labno=\u0026#34;N\u0026#34; s Labno=\u0026#34;\u0026#34; ;O|1|112448100||^^^TP^^^0\\^^^ALB^^^0|R||20110826112206||||N|hep|lipemic||Serum||||||||||Q\u0026lt;CR\u0026gt; ;s SpecType=\u0026#34;Serum\u0026#34; S str=str_\u0026#34;O|1|\u0026#34;_Labno_\u0026#34;||\u0026#34;_tcx_\u0026#34;|\u0026#34;_urgent_\u0026#34;||\u0026#34;_date_time_\u0026#34;||||A|hep|lipemic||\u0026#34;_SpecType_\u0026#34;|||\u0026#34;_TSName_\u0026#34;|\u0026#34;_admtype_\u0026#34;||||||\u0026#34; S str=str_\u0026#34;Q\u0026#34;_cr ;4L|1\u0026lt;CR\u0026gt; S str=str_\u0026#34;L|1|\u0026#34; S RetAck=$$Send(Labno,str) Q RetAck Send(epis,str) ; send list of orders if exists W enq,*-3 d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) S ret=1 F j=1:1:10 R *R:1 I $c(R)=ack!($c(R)=enq) Q d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;1H\u0026lt;--M\u0026#34;) I $c(R)=enq Q ret I $c(R)\u0026#39;=ack W eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) Q ret F i=1:1:$L(str,cr) D .S temstr=$P(str,cr,i) .S temstr=i_temstr .I i=3,$L(temstr)\u0026gt;247 D ..S str1=$e(temstr,1,241) ..S ret=$$SEND(str1,1) ..s str2=i+1_$e(temstr,242,482) ..S ret=$$SEND(str2,1) ..s str2=i+1_$e(temstr,483,$l(temstr)) ..S ret=$$SEND(str2,0) ..S i=i+1 ..s temstr=$P(str,cr,4) ..S temstr=i+1_temstr ..S ret=$$SEND(temstr,0) .E D ..S ret=$$SEND(temstr,0) W eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) Q ret SEND(str,flag) ; send string to instrument i flag=1 d .s str=str_etb .s chsum=$$CHSUM(str) e d .s str=str_cr_etx .s chsum=$$CHSUM(str) W stx,str,chsum,cr,lf,*-3 d Trace^MI.MIF000(mi,stx_str_chsum_cr_lf,\u0026#34;H--\u0026gt;M\u0026#34;) F j=1:1:6 R *R:1 I ($c(R)=ack)!($c(R)=eot) Q I $c(R)=ack d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) Q 0 I $c(R)=eot d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) Q 0 I $c(R)=-1 W nak,*-3 d Trace^MI.MIF000(mi,R,\u0026#34;H\u0026lt;--M\u0026#34;) Q 1 CHSUM(x) ; calculate check sum n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y) s z=$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#256\\16+1)_$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#16+1) q z ACK ; send \u0026#39;ack\u0026#39; to instrument w ack,*-3 d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q NEXTTRAY(tray) q tray /// GetSpecType(VisitNumberDR) s VisitNumberDR=$g(VisitNumberDR) ;s RetVal=\u0026#34;SE\u0026#34; s RetVal=\u0026#34;Serum\u0026#34; s SpecimenDR = $lg(^dbo.RPVisitNumberD(VisitNumberDR),56) s SpecimenName = $s($l(SpecimenDR):$lg($g(^dbo.BTSpecimenD(SpecimenDR)),3),1:\u0026#34;\u0026#34;) i SpecimenName[\u0026#34;血\u0026#34; s RetVal=\u0026#34;Serum\u0026#34; i SpecimenName[\u0026#34;尿\u0026#34; s RetVal=\u0026#34;Urine\u0026#34; i SpecimenName[\u0026#34;血浆\u0026#34; s RetVal=\u0026#34;Plasma\u0026#34;\t//YHR 20230929 增加血浆代码 q RetVal Log(mi,info) N (mi,info) S mi=$G(mi),info=$G(info) Q:\u0026#39;$L(mi) 1 Q:\u0026#39;$D(^TMIF(mi)) 1 d Trace^MI.MIF000(mi,info,\u0026#34;DEBUG\u0026#34;) S curDate=$P($H,\u0026#34;,\u0026#34;,1),curTime=$P($H,\u0026#34;,\u0026#34;,2) S ^TMPSIMENS(mi,curDate,curTime)=info Q 0 通过数据库主动上传 ODBC连接数据库回插数据 示例代码(DL96A) 通过数据库连接，在QryLabInfo中拼串sql语句.Insert into liscontroller.lis_application (SPEC_NUM,BTBarcode,ASTBarcode,PATIENT_ID,MSPosition,PatientNo,FULL_NAME,FIRST_NAME,LAST_NAME,Birth,AGE,SEX,Purpose,WARD,Specimen,BedNo,Diagnosis,SpRequest,Medication,SuspectedBact,Doctor,AdviceNo,ApplyDate,SendDate,Collector,SPEC_DATE,CollectPosition,IdResult,Updated,UpdateDate,CARSS_ReadDate,StainType,StructVersion) values\n\u0026hellip;//(\u0026lsquo;9999\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;199732\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026rsquo; \u0026lsquo;,\u0026lsquo;测试\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026rsquo;\u0026rsquo;,\u0026lsquo;85y\u0026rsquo;,\u0026lsquo;f\u0026rsquo;,\u0026lsquo;普通细菌培养+药敏\u0026rsquo;,\u0026lsquo;三病室\u0026rsquo;,\u0026lsquo;痰\u0026rsquo;,\u0026lsquo;3\u0026rsquo;,\u0026rsquo; \u0026lsquo;,\u0026rsquo; \u0026lsquo;,\u0026rsquo; \u0026lsquo;,\u0026rsquo; \u0026lsquo;,\u0026lsquo;刘云\u0026rsquo;,\u0026rsquo; \u0026lsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;2024/6/28 9:17\u0026rsquo;,\u0026lsquo;谢艳红\u0026rsquo;,\u0026lsquo;2024/6/29 11:17\u0026rsquo;,\u0026rsquo; \u0026lsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;0\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;)\n{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;DataBase\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;3000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;DSN=DL96A\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFDL96A\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;SELECT * FROM lis_result WHERE DATE(UpdateDate) = CURDATE()#ID#\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;}] /// [{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;DataBase\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;3000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;DSN=DL96a\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFDL96A2\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;SELECT * FROM lis_result WHERE DATE(UpdateDate) = CURDATE()#ID#\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;}] Class MI.MIFDL96A Extends %RegisteredObject { // D ##class(MI.MIFDL96E02).fileMTHD(\u0026#34;22\u0026#34;,\u0026#34;4185~33122416~~~□肺炎链球菌(S.pneumoniae)□G+球菌□□[spn]□(优势菌2)~~~~~A;PEN;;＝8;耐药;;B;CLI;;≥8;耐药;;A;SXT;;≥8/152;耐药;;B;CRO;;＝1;敏感;;A;ERY;;≥16;耐药;;B;VA;;≤1;敏感;;B;LEV;;＝2;敏感;;B;TET;;＝32;耐药;;B;MRP;;≤0.25;敏感;;C;CXM;;≥4;耐药;;C;RIF;;≤0.5;敏感;;C;AMC;;≤1.0/0.5;敏感;;C;LNZ;;≤2;敏感;;~~~~~对左氧氟沙星敏感的菌株可预报其对吉米沙星和莫西沙星敏感。[13][10]对四环素敏感的菌株对多西环素和米诺环素也敏感。[13][10]利福平不单独用于抗菌治疗。[13][10]红霉素可预报阿奇霉素、克拉霉素和地红霉素的敏感和耐药性。[13][10]~~~~普通细菌培养+药敏~2020-12-25□8:33:23~2020-12-27□8:33:23~1~\u0026#34;,\u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;) ClassMethod fileMTHD(mi, record, epis, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q i \u0026#39;$l(record) q s ItemDeli=$c(92) //项目分隔符92 s ResultDeli=$c(44) //结果分隔符44 s AntDeli=\u0026#34;]\u0026#34; //抗生素分隔符] s SenDeli=\u0026#34;[\u0026#34; //药敏结果分隔符[ d Trace^MI.MIF000(mi,record,\u0026#34;record\u0026lt;--M\u0026#34;) s (sample,epis,surname,rec,res,fresult,date,time,QC,xBugs,AntLIST,expertRules)=\u0026#34;\u0026#34; //处理阴性结果 s epis=$tr($p(record,\u0026#34;~\u0026#34;,3),\u0026#34; \u0026#34;) s code=1 //7417~6987~3259~I-01,2E10405500,*□|~I-01,2E10405500,*□|~~□,I-01,2E10405500,大肠埃希菌(Escherichia□Coli),eco,-,0,□|~~I-01,2E10405500,DL-120□E2,eco,AMP,≥32μg/ml,A,R,≤8\u0026amp;16\u0026amp;≥32,Y|I-01,2E10405500,DL-120□E2,eco,GEN,≤1μg/ml,A,S,≤2\u0026amp;4\u0026amp;≥8,Y|I-01,2E10405500,DL-120□E2,eco,SAM,16/8μg/ml,B,I,≤8/4\u0026amp;16/8\u0026amp;≥32/16,Y|I-01,2E10405500,DL-120□E2,eco,TZP,≤4/4μg/ml,B,S,≤16/4\u0026amp;32/4-64/4\u0026amp;≥128/4,Y|I-01,2E10405500,DL-120□E2,eco,CSL,≤8/4μg/ml,O,S,≤16/8\u0026amp;32/16\u0026amp;≥64/32,Y|I-01,2E10405500,DL-120□E2,eco,CCV,≤1/4μg/ml,□,□,□\u0026amp;□\u0026amp;□,Y|I-01,2E10405500,DL-120□E2,eco,CTC,≤1/4μg/ml,□,□,□\u0026amp;□\u0026amp;□,Y|I-01,2E10405500,DL-120□E2,eco,CZO,≤2μg/ml,A,S,≤2\u0026amp;4\u0026amp;≥8,Y|I-01,2E10405500,DL-120□E2,eco,FEP,≤0.12μg/ml,B,S,≤2\u0026amp;4-8\u0026amp;≥16,Y|I-01,2E10405500,DL-120□E2,eco,FOX,≤8μg/ml,B,S,≤8\u0026amp;16\u0026amp;≥32,Y|I-01,2E10405500,DL-120□E2,eco,CXM,≤4μg/ml,B,S,≤8\u0026amp;16\u0026amp;≥32,Y|I-01,2E10405500,DL-120□E2,eco,CXM,≤4μg/ml,B,S,≤4\u0026amp;8-16\u0026amp;≥32,Y|I-01,2E10405500,DL-120□E2,eco,LVX,≤0.12μg/ml,B,S,≤0.5\u0026amp;1\u0026amp;≥2,Y|I-01,2E10405500,DL-120□E2,eco,SXT,≥8/152μg/ml,B,R,≤2/38\u0026amp;□\u0026amp;≥4/76,Y|I-01,2E10405500,DL-120□E2,eco,CTX,≤0.12μg/ml,B,S,≤1\u0026amp;2\u0026amp;≥4,Y|I-01,2E10405500,DL-120□E2,eco,IPM,≤0.25μg/ml,B,S,≤1\u0026amp;2\u0026amp;≥4,Y|I-01,2E10405500,DL-120□E2,eco,CAZ,≤0.5μg/ml,C,S,≤4\u0026amp;8\u0026amp;≥16,Y|I-01,2E10405500,DL-120□E2,eco,CHL,≤8μg/ml,C,S,≤8\u0026amp;16\u0026amp;≥32,Y|I-01,2E10405500,DL-120□E2,eco,MEM,≤0.06μg/ml,B,S,≤1\u0026amp;2\u0026amp;≥4,Y|I-01,2E10405500,DL-120□E2,eco,AMK,≤4μg/ml,B,S,≤4\u0026amp;8\u0026amp;≥16,Y|I-01,2E10405500,DL-120□E2,eco,NIT,≤16μg/ml,U,S,≤32\u0026amp;64\u0026amp;≥128,Y|I-01,2E10405500,DL-120□E2,eco,ETP,≤0.015μg/ml,B,S,≤0.5\u0026amp;1\u0026amp;≥2,Y|I-01,2E10405500,DL-120□E2,eco,MNO,≤1μg/ml,O,S,≤4\u0026amp;8\u0026amp;≥16,Y|I-01,2E10405500,DL-120□E2,eco,TGC,≤0.25μg/ml,□,S,≤1\u0026amp;2\u0026amp;\u0026gt;2,Y|I-01,2E10405500,DL-120□E2,eco,POL,≤1μg/ml,O,I,□\u0026amp;≤2\u0026amp;≥4,Y|I-01,2E10405500,DL-120□E2,eco,AZM,≤8μg/ml,□,R,□\u0026amp;□\u0026amp;□,Y|~I-01,2E10405500,MDR|~I-01,2E10405500*MDR：多重耐药菌株。*头孢西丁的折点基于至少8g□qd的给药方案。*头孢吡肟的敏感折点基于1g□q12h的给药方案。*亚胺培南的折点基于500mg□q6h或1g□q8h的给药方案。*厄他培南的折点基于1g□qd的给药方案。*多黏菌素B应与一种或多种活性抗生素联合使用，建议咨询感染诊治专家。*头孢呋辛（注射）的折点基于1.5g□q8h的给药方案。*氨苄西林的结果可用于预报阿莫西林的敏感性。*环丙沙星折点基于静脉注射400mg□q12h或口服500mg□q12h给药方案。*多黏菌素B应给予负荷剂量和最大推荐剂量。*治疗非复杂泌尿道以外感染的头孢唑林折点是基于2g□q8h的给药方案。*头孢噻肟的折点基于1g□q8h的给药方案。*美罗培南的折点基于1g□q8h的给药方案。*对于肺炎即使黏菌素或多黏菌素B全身给药，亦很可能无效。*此报告采用的折点标准来源为CLSIM100□2023，其中替加环素为EUCAST□2018，头孢哌酮/舒巴坦为CHINET技术要求□2022，哌拉西林/他唑巴坦为CLSIM100□2021。|~~~~~I-01,2E10405500,2024-04-23□09:56:15|~~~1~2024-04-23□10:53:54~□~□,I-01,2E10405500,大肠埃希菌(Escherichia□Coli),eco,G-杆菌,0,□|~I-01,2E10405500,MDR|~~~~ ///□,I-01,2E10405500,大肠埃希菌(Escherichia□Coli),eco,-,0,□| ///7602~0~4786~~~~~,A2,兽类气单胞菌(Aeromonas□bestiarum),□,44.12,□,aer,□,0,□|~~~~~~~~~~~1~2024-06-06□16:29:22~~□,□,4786+A2,兽类气单胞菌(Aeromonas□bestiarum),aer,-,0,□|~~~~~ //s xBugs=$p($p($p(record,\u0026#34;~\u0026#34;,7),\u0026#34;,\u0026#34;,4),\u0026#34;(\u0026#34;,1) s xBugs=$p($p(record,\u0026#34;~\u0026#34;,7),\u0026#34;,\u0026#34;,5) i $l(xBugs)\u0026gt;6 s xBugs=$p($p(record,\u0026#34;~\u0026#34;,9),\u0026#34;,\u0026#34;,4) d Trace^MI.MIF000(mi,xBugs,\u0026#34;xBugs\u0026#34;) s antStr=$p(record,\u0026#34;~\u0026#34;,9) s expertRules=$p($p($p(record,\u0026#34;~\u0026#34;,11),\u0026#34;*\u0026#34;,2,*),\u0026#34;|\u0026#34;,1) //s expertRules=$replace(expertRules,\u0026#34;*\u0026#34;,\u0026#34;$r$n\u0026#34;) d Trace^MI.MIF000(mi,expertRules,\u0026#34;expertRules\u0026#34;) i expertRules[\u0026#34;*\u0026#34; s expertRules=..RExpertRules(expertRules) s ^DL96A(\u0026#34;ZJGZ\u0026#34;,+$h,epis,code)=expertRules f i=1:1:$l(antStr,\u0026#34;|\u0026#34;) d .//I-01,2E10405500,DL-120□E2,eco,AMP,≥32μg/ml,A,R,≤8\u0026amp;16\u0026amp;≥32,Y .//I-2565,2R10131374,DL-120□STREP3,efa,AMP,=0.5μg/mL,A,S,≤8\u0026amp;□\u0026amp;≥16,Y .//efa,AMP,=0.5μg/mL,A,S,≤8\u0026amp;□\u0026amp;≥16,Y|I-2565,2R10131374,DL-120□STREP3, .s antList=$p(antStr,\u0026#34;|\u0026#34;,i) .s AntGroup=$p(antList,\u0026#34;,\u0026#34;,7) //抗生素分组 .s xANT=$tr($p(antList,\u0026#34;,\u0026#34;,5),\u0026#34; \u0026#34;) q:xANT=\u0026#34;\u0026#34; //抗生素 .s xMIC=$tr($p(antList,\u0026#34;,\u0026#34;,6),\u0026#34;μg/ml \u0026#34;) //MIC .s xRES=$tr($p(antList,\u0026#34;,\u0026#34;,8),\u0026#34; \u0026#34;) //耐药 .i xRES=\u0026#34;\u0026#34; s xRES=\u0026#34;/\u0026#34; .s AntLIST=AntLIST_xANT_AntDeli_xRES_AntDeli_xMIC_AntDeli_AntDeli_AntGroup_SenDeli d Trace^MI.MIF000(mi,AntLIST,\u0026#34;AntLIST\u0026lt;--M\u0026#34;) i $l(xBugs),$l(epis),$l(AntLIST) d .s fresult=xBugs_ItemDeli_AntLIST_ItemDeli_code_ResultDeli d Trace^MI.MIF000(mi,fresult,\u0026#34;fresult\u0026lt;--M\u0026#34;) i \u0026#39;$l(fresult) q 0 i \u0026#39;$l(epis) q 0 d Save^MI.MIF000(mi,epis,code_ItemDeli_xBugs_ItemDeli_ItemDeli_ItemDeli_ResultDeli,date,time,QC) d SaveAnt^MI.MIF000(mi,epis,fresult,date,time,QC) //h 3 //s ret=..SaveZJGZ(epis, mi, 1, expertRules) //对于专家规则在同表的，保证药敏结果先存生成报告，再存专家规则 Gjj 0704 //d Trace^MI.MIF000(mi,ret,\u0026#34;专家规则保存ret\u0026#34;) s (fresult,date,time,QC,AntLIST)=\u0026#34;\u0026#34; q \u0026#34;\u0026#34; } /// w ##class(MI.MIFDL96A2).RExpertRules(\u0026#34;sadsa*da*dasds*sad \u0026#34;) /// 20240802 Gjj 格式化专家规则 ClassMethod RExpertRules(expertRules As %String) As %String { s expertRules=$g(expertRules) i expertRules[\u0026#34;*\u0026#34; d .s expertRules=\u0026#34;1、\u0026#34;_expertRules .f i=2:1:$l(expertRules,\u0026#34;*\u0026#34;) d ..s expertRules=$p(expertRules,\u0026#34;*\u0026#34;,1)_\u0026#34; \u0026#34;_i_\u0026#34;、\u0026#34;_$p(expertRules,\u0026#34;*\u0026#34;,2,*) q expertRules } /// 保存专家规则 /// 20240704 Gjj /// w ##class(MI.MIFDL96A2).SaveZJGZ(\u0026#34;6633\u0026#34;,\u0026#34;40\u0026#34;,1,\u0026#34;多黏菌素B应与一种或多种活性抗生素联合使用，建议咨询感染诊治专家。*头孢噻肟的折点基于1g□q8h的给药方案。*亚胺培南的折点基于500mg□q6h或1g□q8h的给药方案。*美罗培南的折点基于1g□q8h的给药方案。*头孢唑啉的结果可预报非复杂性的泌尿系统感染的大肠埃希菌对口服头孢拉定、头孢地尼、头孢克罗、头孢丙烯、头孢泊肟、头孢呋辛的敏感性。*头孢西丁的折点基于至少8g□qd的给药方案。*仅肠沙门菌伤寒血清型和志贺菌属具有阿奇霉素的临床推荐折点。*氨苄西林的结果可用于预报阿莫西林的敏感性。*环丙沙星折点基于静脉注射400mg□q12h或口服500mg□q12h给药方案。*头孢吡肟的敏感折点基于1g□q12h的给药方案。*头孢呋辛（注射）的折点基于1.5g□q8h的给药方案。*治疗非复杂泌尿道感染的头孢唑林折点是基于1g□q12h的给药方案。*治疗非复杂泌尿道以外感染的头孢唑林折点是基于2g□q8h的给药方案。*多黏菌素B应给予负荷剂量和最大推荐剂量。*厄他培南的折点基于1g□qd的给药方案。*对于肺炎即使黏菌素或多黏菌素B全身给药，亦很可能无效。\u0026#34;) ClassMethod SaveZJGZ(epis, mi, isolate, ExpertRules) { s ^GYN(\u0026#34;Rule\u0026#34;,epis)=$lb(epis, mi, isolate, ExpertRules) //TestCodeDR 细菌一，细菌二，细菌三 570,586,575 s epis=$g(epis),mi=$g(mi),ExpertRules=$g(ExpertRules) s TestCodeDR=\u0026#34;\u0026#34; i isolate=1 s TestCodeDR=261 i \u0026#39;$l(mi) q 0 i \u0026#39;$l(epis) d Trace^MI.MIF000(mi,\u0026#34;流水号不能为空\u0026#34;,\u0026#34;保存检测结论返回\u0026#34;) q 0 //报告可能核收到微生物培养的四个小组 s WGM=\u0026#34;\u0026#34; i $d(^dbo.RPVisitNumberReportI(\u0026#34;IndexMicNo\u0026#34;,15,\u0026#34; \u0026#34;_epis)) s WGM=15 i \u0026#39;$l(WGM) q 0 s sc=0 s transmitDate=\u0026#34;\u0026#34; f s transmitDate=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexMicNo\u0026#34;,WGM,\u0026#34; \u0026#34;_epis,transmitDate)) q:transmitDate=\u0026#34;\u0026#34; d .s ReportDR=\u0026#34;\u0026#34; f s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexMicNo\u0026#34;,WGM,\u0026#34; \u0026#34;_epis,transmitDate,ReportDR)) q:ReportDR=\u0026#34;\u0026#34; d ..//IndexReportItem On (VisitNumberReportDR, TestCodeDR) ..i \u0026#39;$d(^dbo.RPVisitNumberReportResultI(\u0026#34;IndexReportItem\u0026#34;,ReportDR,TestCodeDR)) q ..s ResultDR=$o(^dbo.RPVisitNumberReportResultI(\u0026#34;IndexReportItem\u0026#34;,ReportDR,TestCodeDR,\u0026#34;\u0026#34;)) ..s objRep=##Class(dbo.RPVisitNumberReportResult).%OpenId(ResultDR) ..s EXPRlues=objRep.ExpertRule ..i EXPRlues=ExpertRules q //专家规则不再变化，不存 ..s objRep.ExpertRule=ExpertRules ..s sc=objRep.%Save() ..i (\u0026#39;$SYSTEM.Status.IsOK(sc)) d Trace^MI.MIF000(mi,\u0026#34;保存检测结论失败\u0026#34;,\u0026#34;保存检测结论失败返回\u0026#34;) q ..d Trace^MI.MIF000(mi,ExpertRules,\u0026#34;保存检测结论成功返回\u0026#34;) q sc } // D ##class(MI.MIFDL96E02).SaveExpertRules(\u0026#34;26\u0026#34;, \u0026#34;52772\u0026#34;,\u0026#34;ceshi\u0026#34;, \u0026#34;1\u0026#34;) ClassMethod SaveExpertRules(mi, epis, expertRules, code, Output RowCount As %String) As %String { s mi=$g(mi) s epis=$g(epis) s expertRules=$g(expertRules) s code=$g(code) s (WorkGroupMachineDR,AcceptDate,ReportDr,TestCodeDR,ReportResultDR,CodeDR)=\u0026#34;\u0026#34; s WorkGroupMachineDR=$lg(^dbo.BTMIMachineParameterD(mi),6) //b ;1 s AcceptDate=\u0026#34;\u0026#34; f s AcceptDate=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAcceptDate\u0026#34;,WorkGroupMachineDR,AcceptDate)) q:AcceptDate=\u0026#34;\u0026#34; d .s ReportDr=\u0026#34;\u0026#34; f s ReportDr=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAcceptDate\u0026#34;,WorkGroupMachineDR,AcceptDate,##Class(LIS.Util.Common).IndexData(epis),ReportDr)) q:ReportDr=\u0026#34;\u0026#34; d ..s TestCodeDR=\u0026#34;\u0026#34; f s TestCodeDR=$o(^dbo.RPVisitNumberReportResultI(\u0026#34;IndexReportItem\u0026#34;,ReportDr,TestCodeDR)) q:TestCodeDR=\u0026#34;\u0026#34; d ...s ReportResultDR=\u0026#34;\u0026#34; f s ReportResultDR=$o(^dbo.RPVisitNumberReportResultI(\u0026#34;IndexReportItem\u0026#34;,ReportDr,TestCodeDR,ReportResultDR)) q:ReportResultDR=\u0026#34;\u0026#34; d ....s CodeDR=$lg(^dbo.RPVisitNumberReportResultD(ReportResultDR),3) ....b ;3 ....i (code+655=CodeDR) d .....//b ;2 .....s obj=##Class(dbo.RPVisitNumberReportResult).%OpenId(ReportResultDR) .....s obj.ExpertRule=expertRules .....s ret=obj.%Save() q \u0026#34;\u0026#34; } /// D ##class(MI.MIFLISMonitorTest)SaveImageMTHD(\u0026#34;7\u0026#34;,\u0026#34;9999\u0026#34;, \u0026#34;\u0026#34;,\u0026#34;175\u0026#34;) /// mi:仪器 /// epis：流水号，如果是监听图片模式该位置放图片名称，自己在保存前提取流水 /// ImageClass:图片类别，如果是监听图片模式该位置放图片名称，自己在保存前提取图片类型 /// FileName:保存在文件服务的相对路径，默认不动 /// FullName:文件全路径，如果是监听图片模式该位置放图片全路径名称，满足有的图片名称无法得到流水和图片类别的情况 ClassMethod SaveImageMTHD(mi, epis, ImageClass, FileName, FullName, SaveImageRetName, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //通过OtherPara配置取图的在这里通过epis和ImageClass的图片名字提取出流水号和图片类别 s mi=$g(mi) s epis=$g(epis) s ImageClass=$g(ImageClass) s FileName=$g(FileName) s FullName=$g(FullName) s SaveImageRetName=$g(SaveImageRetName) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; d ##Class(MI.Common.MIFBase).Trace(mi,epis_\u0026#34;:\u0026#34;_ImageClass_\u0026#34;:\u0026#34;_FileName,\u0026#34;H\u0026lt;--M\u0026#34;) s (ReceiveDate, ImageOrder, Caption, DisplayRatio, Height, Width, Sequence)=\u0026#34;\u0026#34; //加上当前时间，防止浏览器缓存 s FileName=FileName_\u0026#34;?\u0026#34;_$p($h,\u0026#34;,\u0026#34;,2) //OtherPara用^分隔第四位指定SaveImageRetName的话在这里改FileName为新名称。同时让方法返回新图片名字 s NewFileName=\u0026#34;\u0026#34; i SaveImageRetName=\u0026#34;SaveImageRetName\u0026#34; d .//图片新名字 .;s NewFileName=epis_\u0026#34;-\u0026#34;_ImageClass_\u0026#34;-\u0026#34; .//路径新名字 .s NewPathName=\u0026#34;\u0026#34; .s SPLen=$l(FileName,\u0026#34;/\u0026#34;) .f ii=1:1:SPLen d ..i ii\u0026lt;SPLen d ...s NewPathName=NewPathName_$p(FileName,\u0026#34;/\u0026#34;,ii)_\u0026#34;/\u0026#34; ..i ii=SPLen d ...s NewFileName=NewFileName_$p(FileName,\u0026#34;/\u0026#34;,ii) .s NewPathName=NewPathName_NewFileName .s FileName=NewPathName //最后返回NewFileName s ret=##Class(MI.Common.MachineResult).SaveImage(ReceiveDate, epis, ImageClass, ImageOrder, FileName, mi, Caption, DisplayRatio, Height, Width, Sequence) //返回值控制图片名称模式 i SaveImageRetName=\u0026#34;SaveImageRetName\u0026#34; d .s ret=NewFileName q ret } /// 返回给监听当前上传文件路径名称，默认不要动 /// w ##class(MI.MIFLISMonitorTest).GetFtpMTHD(\u0026#34;7\u0026#34;) /// mi:仪器 ClassMethod GetFtpMTHD(mi, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //文件服务模式必须改的地方，老的FTP模式这么改了也没问题，所以建议都这样 s mi=$g(mi) q ##Class(MI.Common.MIFBase).GetMiFtpPath(mi) } /// Creator： 查询患者信息，监听配置上传前处理类后会定时调用这个query查询数据进行上传操作 /// CreatDate： 20140919 /// Description:： /// Table： /// Input： mi：仪器主键 /// Output： 仪器信息 /// Return： 仪器信息 /// Others： Query QryLabInfo(mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Query(ROWSPEC = \u0026#34;labno,labnoInfo,patInfo\u0026#34;) { } /// Query的执行方法 /// d ##class(%ResultSet).RunQuery(\u0026#34;MI.MIFDL96A\u0026#34;,\u0026#34;QryLabInfo\u0026#34;,\u0026#34;56\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) ClassMethod QryLabInfoExecute(ByRef qHandle As %Binary, mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Status { Set repid=$i(^CacheTemp) Set ind=1 s mi=$g(mi),flag=$g(flag) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; s LabnoList=\u0026#34;\u0026#34; //控制输出Excel //s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo(\u0026#34;D:\\\\OUT\\\\上传.xls\u0026#34;,\u0026#34;张三[0][1]男[0][1]28岁[0][1]\u0026#34;_$h,\u0026#34;900001\u0026#34;,\u0026#34;1\u0026#34;) //d OutputRow //Set qHandle=$lb(0,repid,0) //Quit $$$OK //控制输出Excel //查最近8天 s AddDate=$zd($p($h,\u0026#34;,\u0026#34;,1)-8,8) f s AddDate=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate)) q:AddDate=\u0026#34;\u0026#34; d .s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d ..//20秒以内的先不上传，防止没接收完 ..i (AddDate=$zd($h,8)),(($p($h,\u0026#34;,\u0026#34;,2)-AddTime)\u0026lt;20) q ..s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime,\u0026#34;\u0026#34;)) ..s labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) ..i \u0026#39;$l(labno) q ..//得到通道号 ..s chl=$lg($g(^dbo.RPMachineUploadD(MiUploadDR)),7) ..//测试类型0：文本，1：数据库 ..s TestType=\u0026#34;1\u0026#34; ..i TestType=\u0026#34;0\u0026#34; d ...//文本双向上传开始****************************************************** ...//控制输出文本的内容 ...s txtInfo=labno_\u0026#34;^\u0026#34;_chl ...s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo($zd($h,8)_labno_\u0026#34;.order\u0026#34;,txtInfo,labno,\u0026#34;\u0026#34;) ...d OutputRow ...s labno=labnoOld_\u0026#34;^\u0026#34;_$zd($h,8)_labno_\u0026#34;.ok\u0026#34; ...s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo($zd($h,8)_labno_\u0026#34;.ok\u0026#34;,txtInfo,labno,\u0026#34;\u0026#34;) ...d OutputRow ...//文本双向上传结束****************************************************** ..i TestType=\u0026#34;1\u0026#34; d ...//数据库双向上传开始****************************************************** ...//控制执行sql ...//Insert into liscontroller.lis_application (SPEC_NUM,BTBarcode,ASTBarcode,PATIENT_ID,MSPosition,PatientNo,FULL_NAME,FIRST_NAME,LAST_NAME,Birth,AGE,SEX,Purpose,WARD,Specimen,BedNo,Diagnosis,SpRequest,Medication,SuspectedBact,Doctor,AdviceNo,ApplyDate,SendDate,Collector,SPEC_DATE,CollectPosition,IdResult,Updated,UpdateDate,CARSS_ReadDate,StainType,StructVersion) values ...//(\u0026#39;9999\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;199732\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39; \u0026#39;,\u0026#39;测试\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;85y\u0026#39;,\u0026#39;f\u0026#39;,\u0026#39;普通细菌培养+药敏\u0026#39;,\u0026#39;三病室\u0026#39;,\u0026#39;痰\u0026#39;,\u0026#39;3\u0026#39;,\u0026#39; \u0026#39;,\u0026#39; \u0026#39;,\u0026#39; \u0026#39;,\u0026#39; \u0026#39;,\u0026#39;刘云\u0026#39;,\u0026#39; \u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;2024/6/28 9:17\u0026#39;,\u0026#39;谢艳红\u0026#39;,\u0026#39;2024/6/29 11:17\u0026#39;,\u0026#39; \u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;0\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;) ...s SqlStr=\u0026#34;Insert into liscontroller.lis_application (SPEC_NUM,BTBarcode,ASTBarcode,PATIENT_ID,MSPosition,PatientNo,FULL_NAME,FIRST_NAME,LAST_NAME,Birth,AGE,SEX,Purpose,WARD,Specimen,BedNo,Diagnosis,SpRequest,Medication,SuspectedBact,Doctor,AdviceNo,ApplyDate,SendDate,Collector,SPEC_DATE,CollectPosition,IdResult,Updated,UpdateDate,CARSS_ReadDate,StainType,StructVersion) values \u0026#34; ...s PatInfo=..GetPatInfo(mi, labno) ...d Trace^MI.MIF000(mi,PatInfo,\u0026#34;PatInfo\u0026#34;) ...//2024-07-01 16:47:48,Mejer600-4,2406290091,,,mnwk-泌尿外科,刘乐,唐云,0000628089,周田香,2,住院,33,43,,2406290091,2024-06-29 11:15,,,,,肾积水伴肾输尿管结石,,,,2024-06-29 06:48,, ...s EPIS=$p(PatInfo,\u0026#34;,\u0026#34;,31) //鉴定号 ...s DTTime=$p(PatInfo,\u0026#34;,\u0026#34;,32) //核收时间 ...s Name=$p(PatInfo,\u0026#34;,\u0026#34;,10) //姓名 ...s Sex=$p(PatInfo,\u0026#34;,\u0026#34;,11) //性别 ...i Sex=\u0026#34;1\u0026#34; s Sex=\u0026#34;m\u0026#34; ...i Sex=\u0026#34;2\u0026#34; s Sex=\u0026#34;f\u0026#34; ...s Age=$p(PatInfo,\u0026#34;,\u0026#34;,14) //年龄 ...s MediNo=$p(PatInfo,\u0026#34;,\u0026#34;,29) //病案号 ...s Location=$p(PatInfo,\u0026#34;,\u0026#34;,6) //科室 ...i Location[\u0026#34;-\u0026#34; s Location=$p(Location,\u0026#34;-\u0026#34;,2) //jzwkszwk-脊柱外科 ...s Speciman=$p(PatInfo,\u0026#34;,\u0026#34;,30) //标本类型 ...s BedNo=$p(PatInfo,\u0026#34;,\u0026#34;,13) //床号 ...s Doctor=$p(PatInfo,\u0026#34;,\u0026#34;,7) //医生 ...s CollectUser=$p(PatInfo,\u0026#34;,\u0026#34;,8) //采集者 ...//s DTTime=$tr($zd($h,3),\u0026#34;-\u0026#34;,\u0026#34;/\u0026#34;)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2),1) //2024/6/28 9:17 $p($zt($h,1),\u0026#34;:\u0026#34;,1,*-1) ...s ValueStr=\u0026#34;(\u0026#39;\u0026#34;_EPIS_\u0026#34;\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;\u0026#34;_MediNo_\u0026#34;\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39; \u0026#39;,\u0026#39;\u0026#34;_Name_\u0026#34;\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;\u0026#34;_Age_\u0026#34;\u0026#39;,\u0026#39;\u0026#34;_Sex_\u0026#34;\u0026#39;,\u0026#39;普通细菌培养+药敏\u0026#39;,\u0026#39;\u0026#34;_Location_\u0026#34;\u0026#39;,\u0026#39;\u0026#34;_Speciman_\u0026#34;\u0026#39;,\u0026#39;\u0026#34;_BedNo_\u0026#34;\u0026#39;,\u0026#39; \u0026#39;,\u0026#39; \u0026#39;,\u0026#39; \u0026#39;,\u0026#39; \u0026#39;,\u0026#39;\u0026#34;_Doctor_\u0026#34;\u0026#39;,\u0026#39; \u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;\u0026#34;_DTTime_\u0026#34;\u0026#39;,\u0026#39;\u0026#34;_CollectUser_\u0026#34;\u0026#39;,\u0026#39;\u0026#34;_DTTime_\u0026#34;\u0026#39;,\u0026#39; \u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;0\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;)\u0026#34; ...s SqlStr=SqlStr_ValueStr ...d Trace^MI.MIF000(mi,SqlStr,\u0026#34;SqlStr\u0026#34;) ...s ^DL96(\u0026#34;Send\u0026#34;,+$h,labno)=1 //上传标识置为1 ...//多条命令组装多个SQL语句输出.SQL包含$StoredProcedure就当存储过程执行 ...s Data=##class(MI.Common.MIFBase).DemoMOutDBInfo(\u0026#34;DSN=DL96A\u0026#34;,SqlStr,labno) ...d OutputRow ..//数据库双向上传结束****************************************************** Set qHandle=$lb(0,repid,0) Quit $$$OK OutputRow Set ColFields=\u0026#34;labno,labnoInfo,patInfo\u0026#34; Set ^CacheTemp(repid,ind)=##Class(LIS.Util.Common).TransListNull(Data,ColFields) Set ind=ind+1 quit } ClassMethod QryLabInfoClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set repid=$LIST(qHandle,2) Kill ^CacheTemp(repid) Quit $$$OK } ClassMethod QryLabInfoFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set AtEnd=$LIST(qHandle,1) Set repid=$LIST(qHandle,2) Set ind=$LIST(qHandle,3) Set ind=$o(^CacheTemp(repid,ind)) If ind=\u0026#34;\u0026#34; { Set AtEnd=1 Set Row=\u0026#34;\u0026#34; } Else { Set Row=^CacheTemp(repid,ind) } s qHandle=$lb(AtEnd,repid,ind) Quit $$$OK } /// w ##Class(MI.MIFLISMonitorTest).GetLabnoInfo(6,1001367) ClassMethod GetLabnoInfo(mi, labno) As %String { s mi=$g(mi),labno=$g(labno) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; //获取项目通道号 d ScanOne^MI.MIF000(mi,labno) s tcx=\u0026#34;\u0026#34; s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) q:chl=\u0026#34;\u0026#34; d .s tcx=tcx_chl_\u0026#34;+\u0026#34; s tcx=$e(tcx,1,$l(tcx)-1) k ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno) i $l(tcx) s tcx=labno_\u0026#34;,\u0026#34;_tcx_\u0026#34;|\u0026#34; q tcx } /// w ##Class(MI.MIFDL96A2).GetEPIS(\u0026#34;40\u0026#34;,\u0026#34;2407210719\u0026#34;) ClassMethod GetEPIS(mi, labno) As %String { //IndexReportID On (VisitNumberDR, WorkGroupMachineDR, OrderNo) s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s EPIS=\u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; s WGMDR=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) s OrderNo=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,WGMDR,\u0026#34;\u0026#34;)) s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,WGMDR,OrderNo,\u0026#34;\u0026#34;)) s EPIS=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),6) s AcceptDate=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),9) s AcceptDate=$e(AcceptDate,1,4)_\u0026#34;-\u0026#34;_$e(AcceptDate,5,6)_\u0026#34;-\u0026#34;_$e(AcceptDate,7,8) s AcceptTime=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),10) S AcceptDT=AcceptDate_\u0026#34; \u0026#34;_$zt(AcceptTime,1) q EPIS_\u0026#34;^\u0026#34;_AcceptDT } /// w ##Class(MI.MIFDL96A2).GetPatInfo(\u0026#34;40\u0026#34;,\u0026#34;L0116440\u0026#34;) ClassMethod GetPatInfo(mi, labno) As %String { s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s TransmitDate=$tr($zd($h,3),\u0026#34;-\u0026#34;) s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) // IndexEpisodeNo On (TransmitDate, WorkGroupMachineDR, EpisodeNo) s MedicalRecordNo=\u0026#34;\u0026#34;,SpecimenDR=\u0026#34;\u0026#34;,Specimen=\u0026#34;\u0026#34;,EPIS=\u0026#34;\u0026#34; s MedicalRecordNo=$lg(RPVisitNumberData,6) //病案号 s SpecimenDR=$lg(RPVisitNumberData,56) //标本类型 s EPIS=..GetEPIS(mi, labno) //鉴定号 s AcceptDT=$p(EPIS,\u0026#34;^\u0026#34;,2) s EPIS=$p(EPIS,\u0026#34;^\u0026#34;,1) i $l(SpecimenDR) s Specimen=$lg($g(^dbo.BTSpecimenD(SpecimenDR)),3) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) i Location[\u0026#34;ICU\u0026#34; s Location=\u0026#34;重症监护室\u0026#34; s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$lg(RPVisitNumberData,3) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),3) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i AgeUnitDR=1 s AgeUnit=\u0026#34;y\u0026#34; i AgeUnitDR=2 s AgeUnit=\u0026#34;m\u0026#34; i AgeUnitDR=3 s AgeUnit=\u0026#34;d\u0026#34; i AgeUnitDR=4 s AgeUnit=\u0026#34;h\u0026#34; //i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) S Age=Age_AgeUnit s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$tr($lg(RPVisitNumberData,28),\u0026#34;,\u0026#34;,\u0026#34;，\u0026#34;) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; s Patna=PatName ;病人姓名 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode_\u0026#34;,\u0026#34;_MedicalRecordNo_\u0026#34;,\u0026#34;_Specimen_\u0026#34;,\u0026#34;_EPIS_\u0026#34;,\u0026#34;_AcceptDT q RetString } /// 监听做上传操作后调用改方法设置标本上传表状态 ClassMethod SaveSDFMTHD(mi, labno, epis, filename, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi),labno=$g(labno),epis = $g(epis),filename=$g(filename) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q s ret=##Class(MI.MachineUpload).SetSendFlag(mi,labno,\u0026#34;S\u0026#34;,filename) q } } ","date":"2025-01-10T00:00:00Z","image":"https://work.717170.xyz/img/title.jpg","permalink":"https://work.717170.xyz/p/%E5%8F%8C%E5%90%91%E6%8E%A5%E5%8F%A3%E7%A8%8B%E5%BA%8F%E6%95%B4%E5%90%88-20250112000712/","title":"双向接口程序整合"},{"content":" 通过接口测试仪器是否能传输到系统。\n如果日志中无传输日志则说明无传输，排查硬件问题。\n有传输的话则可根据传输日志解析。\n普通测试 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 MIFYHR(mi) s mi=$g(mi) S ^TMPMACH10(mi,104)=$H i \u0026#39;$l(mi) q s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 //控制字符 s stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4),etb=$c(23) s lf=$c(10),cr=$c(13),nak=$c(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 s SB=$C(11),EB=$C(28),CR=$c(13) s MSH=\u0026#34;MSH|^~\\\u0026amp;|LIS||FUS100||20090424130516||ACK|ACK0000001|P|2.3\u0026#34; S ^TMPMACH10(mi,102)=$H i $$Start^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q c Port q ErrHandler h 10 s iError=+$g(iError)+1 i iError\u0026gt;100 s ret=$$Stop^MI.MIF000(mi) q d Trace^MI.MIF000(mi,$tr($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) q Main SET $ZTRAP=\u0026#34;ErrHandler\u0026#34; S iERR=0 s record=$$Read^MI.MIF000(mi,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,2) i \u0026#39;$l(record) q ;s record=$tr(record,\u0026#34;*\u0026#34;,\u0026#34; \u0026#34;) d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) s (sample,epis,surname,result,date,time,QC)=\u0026#34;\u0026#34; //R0123□□□□□□□□□□□□□0101010005v s epis=$TR($E(record,4,18),\u0026#34; \u0026#34;) s code=$E(record,19,20) s res=$TR($E(record,25,28),\u0026#34;0\u0026#34;) s result=code_$c(92)_res_$c(44) ;i $l(result),$L(epis) Do Save^MI.MIF000(mi,epis,result,date,time,QC) q 要回复ACK版 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 MIFFUS3000HL7(mi) s mi=$g(mi) S ^TMPMACH10(mi,104)=$H i \u0026#39;$l(mi) q s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 //控制字符 s stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4),etb=$c(23) s lf=$c(10),cr=$c(13),nak=$c(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 s SB=$C(11),EB=$C(28),CR=$c(13) s MSH=\u0026#34;MSH|^~\\\u0026amp;|LIS||FUS100||20090424130516||ACK|ACK0000001|P|2.3\u0026#34; S ^TMPMACH10(mi,102)=$H i $$Start^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q c Port q ErrHandler h 10 s iError=+$g(iError)+1 i iError\u0026gt;100 s ret=$$Stop^MI.MIF000(mi) q d Trace^MI.MIF000(mi,$tr($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) q Main SET $ZTRAP=\u0026#34;ErrHandler\u0026#34; S iERR=0 s record=$$Read(mi,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,2) i \u0026#39;$l(record) q ;s record=$tr(record,\u0026#34;*\u0026#34;,\u0026#34; \u0026#34;) d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) ;d ACK s (sample,epis,surname,result,date,time,QC)=\u0026#34;\u0026#34; //R0123□□□□□□□□□□□□□0101010005v s epis=$TR($E(record,4,18),\u0026#34; \u0026#34;) s code=$E(record,19,20) s res=$TR($E(record,25,28),\u0026#34;0\u0026#34;) s result=code_$c(92)_res_$c(44) ;i $l(result),$L(epis) Do Save^MI.MIF000(mi,epis,result,date,time,QC) q /// Creator： Huhm /// CreatDate： 20150528 /// Description: 从通讯端口读取数据 /// Table： 无 /// Input： 仪器ID,开始符,结束符,是否保存所有数据,是否显示控制字符,超时时间值 /// Output： 无 /// Return： 0 /// Others： Read(mi,StartChar,EndChar,AllData,ControlChar,TimeOut) n (mi,StartChar,EndChar,AllData,ControlChar,TimeOut) s StartChar=$g(StartChar),EndChar=$g(EndChar),AllData=$g(AllData),ControlChar=$g(ControlChar),TimeOut=$g(TimeOut) s (Line,Flag)=0 i \u0026#39;$l(mi) q \u0026#34;\u0026#34; s:\u0026#39;TimeOut TimeOut=10 s:\u0026#39;$l(StartChar) Flag=1 SET $ZTRAP=\u0026#34;ErrRead\u0026#34;,$ECODE=\u0026#34;\u0026#34; //捕获错误开始 //循环读取一直读到字符包含结束字符 s Result=\u0026#34;\u0026#34; f r *x:TimeOut q:(\u0026#34;,\u0026#34;_EndChar_\u0026#34;,\u0026#34;)[(\u0026#34;,\u0026#34;_$c(x)_\u0026#34;,\u0026#34;) q:x=-1 i x d .d ACKE .//记录数据到globle .i $l($g(mi)),AllData=\u0026#34;Y\u0026#34; d ..i \u0026#39;Line s Line=$o(^TMPMACHDATA(mi,99,\u0026#34;\u0026#34;),-1)+1 ..s ^TMPMACHDATA(mi,99,Line)=$g(^TMPMACHDATA(mi,99,Line))_$c(x) .//读的字符没包含开始字符就退出，不累积到要的数据里 .i \u0026#39;Flag,(\u0026#34;,\u0026#34;_StartChar_\u0026#34;,\u0026#34;)[(\u0026#34;,\u0026#34;_$c(x)_\u0026#34;,\u0026#34;) s Flag=1 q .//是否要0-32的不可见字符 .i ControlChar=\u0026#34;Y\u0026#34;,x\u0026lt;32 q .//累积数据 .i Flag s Result=Result_$c(x) q Result ACK\t; send \u0026#39;ack\u0026#39; to instrument s ack=$c(6) w ack,*-3 d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q ACKE\t; send \u0026#39;ack\u0026#39; to instrument s ack=$c(6) w ack,*-3 ;d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q ErrRead s Error=$ze s Max=200 s Date=$zd(+$h,3),Time=$zt($p($h,\u0026#34;,\u0026#34;,2)) s Num=$o(^TMPMACHDATA(+mi,98,\u0026#34;\u0026#34;),-1)+1,^TMPMACHDATA(+mi,98,Num)=Date_\u0026#34; \u0026#34;_Time_\u0026#34; : Read : \u0026#34;_Error f j=Num-Max:-1 q:\u0026#39;$d(^TMPMACHDATA(+mi,98,j)) k ^TMPMACHDATA(+mi,98,j) h 3 q \u0026#34;\u0026#34; ","date":"2025-01-05T00:00:00Z","image":"https://work.717170.xyz/img/title.jpg","permalink":"https://work.717170.xyz/p/%E6%B5%8B%E8%AF%95%E4%BC%A0%E8%BE%93%E6%8E%A5%E5%8F%A3-20250105062905/","title":"测试传输接口"},{"content":"接口代码alphaBI(mi) ///仪器名称: ///仪器型号: ///仪器厂商: ///通信协议:\tHL7 ///交互方式:\t双 向 ///编 写 者:\tliubin ///编写日期:\t2018-08-14 ///接 口:\tTCP/IP,RS232 ///备 注:\t仪器配置:选择HL7协议,散点图选择:位图 S mi=$G(mi) Q:\u0026#39;$L(mi) s par11=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s par10=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s par4=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),17) //端口号 S stx=$C(2),etx=$C(3),ack=$C(6),enq=$C(5),eot=$C(4),etb=$C(23) S sb=$C(11),eb=$C(28),cr=$C(13) S lf=$C(10),nak=$C(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType)=\u0026#34;\u0026#34; Q:$$StartUTF8^MI.MIF000(mi) s par4=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 s IP=$li(^dbo.BTMIMachineParameterD(mi),9) s Port=$li(^dbo.BTMIMachineParameterD(mi),10) s LinkTime=0 s Device=\u0026#34;|TCP|\u0026#34;_Port F { try{ ;d Trace^MI.MIF000(mi,$ZA,\u0026#34;ZA\u0026#34;) //未启动客户端/服务端0，客户端断开连接标志20484，无客户端连接20480，有客户端连接28674，连接并建立数据传输28672 //lis断开 i $ZA=\u0026#34;0\u0026#34; { h 2 open Device:(IP:Port:/IOTABLE=\u0026#34;GB18030\u0026#34;):20 use Device d Trace^MI.MIF000(mi,\u0026#34;lis断开连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;lisReConnect\u0026#34;) //throw ##class(%Exception.General).%New(\u0026#34;ConnectError\u0026#34;,\u0026#34;D\u0026#34;,,\u0026#34;重新连接失败\u0026#34;) } //仪器断开，或者无数据1min，重启tcp ;i (($ZA=\u0026#34;20484\u0026#34;)||(LinkTime=6)) { i (($ZA=\u0026#34;16388\u0026#34;)) { close par4 d Trace^MI.MIF000(mi,\u0026#34;仪器断开连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;blockConnect\u0026#34;) h 2 open Device:(IP:Port:/IOTABLE=\u0026#34;GB18030\u0026#34;):20 use Device d Trace^MI.MIF000(mi,\u0026#34;重新连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;reConnect\u0026#34;) s LinkTime=0 continue } //连接无数据传输，main每执行6次，即1min，重启tcp i $ZA=\u0026#34;28674\u0026#34; s LinkTime=$i(LinkTime) //正常传输了，就清空计数 i $ZA=\u0026#34;28672\u0026#34; s LinkTime=0 d Main }catch ex{ s exception=\u0026#34;错误:\u0026#34;_ex.Location_\u0026#34;^\u0026#34;_ex.Data_ex.Name d Trace^MI.MIF000(mi,exception,\u0026#34;读取或写入异常，重启服务端\u0026#34;) } Q:$$Stop^MI.MIF000(mi) } C par4 Q /* F { D Main Q:$$Stop^MI.MIF000(mi) } C par4 Q */ Main SET $ZTRAP=\u0026#34;ErrHandler\u0026#34;,iError=0 s record=$$Read^MI.MIF000(mi,sb,eb) Q:\u0026#39;$l(record) Q:record=cr D Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType,msgType,barcode,mshStr)=\u0026#34;\u0026#34; S (LISMSHr,msgID,labno)=\u0026#34;\u0026#34; F i=1:1:$L(record,cr) D .S subRecord=$P(record,cr,i) .D Trace^MI.MIF000(mi,subRecord,\u0026#34;H\u0026lt;--M\u0026#34;) .S segmentType=$P(subRecord,\u0026#34;|\u0026#34;,1) .I segmentType=\u0026#34;MSH\u0026#34; d //信息头信息 ..//MSH|^~\\\u0026amp;|||||20180814165535||QRY^Q02|2|P|2.3.1||||||ASCII| ..S mshStr=subRecord ..S msgType=$P($P(subRecord,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,1) //ORU,ACK,QRY,QCK,DSR ..I msgType=\u0026#34;ORU\u0026#34; D SendACK(mi,subRecord,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;) .I segmentType=\u0026#34;OBR\u0026#34; d ..S epis=$P(subRecord,\u0026#34;|\u0026#34;,3) ..S:\u0026#39;$l(epis) epis=+$P(subRecord,\u0026#34;|\u0026#34;,4) ..D Trace^MI.MIF000(mi,subRecord,\u0026#34;subRecord\u0026#34;) ..D Trace^MI.MIF000(mi,epis,\u0026#34;epis\u0026#34;) .I segmentType=\u0026#34;OBX\u0026#34; d ..S dataTye=$P(subRecord,\u0026#34;|\u0026#34;,3) //NM (numeric) 表示数字值，用于定量项目, ..S channel=$p( $P(subRecord,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,1) ..S value=$P(subRecord,\u0026#34;|\u0026#34;,6) ..d Conversion ..i value[\u0026#34;^\u0026#34; S value=$P(value,\u0026#34;^\u0026#34;,3) ..i $l(channel),$l(value) S result=result_channel_$c(92)_value_$c(44) .I segmentType=\u0026#34;QRD\u0026#34; d ..s barcode=$P(subRecord,\u0026#34;|\u0026#34;,9) .I segmentType=\u0026#34;QRF\u0026#34; d\t//就诊信息 ..D SendQACK(mi,mshStr,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;) ..;h 0.5 ..d SendDSR(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;,mshStr,barcode) I $l(epis),$l(result) d .D Trace^MI.MIF000(mi,epis_\u0026#34;$$\u0026#34;_result,\u0026#34;Result\u0026#34;) .D Save^MI.MIF000(mi,epis,result,date,time,QC) .S (sample,epis,surname,rec,res,result,date,time,QC,resultType)=\u0026#34;\u0026#34; Q Conversion i channel=\u0026#34;UC_COL\u0026#34; d .i value=\u0026#34;Yellow\u0026#34; s value=\u0026#34;黄色\u0026#34; i value=\u0026#34;-\u0026#34; s value=\u0026#34;阴性\u0026#34; i channel=\u0026#34;UC_URO\u0026#34; d .i value=\u0026#34;Normal\u0026#34; s value=\u0026#34;3.2\u0026#34; q SendACK(mi,mshStr,ackType=\u0026#34;AA\u0026#34;,errCode=0,errDesc=\u0026#34;Message accepted\u0026#34;) //send \u0026#39;ack\u0026#39; to instrument N (mi,mshStr,ackType,errCode,errDesc) S mi=$g(mi),mshStr=$g(mshStr),ackType=$g(ackType),errCode=$g(errCode),errDesc=$g(errDesc) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) //Q:$l(mshStr,\u0026#34;|\u0026#34;)\u0026lt;21 ret S ret=0 S msgRoutine=$P($P(mshStr,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,2) S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;||||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;ACK^\u0026#34;_msgRoutine S testDD=sb_mshStr_cr_\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_\u0026#34;|\u0026#34;_errDesc_\u0026#34;|||\u0026#34;_errCode_\u0026#34;|\u0026#34;_cr_eb_cr // S testDD=sb_mshStr_cr_\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_cr_eb_cr D Trace^MI.MIF000(mi,testDD,\u0026#34;H--\u0026gt;M\u0026#34;) W sb,mshStr,cr,\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_\u0026#34;|\u0026#34;_errDesc_\u0026#34;|||\u0026#34;_errCode_\u0026#34;|\u0026#34;,cr,eb,cr,*-3 // W sb,mshStr,cr,\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,$S(ackType=\u0026#34;AA\u0026#34;:\u0026#34;ACK\u0026#34;,ackType=\u0026#34;AE\u0026#34;:\u0026#34;Error\u0026#34;,ackType=\u0026#34;AR\u0026#34;:\u0026#34;NAK\u0026#34;,1:\u0026#34;NULL\u0026#34;),\u0026#34;H--\u0026gt;M\u0026#34;) Q ret SendQACK(mi,mshStr,ackType=\u0026#34;AA\u0026#34;,errCode=0,errDesc=\u0026#34;Message accepted\u0026#34;) //send \u0026#39;ack\u0026#39; to instrument N (mi,mshStr,ackType,errCode,errDesc) S mi=$g(mi),mshStr=$g(mshStr),ackType=$g(ackType),errCode=$g(errCode),errDesc=$g(errDesc) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) //Q:$l(mshStr,\u0026#34;|\u0026#34;)\u0026lt;21 ret S ret=0 S msgRoutine=$P($P(mshStr,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,2) S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;QCK^\u0026#34;_msgRoutine s QACK=sb_mshStr_cr_\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_\u0026#34;|\u0026#34;_errDesc_\u0026#34;|||\u0026#34;_errCode_\u0026#34;|\u0026#34;_cr_\u0026#34;ERR|0|\u0026#34;_cr_\u0026#34;QAK|SR|OK|\u0026#34;_cr_eb_cr W sb,mshStr,cr,\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_\u0026#34;|\u0026#34;_errDesc_\u0026#34;|||\u0026#34;_errCode_\u0026#34;|\u0026#34;,cr,\u0026#34;ERR|0|\u0026#34;,cr,\u0026#34;QAK|SR|OK|\u0026#34;,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,QACK,\u0026#34;H--\u0026gt;M\u0026#34;) Q ret /// w $$SendDSR^MI.MIFFUS1680MZSXA(42,\u0026#34;\u0026#34;,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;,\u0026#34;MSH|^~\\\u0026amp;|URIT|US.IPU||LIS|20201223171930||ORU^Q02|15|P|2.3.1||||||ASCII|||\u0026#34;,\u0026#34;9000002787\u0026#34;) SendDSR(mi,record, AckType=\u0026#34;AA\u0026#34;,ErrCode=0,ErrDesc=\u0026#34;Message accepted\u0026#34;,mshStr,epis) N (mi,record,AckType,ErrCode,ErrDesc,mshStr,epis) s mi=$g(mi),record=$g(record),AckType=$g(AckType),ErrCode=$g(ErrCode),ErrDesc=$g(ErrDesc),mshStr=$g(mshStr),epis=$g(epis) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) S ret=0 S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|||SUNOSTIK|SUNMATIK-9050|\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,7,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;DSR^Q03\u0026#34; s isRecieve=\u0026#34;\u0026#34; s wgDR=\u0026#34;\u0026#34; s wgDR=$lg(^dbo.BTMIMachineParameterD(mi),6) //\u0026amp;sql(SELECT EpisodeNo into :isRecieve FROM dbo.RP_VisitNumberReport where AssayNo=:epis and WorkGroupMachineDR=:wgDR) s isRecieve=epis //##class(HIS.DHCReportPrint).GetReportAssayNoMTHD(mi,epis) s flag=\u0026#34;AA\u0026#34; s MSACode=seq D Trace^MI.MIF000(mi,isRecieve,\u0026#34;isRecieve is \u0026#34;) i ($l(isRecieve)\u0026lt;1) { s flag=\u0026#34;AR\u0026#34; } i $ZCVT(epis,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;){ s flag=\u0026#34;AR\u0026#34; } ;s MSA=\u0026#34;MSA|\u0026#34;_flag_\u0026#34;|\u0026#34;_MSACode s MSA=\u0026#34;MSA|\u0026#34;_flag_\u0026#34;|\u0026#34;_MSACode_\u0026#34;|Message Accepted|||0|\u0026#34; i flag=\u0026#34;AR\u0026#34;{ S TMPCORDE=sb_mshStr_cr_MSA_cr_eb_cr W sb,mshStr,cr,MSA,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,TMPCORDE,\u0026#34;H-\u0026gt;M\u0026#34;) }else{ s PatInfomation=\u0026#34;\u0026#34; s PatInfomation=$$GetPatInfo(epis,mi) //s EpisodeNo=$$GetPatEpisodeNo(mi,epis) D Trace^MI.MIF000(mi,PatInfomation,\u0026#34;PatInfomation is\u0026#34;) s (RegNo,Name,Birth,Species,PatType,LOC,BedNo,Fee,Srcdocno,PatAge)=\u0026#34;\u0026#34; if $l(PatInfomation){ s RegNo=$p(PatInfomation,\u0026#34;,\u0026#34;,9) s Name=$p(PatInfomation,\u0026#34;,\u0026#34;,10) s Birth=$p(PatInfomation,\u0026#34;,\u0026#34;,29)_\u0026#34;000000\u0026#34; s Species=$p(PatInfomation,\u0026#34;,\u0026#34;,11) i Species=\u0026#34;1\u0026#34; s Species=\u0026#34;M\u0026#34; i Species=\u0026#34;2\u0026#34; s Species=\u0026#34;F\u0026#34; s PatType=$p(PatInfomation,\u0026#34;,\u0026#34;,12) s LOC=$p(PatInfomation,\u0026#34;,\u0026#34;,6) s BedNo=$p(PatInfomation,\u0026#34;,\u0026#34;,13) s Fee=$p(PatInfomation,\u0026#34;,\u0026#34;,5) s Srcdocno=$p(PatInfomation,\u0026#34;,\u0026#34;,7) s PatAge=$p(PatInfomation,\u0026#34;,\u0026#34;,14) s AgeUnit=$p(PatInfomation,\u0026#34;,\u0026#34;,15) } s ERR=\u0026#34;ERR|0|\u0026#34; s QAK=\u0026#34;QAK|SR|OK|\u0026#34; s QRD=\u0026#34;QRD|\u0026#34;_$p(mshStr,\u0026#34;|\u0026#34;,7)_\u0026#34;|R|D|1|||RD||OTH|||T|\u0026#34; s QRF=\u0026#34;QRF||||||RCT|COR|ALL||\u0026#34; s PID=\u0026#34;PID|1||\u0026#34;_RegNo_\u0026#34;^^^^MR||\u0026#34;_Name_\u0026#34;||\u0026#34;_Birth_\u0026#34;|\u0026#34;_Species s PV1=\u0026#34;PV1|1|\u0026#34;_PatType_\u0026#34;|\u0026#34;_LOC_\u0026#34;^^\u0026#34;_BedNo_\u0026#34;|||||||||||||||||\u0026#34;_Fee s ORC=\u0026#34;ORC|AF||\u0026#34;_epis s curTime=$zd($h,8)_$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;,\u0026#34;\u0026#34;) s randomNumber=1000+$r(1000) s OBR=\u0026#34;OBR|1|\u0026#34;_epis_\u0026#34;||00001^Automated Count^99MRC||\u0026#34;_curTime_randomNumber_\u0026#34;||||\u0026#34;_Srcdocno_\u0026#34;||||||||||||||HM||||||||Bill\u0026#34; s TestCodeDate=\u0026#34;\u0026#34; s TestCodeDate=$$SearchTestItemA(mi,epis) B ;V009 D Trace^MI.MIF000(mi,TestCodeDate,\u0026#34;TestCodeDate\u0026#34;) //s TcNum=$p(TestCodeDate,\u0026#34;@\u0026#34;,2) //s TestCodeDate=$p(TestCodeDate,\u0026#34;@\u0026#34;,1) //s TestCodeDate=\u0026#34;\u0026#34; s DSP=\u0026#34;DSP|1||\u0026#34;_RegNo_\u0026#34;|||\u0026#34;_cr_ \u0026#34;DSP|2||\u0026#34;_PatAge_\u0026#34;|||\u0026#34;_cr_ \u0026#34;DSP|3||\u0026#34;_Name_\u0026#34;|||\u0026#34;_cr_ \u0026#34;DSP|4||\u0026#34;_PatAge_\u0026#34;^\u0026#34;_\u0026#34;\u0026#34;_\u0026#34;|||\u0026#34;_cr_ \u0026#34;DSP|5||\u0026#34;_Species_\u0026#34;|||\u0026#34;_cr_ \u0026#34;DSP|6|||||\u0026#34;_cr_ \u0026#34;DSP|7|||||\u0026#34;_cr_ \u0026#34;DSP|8|||||\u0026#34;_cr_ \u0026#34;DSP|9|||||\u0026#34;_cr_ \u0026#34;DSP|10|||||\u0026#34;_cr_ \u0026#34;DSP|11|||||\u0026#34;_cr_ \u0026#34;DSP|12|||||\u0026#34;_cr_ \u0026#34;DSP|13|||||\u0026#34;_cr_ \u0026#34;DSP|14|||||\u0026#34;_cr_ \u0026#34;DSP|15|||||\u0026#34;_cr_ \u0026#34;DSP|16|||||\u0026#34;_cr_ \u0026#34;DSP|17|||||\u0026#34;_cr_ \u0026#34;DSP|18|||||\u0026#34;_cr_ \u0026#34;DSP|19|||||\u0026#34;_cr_ \u0026#34;DSP|20|||||\u0026#34;_cr_ \u0026#34;DSP|21||\u0026#34;_epis_\u0026#34;|||\u0026#34;_cr_ \u0026#34;DSP|22||\u0026#34;_9999_\u0026#34;|||\u0026#34;_cr_ \u0026#34;DSP|23|||||\u0026#34;_cr_ \u0026#34;DSP|24||N|||\u0026#34;_cr_ \u0026#34;DSP|25|||||\u0026#34;_cr_ \u0026#34;DSP|26||serum|||\u0026#34;_cr_ \u0026#34;DSP|27|||||\u0026#34;_cr_ \u0026#34;DSP|28|||||\u0026#34;_cr //\u0026#34;DSP|29||UC^^1||\u0026#34;_cr_ //\u0026#34;DSP|30||UD^^1||\u0026#34; B ;V0004 s DSC=\u0026#34;DSC||\u0026#34; //s TestCodeDate=\u0026#34;DSP|29||1^HBcAb-G^^|||\u0026#34;_cr //S TMPORDER=sb_mshStr_cr_MSA_cr_ERR_cr_QAK_cr_QRD_cr_QRF_cr_DSP_cr_TestCodeDate_DSC_cr_eb_cr b ;001 S TMPORDER=sb_mshStr_cr_MSA_cr_ERR_cr_QAK_cr_QRD_cr_QRF_cr_DSP_cr_TestCodeDate_DSC_cr_eb_cr B ;002 D Trace^MI.MIF000(mi,TMPORDER,\u0026#34;H-\u0026gt;M1\u0026#34;) //h 1 //w sb,mshStr,cr,MSA,cr,ERR,cr,QAK,cr,QRD,cr,QRF,cr,DSP,cr,TestCodeDate,DSC,cr,eb,cr,*-3 w sb,mshStr,cr,MSA,cr,ERR,cr,QAK,cr,QRD,cr,QRF,cr,DSP,TestCodeDate,DSC,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,TMPORDER,\u0026#34;H-\u0026gt;M2\u0026#34;) B ;00222 } Q ret GetPatInfo(labno,mi) s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,labno,\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$lg(RPVisitNumberData,3) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),2) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s BirthDate=$lg(RPVisitNumberData,16) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$lg(RPVisitNumberData,28) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; s Patna=PatName ;病人姓名 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s EpisodeNo=\u0026#34;\u0026#34; s Diagnose=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode_\u0026#34;,\u0026#34;_BirthDate_\u0026#34;,\u0026#34;_EpisodeNo q RetString SearchTestItem(mi,epis) S tcx=\u0026#34;\u0026#34;,tc=\u0026#34;\u0026#34;,Num=29,TcNum=1 d ScanOne^MI.MIF000(mi,epis) i $d(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis)){ f { s tc=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis,tc)) q:tc=\u0026#34;\u0026#34; B ;V---- s tcx=tcx_\u0026#34;DSP|\u0026#34;_Num_\u0026#34;||\u0026#34;_TcNum_\u0026#34;^\u0026#34;_tc_\u0026#34;^^|||\u0026#34;_cr s TcNum=TcNum+1 s Num=Num+1 } } Q tcx_\u0026#34;@\u0026#34;_TcNum SearchTestItemA(mi,epis) S tcx=\u0026#34;\u0026#34;,tc=\u0026#34;\u0026#34;,Num=29,TcNum=1 d ScanOne^MI.MIF000(mi,epis) i $d(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis)){ f { s tc=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis,tc)) q:tc=\u0026#34;\u0026#34; B ;V---- s tcx=tcx_\u0026#34;DSP|\u0026#34;_Num_\u0026#34;||\u0026#34;_tc_\u0026#34;||\u0026#34;_cr //\u0026#34;DSP|29||UC^^1||\u0026#34;_cr_ s TcNum=TcNum+1 s Num=Num+1 } } Q tcx GetPatEpisodeNo(mi,labno) S mi= $G(mi) S labno= $G(labno) i \u0026#39;$l(labno) q \u0026#34;\u0026#34; i \u0026#39;$l(mi) q \u0026#34;\u0026#34; s (orderno,VisitNumberDR)=\u0026#34;\u0026#34; s labno=\u0026#34; \u0026#34;_labno s WGMDR=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) i \u0026#39;$l(WGMDR) q \u0026#34;\u0026#34; S VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,labno,\u0026#34;\u0026#34;)) s orderno=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,WGMDR,\u0026#34;\u0026#34;)) i \u0026#39;$l(orderno) q \u0026#34;\u0026#34; s reportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,WGMDR,orderno,\u0026#34;\u0026#34;)) s AssayNo =$lg($g(^dbo.RPVisitNumberReportD(reportDR)),8) Q AssayNo ErrHandler D Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) h 10 Q 通道号配置 上传通道号\n尿常规：UC^^1\n尿沉渣：UD^^1\n​​\n‍\n","date":"2025-01-04T00:00:00Z","image":"https://work.717170.xyz/img/title.jpg","permalink":"https://work.717170.xyz/p/%E4%BC%98%E5%88%A9%E7%89%B91680-20250104212004/","title":"优利特1680"},{"content":"2024年12月17日11:37:47\t将patid作为患者唯一id 1 2 3 s RegNo=$lg(VisitNumberData,3) s:$l(RegNo) patId=$o(^[\u0026#34;dhc-app\u0026#34;]PAPERi(\u0026#34;PAPMI_PatNo\u0026#34;,RegNo,\u0026#34;\u0026#34;)) ;s patId=RegNo// ！！！根据项目实际情况，如果主表用patid作为患者唯一主键则屏蔽该行,登记号则放开！！！ 2024年12月17日11:40:12\t将病房号从code改为主键 1 2 ;病房号 s InputObj.\u0026#34;ward_no\u0026#34;=WardDR 2024年12月18日17:09:59\t报告中同时存在定性和定量结果时，定性结果转标化未置空 1 s (examinationStringResultCode,examinationStringResultName)=\u0026#34;\u0026#34; 2024年12月19日20:40:38\t增加配置参数，非互认数据是否上传 1 2 /// 非对照数据是否上传(1:上传,0:不上传)(科室互认,标本类型互认,检测项目互认) Parameter IsInput = 0; 2024年12月24日22:20:12\t新增等待时间，第三方要求先推送完报告信息等待一会在推送结果信息，预警可能失效，推荐入参30分钟。只针对方案一，方案二无法优化。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 /// Time:时间(分钟) /// d ##class(LISAPP.LIS.BLL.UplaodDataBSToD3C).Do(30) ClassMethod Do(Time) { s Time=$g(Time) i \u0026#39;$l(Time) s Time=120 s STime=+Time*60+60 s SttDT=..GetMinutesAgoTime($zdt($h,8),STime) s EndDT=$zdt($h,8) s SttDate=$p(SttDT,\u0026#34; \u0026#34;,1) s SttTime=$zth($p(SttDT,\u0026#34; \u0026#34;,2)) s EndDate=$p(EndDT,\u0026#34; \u0026#34;,1) s EndTime=$zth($p(EndDT,\u0026#34; \u0026#34;,2)) s WorkGroupMachineDR=\u0026#34;\u0026#34; f s WorkGroupMachineDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAuthDate\u0026#34;,WorkGroupMachineDR)) q:WorkGroupMachineDR=\u0026#34;\u0026#34; d .s AuthDate=SttDate-1 f s AuthDate=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAuthDate\u0026#34;,WorkGroupMachineDR,AuthDate)) q:((AuthDate=\u0026#34;\u0026#34;)||(AuthDate\u0026gt;EndDate)) d ..s ReportDR=\u0026#34;\u0026#34; f s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAuthDate\u0026#34;,WorkGroupMachineDR,AuthDate,ReportDR)) q:ReportDR=\u0026#34;\u0026#34; d ...s AuthTime=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),20) ...i AuthTime\u0026lt;SttTime q ...i AuthTime\u0026gt;EndTime q ...i \u0026#39;$l($$IsReportOutPut(ReportDR)) q ...i $d(^TMP($zn,$j,$i,ReportDR,1)) q ...d ..SendReportInfo(ReportDR) ...s ^TMP($zn,$j,$i,ReportDR,1)=\u0026#34;\u0026#34; //*************************延时等待****************************// h 30\t// 等待30秒 s WorkGroupMachineDR=\u0026#34;\u0026#34; f s WorkGroupMachineDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAuthDate\u0026#34;,WorkGroupMachineDR)) q:WorkGroupMachineDR=\u0026#34;\u0026#34; d .s AuthDate=SttDate-1 f s AuthDate=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAuthDate\u0026#34;,WorkGroupMachineDR,AuthDate)) q:((AuthDate=\u0026#34;\u0026#34;)||(AuthDate\u0026gt;EndDate)) d ..s ReportDR=\u0026#34;\u0026#34; f s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAuthDate\u0026#34;,WorkGroupMachineDR,AuthDate,ReportDR)) q:ReportDR=\u0026#34;\u0026#34; d ...s AuthTime=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),20) ...i AuthTime\u0026lt;SttTime q ...i AuthTime\u0026gt;EndTime q ...i \u0026#39;$l($$IsReportOutPut(ReportDR)) q ...i $d(^TMP($zn,$j,$i,ReportDR,2)) q ...d ..SendResultInfo(ReportDR) ...s ^TMP($zn,$j,$i,ReportDR,2)=\u0026#34;\u0026#34; q IsReportOutPut(ReportDR) s ret=\u0026#34;\u0026#34; i \u0026#39;$l(ReportDR) q ret s Status=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),22) q:Status\u0026#39;[\u0026#34;3\u0026#34; ret s VisitNumberDR=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),2) s HospitalDR=$lg($g(^dbo.RPVisitNumberD(VisitNumberDR)),21)\t//限制条件 s ret=\u0026#34;1\u0026#34; q ret } ‍\n‍\n国家传染病接口 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 Class LISAPP.LIS.BLL.UplaodDataBSToD3C Extends %RegisteredObject { /* 说明：\t1.将平台方法放到注释对应的位置，调用 w ##class(LISAPP.LIS.BLL.UplaodDataBSToD3C).Send(\u0026#34;26\u0026#34;) 看平台是否有日志 2.方案一(推荐)：部署定时任务，设置多久运行一次就入参为多少分钟，没有入参默认为120分钟(2小时) (新增等待时间，第三方要求先推送完报告信息等待一会在推送结果信息，否则预警可能失效，推荐入参30分钟。只针对方案一，方案二无法优化。) d ##class(LISAPP.LIS.BLL.UplaodDataBSToD3C).Do(30) 方案二：实时调用，将主方法放到检验消息任务审核后推送 win服务器版本lis，【dhc-app】web.DHCLisRealTimeInterface\tlinux服务器版本lis，【dhc-lisdata】LISAPP.TASK.LisRealTimeInterface try{s ret=##class(LISAPP.LIS.BLL.UplaodDataBSToD3C).Send(VisitNumberReportDR)}catch{} */ /// 申请机构代码 Parameter SQJGCode = \u0026#34;SQJGCode\u0026#34;; /// 申请机构名称 Parameter SQJGName = \u0026#34;SQJGName\u0026#34;; /// 非对照数据是否上传(1:上传,0:不上传)(科室互认,标本类型互认,检测项目互认) Parameter IsInput = 0; /// Creator： yanghaoran /// CreatDate： 2024-12-24 /// Description： 国家传染病智能监测预警前置软件接口部署：检验报告 emr_ex_lab /// 国家传染病智能监测预警前置软件接口部署：检验报告项目 emr_ex_lab_item /// Table： /// Input： 报告RowID /// Output： /// Return： /// w ##class(LISAPP.LIS.BLL.UplaodDataBSToD3C).Send(\u0026#34;26\u0026#34;) ClassMethod Send(ReportDR) As %String { i \u0026#39;$l(ReportDR) q \u0026#34;\u0026#34; s Status=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),22) q:Status\u0026#39;[\u0026#34;3\u0026#34; \u0026#34;\u0026#34; s VisitNumberDR=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),2) s HospitalDR=$lg($g(^dbo.RPVisitNumberD(VisitNumberDR)),21)\t//限制条件 d ..SendReportInfo(ReportDR) d ..SendResultInfo(ReportDR) q \u0026#34;\u0026#34; } /// 国家传染病智能监测预警前置软件接口部署：检验报告 emr_ex_lab /// w ##class(LISAPP.LIS.BLL.UplaodDataBSToD3C).SendReportInfo(26) ClassMethod SendReportInfo(ReportDR As %String) As %Stream.GlobalCharacter { s InputObj={} ;##class(DHCDoc.Util.ArrayData).%New()\t##class(%DynamicObject).%New() q:ReportDR=\u0026#34;\u0026#34; \u0026#34;\u0026#34; q:\u0026#39;$d(^dbo.RPVisitNumberReportD(ReportDR)) \u0026#34;\u0026#34; s VisitNumberDR=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),2) s Status=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),22) q:Status\u0026#39;[\u0026#34;3\u0026#34; \u0026#34;\u0026#34; s VisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) ;就诊号 s AdmNo=$lg(VisitNumberData,5) ;登记号 s RegNo=$lg(VisitNumberData,3) s:$l(RegNo) patId=$o(^[\u0026#34;dhc-app\u0026#34;]PAPERi(\u0026#34;PAPMI_PatNo\u0026#34;,RegNo,\u0026#34;\u0026#34;)) ;s patId=RegNo\t// ！！！根据项目实际情况，如果主表用patid作为患者唯一主键则屏蔽该行,登记号则放开！！！ ;检验信息在院内的唯一识别标识 s InputObj.\u0026#34;id\u0026#34;=ReportDR ;机构内患者基本信息唯一标识 s InputObj.\u0026#34;patient_id\u0026#34;=$g(patId) ;诊断活动类型代码 诊断活动类型名称 s AdmissionTypeDR=$lg(VisitNumberData,4),AdmissionTypeCode=\u0026#34;\u0026#34;,AdmissionTypeName=\u0026#34;\u0026#34; i $l(AdmissionTypeDR) d .s AdmissionTypeCode=$lg($g(^dbo.BTAdmissionTypeD(AdmissionTypeDR)),2)\t;就诊类型 s InputObj.\u0026#34;activity_type_code\u0026#34;=$case(AdmissionTypeCode,\u0026#34;O\u0026#34;:\u0026#34;1\u0026#34;,\u0026#34;I\u0026#34;:\u0026#34;2\u0026#34;,\u0026#34;E\u0026#34;:\u0026#34;6\u0026#34;,:\u0026#34;1\u0026#34;) s InputObj.\u0026#34;activity_type_name\u0026#34;=$case(AdmissionTypeCode,\u0026#34;O\u0026#34;:\u0026#34;门诊\u0026#34;,\u0026#34;I\u0026#34;:\u0026#34;急诊\u0026#34;,\u0026#34;E\u0026#34;:\u0026#34;住院\u0026#34;,:\u0026#34;门诊\u0026#34;) ;就诊流水号 s InputObj.\u0026#34;serial_number\u0026#34;=AdmNo ;就诊者姓名 s InputObj.\u0026#34;patient_name\u0026#34;=$lg(VisitNumberData,13) ;身份证件类别代码 身份证件类别名称 身份证件号 s IDNumber=$lg(VisitNumberData,11) i \u0026#39;$l(IDNumber),$l(AdmNo) d .s patientid=$p($g(^[\u0026#34;dhc-app\u0026#34;]PAADM(AdmNo)),\u0026#34;^\u0026#34;,1) .s IDNumber=$P($g(^[\u0026#34;dhc-app\u0026#34;]PAPER(patientid,\u0026#34;PER\u0026#34;,2)),\u0026#34;^\u0026#34;,1)\t//如果检验表里没有身份证号，尝试从his获取身份证号 i $l(IDNumber) d .s InputObj.\u0026#34;id_card_type_code\u0026#34;=\u0026#34;01\u0026#34; .s InputObj.\u0026#34;id_card_type_name\u0026#34;=\u0026#34;居民身份证\u0026#34; .s InputObj.\u0026#34;id_card\u0026#34;=IDNumber e d .s BirthDate=$lg(VisitNumberData,16) .s InputObj.\u0026#34;id_card_type_code\u0026#34;=\u0026#34;99\u0026#34; .s InputObj.\u0026#34;id_card_type_name\u0026#34;=\u0026#34;其他法定有效证件\u0026#34; .s InputObj.\u0026#34;id_card\u0026#34;=BirthDate ;病区名称 s WardDR=$lg(VisitNumberData,26) s InputObj.\u0026#34;ward_name\u0026#34;=$s($l(WardDR):$lg($g(^dbo.BTWardD(WardDR)),3),1:\u0026#34;\u0026#34;) ;病房号 s InputObj.\u0026#34;ward_no\u0026#34;=WardDR ;病床号 s InputObj.\u0026#34;bed_no\u0026#34;=$lg(VisitNumberData,27) ;电子申请单编号 s InputObj.\u0026#34;application_form_no\u0026#34;=ReportDR s LocationDR = $lg(VisitNumberData,22) s LocationCode=$s($l(LocationDR):$lg($g(^dbo.BTLocationD(LocationDR)),2),1:\u0026#34;\u0026#34;) s LocationName=$s($l(LocationDR):$lg($g(^dbo.BTLocationD(LocationDR)),3),1:\u0026#34;\u0026#34;) s LocationData=..GetData(\u0026#34;SQKS\u0026#34;,LocationCode) i \u0026#39;$l(LocationData),..#IsInput q \u0026#34;\u0026#34; i $l(LocationData) d .s LocationCode=$p(LocationData,\u0026#34;^\u0026#34;,1) .s LocationName=$p(LocationData,\u0026#34;^\u0026#34;,2)\t//***HR***// ;检验申请科室代码 s InputObj.\u0026#34;apply_dept_code\u0026#34;=LocationCode ;检验申请科室名称 s InputObj.\u0026#34;apply_dept_name\u0026#34;=LocationName s HospitalDR=$lg(VisitNumberData,21) ;检验申请机构代码 名称 s InputObj.\u0026#34;apply_org_code\u0026#34;=..#SQJGCode s InputObj.\u0026#34;apply_org_name\u0026#34;=..#SQJGName ;检验申请医师 s DoctorDR=$lg(VisitNumberData,23) s InputObj.\u0026#34;apply_physician_id\u0026#34;=$s($l(DoctorDR):$lg($g(^dbo.BTDoctorD(DoctorDR)),2),1:\u0026#34;\u0026#34;) ;标本类别代码 s SpecimenDR=$lg(VisitNumberData,56) s SpecimenCode=$s($l(SpecimenDR):$lg($g(^dbo.BTSpecimenD(SpecimenDR)),2),1:\u0026#34;\u0026#34;) s SpecimenName=$s($l(SpecimenDR):$lg($g(^dbo.BTSpecimenD(SpecimenDR)),3),1:\u0026#34;\u0026#34;) s SpecimenData=..GetData(\u0026#34;SP\u0026#34;,SpecimenCode) i \u0026#39;$l(SpecimenCode),..#IsInput q \u0026#34;\u0026#34; i $l(SpecimenData) d .s SpecimenCode=$p(SpecimenData,\u0026#34;^\u0026#34;,1) .s SpecimenName=$p(SpecimenData,\u0026#34;^\u0026#34;,2)\t//***HR***// s InputObj.\u0026#34;specimen_category_code\u0026#34;=SpecimenCode s InputObj.\u0026#34;specimen_category_name\u0026#34;=SpecimenName ;检验标本号 s InputObj.\u0026#34;specimen_no\u0026#34;=$lg(VisitNumberData,2) ;标本采样日期时间 s CollectDate=$lg(VisitNumberData,51) s CollectTime=$lg(VisitNumberData,52) s InputObj.\u0026#34;specimen_sampling_date\u0026#34;=$s(($l(CollectDate)\u0026amp;\u0026amp;$l(CollectTime)):$zd($zdh(CollectDate,8),3)_\u0026#34; \u0026#34;_$zt(CollectTime),1:\u0026#34;\u0026#34;) ;接收标本日期时间 s ReceiveDate=$lg(VisitNumberData,66) s ReceiveTime=$lg(VisitNumberData,67) s InputObj.\u0026#34;specimen_receiving_date\u0026#34;=$s(($l(ReceiveDate)\u0026amp;\u0026amp;$l(ReceiveTime)):$zd($zdh(ReceiveDate,8),3)_\u0026#34; \u0026#34;_$zt(ReceiveTime),1:\u0026#34;\u0026#34;) ;检验医师 s AcceptUserDR=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),11) s InputObj.\u0026#34;examination_physician_id\u0026#34;=$s($l(AcceptUserDR):$lg($g(^dbo.SYSUserD(AcceptUserDR)),2),1:\u0026#34;\u0026#34;) ;检验日期 s:ReceiveDate\u0026#39;=\u0026#34;\u0026#34; InputObj.\u0026#34;examination_date\u0026#34;=$zd($zdh(ReceiveDate,8),3) ;检验报告单编号 s InputObj.\u0026#34;examination_report_no\u0026#34;=ReportDR ;检验报告结果-客观所见 s InputObj.\u0026#34;examination_objective_desc\u0026#34;=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),40) ;检验报告结果-主观提示 s InputObj.\u0026#34;examination_subjective_desc\u0026#34;=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),41) ;检验报告备注 s InputObj.\u0026#34;examination_notes\u0026#34;=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),40) ;检验报告日期 s ReportDate=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),19) s ReportTime=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),20) s InputObj.\u0026#34;examination_report _date\u0026#34;=$s(($l(ReportDate)\u0026amp;\u0026amp;$l(ReportTime)):$zd($zdh(ReportDate,8),3),1:\u0026#34;\u0026#34;) ;报告医师 s AuthUserDR=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),21) s InputObj.\u0026#34;examination_report _id\u0026#34;=$s($l(AuthUserDR):$lg($g(^dbo.SYSUserD(AuthUserDR)),2),1:\u0026#34;\u0026#34;) ;科室代码 科室名称 s InputObj.\u0026#34;dept_code\u0026#34;=\u0026#34;A30\u0026#34; s InputObj.\u0026#34;dept_name\u0026#34;=\u0026#34;医学检验科\u0026#34; ;医疗机构代码 医疗机构名称 操作人 s InputObj.\u0026#34;org_code\u0026#34;=..#SQJGCode s InputObj.\u0026#34;org_name\u0026#34;=..#SQJGName s InputObj.\u0026#34;operator_id\u0026#34;=\u0026#34;\u0026#34; ;操作时间 s InputObj.\u0026#34;operation_time\u0026#34;=$zd(+$h,3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2),1) s ReturnJson=InputObj.%ToJSON() s stream=##class(%Stream.GlobalCharacter).%New() d stream.Write(ReturnJson) //*************************平台方法****************************// //s retStr=##Class(web.DHCENS.BLL.GJCRBSB.Method.CRBService).CRBService(\u0026#34;MES0239\u0026#34;,stream).Read() b ;Report retStr Q \u0026#34;\u0026#34; } /// 国家传染病智能监测预警前置软件接口部署：检验报告项目 emr_ex_lab_item /// w ##class(LISAPP.LIS.BLL.UplaodDataBSToD3C).SendResultInfo(361) ClassMethod SendResultInfo(ReportDR As %String) As %Stream.GlobalCharacter { i \u0026#39;$l(ReportDR) q \u0026#34;\u0026#34; s Status=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),22) q:Status\u0026#39;[\u0026#34;3\u0026#34; \u0026#34;\u0026#34; s fTestSetDR=\u0026#34;\u0026#34; f s fTestSetDR=$o(^dbo.RPVisitNumberReportResultI(\u0026#34;IndexTestSet\u0026#34;,ReportDR,fTestSetDR)) q:fTestSetDR=\u0026#34;\u0026#34; d .s fTestCodeDR=\u0026#34;\u0026#34; f s fTestCodeDR=$o(^dbo.RPVisitNumberReportResultI(\u0026#34;IndexTestSet\u0026#34;,ReportDR,fTestSetDR,fTestCodeDR)) q:fTestCodeDR=\u0026#34;\u0026#34; d ..s ResultDR=$o(^dbo.RPVisitNumberReportResultI(\u0026#34;IndexTestSet\u0026#34;,ReportDR,fTestSetDR,fTestCodeDR,\u0026#34;\u0026#34;)) ..d ResultInfo q \u0026#34;\u0026#34; ResultInfo s InputObj={} ;##class(DHCDoc.Util.ArrayData).%New() q:ResultDR=\u0026#34;\u0026#34; \u0026#34;\u0026#34; q:\u0026#39;$d(^dbo.RPVisitNumberReportResultD(ResultDR)) \u0026#34;\u0026#34; s ResultData=$g(^dbo.RPVisitNumberReportResultD(ResultDR)) s AdmNo=$lg($g(^dbo.RPVisitNumberReportResultD(ResultDR)),23) ;检查信息在院内的唯一识别标识 s InputObj.\u0026#34;id\u0026#34;=ResultDR ;检验报告ID s InputObj.\u0026#34;ex_lab_id\u0026#34;=$lg(ResultData,2) s TestCodeDR=$lg(ResultData,3) ;院内检验项目代码，院内检验项目名称 s TestCodeCode=$s($l(TestCodeDR):$lg(^dbo.BTTestCodeD(TestCodeDR),2),1:\u0026#34;\u0026#34;) s TestCodeName=$s($l(TestCodeDR):$lg(^dbo.BTTestCodeD(TestCodeDR),2),1:\u0026#34;\u0026#34;) s TestCodeData=..GetData(\u0026#34;TC\u0026#34;,TestCodeCode) i \u0026#39;$l(TestCodeData),..#IsInput q \u0026#34;\u0026#34; i $l(TestCodeData) d .s TestCodeCode=$p(TestCodeData,\u0026#34;^\u0026#34;,1) .s TestCodeName=$p(TestCodeData,\u0026#34;^\u0026#34;,2)\t//***HR***// s InputObj.\u0026#34;item_code\u0026#34;=TestCodeCode s InputObj.\u0026#34;item_name\u0026#34;=TestCodeName s ResCode=$lg(ResultData,4) s Result=$lg(ResultData,5) s Ranges=$lg(ResultData,12) s ResultFormat=$lg(^dbo.BTTestCodeD(TestCodeDR),9) s (MinRanges,MaxRanges)=\u0026#34;\u0026#34; s (NumberResult,StringResultCode,StringResult)=\u0026#34;\u0026#34; i ResultFormat=\u0026#34;N\u0026#34; d .s RangesBak=Ranges\t.i RangesBak[\u0026#34;-\u0026#34; d\t// 获取最小值和最大值 ..s MinRanges=$p(RangesBak,\u0026#34;-\u0026#34;,1) ..s MaxRanges=$p(RangesBak,\u0026#34;-\u0026#34;,2) .i RangesBak[\u0026#34;\u0026lt;\u0026#34; d ..s RangesBak=$tr(RangesBak,\u0026#34;=\u0026#34;) ..s MinRanges=$p(RangesBak,\u0026#34;\u0026lt;\u0026#34;,1) ..s MaxRanges=$p(RangesBak,\u0026#34;\u0026lt;\u0026#34;,2) .i RangesBak[\u0026#34;\u0026gt;\u0026#34; d ..s RangesBak=$tr(RangesBak,\u0026#34;=\u0026#34;) ..s MinRanges=$p(RangesBak,\u0026#34;\u0026gt;\u0026#34;,2) ..s MaxRanges=$p(RangesBak,\u0026#34;\u0026gt;\u0026#34;,1) .s NumberResult=Result e d .s StringResultCode=ResCode .s StringResult=Result ;院内检验定性结果代码 s InputObj.\u0026#34;source_examination_result_code\u0026#34;=StringResultCode ;院内检验定性结果名称 s InputObj.\u0026#34;source_examination_result_name\u0026#34;=StringResult s examinationResultData=..examinationResult(StringResult) s (examinationStringResultCode,examinationStringResultName)=\u0026#34;\u0026#34; i $l(examinationResultData) d .s examinationStringResultCode=$p(examinationResultData,\u0026#34;^\u0026#34;,1) .s examinationStringResultName=$p(examinationResultData,\u0026#34;^\u0026#34;,2) ;标化检验定性结果代码 s InputObj.\u0026#34;examination_result_code\u0026#34;=$g(examinationStringResultCode) ;标化检验定性结果名称 s InputObj.\u0026#34;examination_result_name\u0026#34;=$g(examinationStringResultName) ;检验定量结果 s InputObj.\u0026#34;examination_quantification\u0026#34;=NumberResult ;检验定量结果计量单位 s InputObj.\u0026#34;examination_quantification_unit\u0026#34;=$lg(ResultData,11) ;检验定量结果参考区间-下限 s InputObj.\u0026#34;examination_quantification_lower\u0026#34;=MinRanges ;检验定量结果参考区间-上限 s InputObj.\u0026#34;examination_quantification_upper\u0026#34;=MaxRanges s ABFlag=$lg(ResultData,9) ;检验定量结果超出或低于参考值 s InputObj.\u0026#34;examination_quantification_ri\u0026#34;=$case(ResultFormat,\u0026#34;N\u0026#34;:$case(ABFlag,\u0026#34;H\u0026#34;:\u0026#34;2\u0026#34;,\u0026#34;PH\u0026#34;:\u0026#34;2\u0026#34;,\u0026#34;L\u0026#34;:\u0026#34;1\u0026#34;,\u0026#34;PL\u0026#34;:\u0026#34;1\u0026#34;,:\u0026#34;0\u0026#34;),:\u0026#34;\u0026#34;) ;医疗机构代码 医疗机构名称 操作人 s InputObj.\u0026#34;operator_id\u0026#34;=\u0026#34;\u0026#34; ;操作时间 s InputObj.\u0026#34;operation_time\u0026#34;=$zd(+$h,3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2),1) s ReturnJson=InputObj.%ToJSON() s stream=##class(%Stream.GlobalCharacter).%New() d stream.Write(ReturnJson) //*************************平台方法****************************// //s retStr=##Class(web.DHCENS.BLL.GJCRBSB.Method.CRBService).CRBService(\u0026#34;MES0240\u0026#34;,stream).Read() b ;Result retStr Q \u0026#34;\u0026#34; } /// Time:时间(分钟) /// d ##class(LISAPP.LIS.BLL.UplaodDataBSToD3C).Do(30) ClassMethod Do(Time) { s Time=$g(Time) i \u0026#39;$l(Time) s Time=120 s STime=+Time*60+60 s SttDT=..GetMinutesAgoTime($zdt($h,8),STime) s EndDT=$zdt($h,8) s SttDate=$p(SttDT,\u0026#34; \u0026#34;,1) s SttTime=$zth($p(SttDT,\u0026#34; \u0026#34;,2)) s EndDate=$p(EndDT,\u0026#34; \u0026#34;,1) s EndTime=$zth($p(EndDT,\u0026#34; \u0026#34;,2)) s WorkGroupMachineDR=\u0026#34;\u0026#34; f s WorkGroupMachineDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAuthDate\u0026#34;,WorkGroupMachineDR)) q:WorkGroupMachineDR=\u0026#34;\u0026#34; d .s AuthDate=SttDate-1 f s AuthDate=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAuthDate\u0026#34;,WorkGroupMachineDR,AuthDate)) q:((AuthDate=\u0026#34;\u0026#34;)||(AuthDate\u0026gt;EndDate)) d ..s ReportDR=\u0026#34;\u0026#34; f s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAuthDate\u0026#34;,WorkGroupMachineDR,AuthDate,ReportDR)) q:ReportDR=\u0026#34;\u0026#34; d ...s AuthTime=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),20) ...i AuthTime\u0026lt;SttTime q ...i AuthTime\u0026gt;EndTime q ...i \u0026#39;$l($$IsReportOutPut(ReportDR)) q ...i $d(^TMP($zn,$j,$i,ReportDR,1)) q ...d ..SendReportInfo(ReportDR) ...s ^TMP($zn,$j,$i,ReportDR,1)=\u0026#34;\u0026#34; //*************************延时等待****************************// h 30\t// 等待30秒 s WorkGroupMachineDR=\u0026#34;\u0026#34; f s WorkGroupMachineDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAuthDate\u0026#34;,WorkGroupMachineDR)) q:WorkGroupMachineDR=\u0026#34;\u0026#34; d .s AuthDate=SttDate-1 f s AuthDate=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAuthDate\u0026#34;,WorkGroupMachineDR,AuthDate)) q:((AuthDate=\u0026#34;\u0026#34;)||(AuthDate\u0026gt;EndDate)) d ..s ReportDR=\u0026#34;\u0026#34; f s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAuthDate\u0026#34;,WorkGroupMachineDR,AuthDate,ReportDR)) q:ReportDR=\u0026#34;\u0026#34; d ...s AuthTime=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),20) ...i AuthTime\u0026lt;SttTime q ...i AuthTime\u0026gt;EndTime q ...i \u0026#39;$l($$IsReportOutPut(ReportDR)) q ...i $d(^TMP($zn,$j,$i,ReportDR,2)) q ...d ..SendResultInfo(ReportDR) ...s ^TMP($zn,$j,$i,ReportDR,2)=\u0026#34;\u0026#34; q IsReportOutPut(ReportDR) s ret=\u0026#34;\u0026#34; i \u0026#39;$l(ReportDR) q ret s Status=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),22) q:Status\u0026#39;[\u0026#34;3\u0026#34; ret s VisitNumberDR=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),2) s HospitalDR=$lg($g(^dbo.RPVisitNumberD(VisitNumberDR)),21)\t//限制条件 s ret=\u0026#34;1\u0026#34; q ret } /// w ##class(LISAPP.LIS.BLL.UplaodDataBSToD3C).GetMinutesAgoTime(\u0026#34;20241125 10:04:00\u0026#34;,7200) ClassMethod GetMinutesAgoTime(DateTime, timeDiff) { try{ s Date=$zdh($p(DateTime,\u0026#34; \u0026#34;,1),8) s Time=$zth($p(DateTime,\u0026#34; \u0026#34;,2))}catch{s (Date,Time)=\u0026#34;\u0026#34;} i \u0026#39;$l(Date) q \u0026#34;\u0026#34; s DateSince=$fn(timeDiff/86400,\u0026#34;\u0026#34;,0) s TimeSince=(timeDiff#86400) i Time\u0026gt;=TimeSince d .s Date=$zd(Date-DateSince,8) .s Time=$zt(Time-TimeSince) e d .s Date=$zd(Date-DateSince-1,8) .s Time=$zt(86400+Time-TimeSince) q Date_\u0026#34; \u0026#34;_Time } /// =============================获取互认数据=============================/// /// 获取互认数据 /// dbo.CFBTHISData /// Input:互认系统代码，医院代码，数据类型，代码 /// Outpue:对照代码，对照名称，对照主键 /// w ##class(LISAPP.LIS.BLL.UplaodDataBSToD3C).GetData(\u0026#34;SP\u0026#34;,\u0026#34;SP015\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) ClassMethod GetData(fDataType, fCode, HospitalCode, SYSCode) { s SYSCode=$g(SYSCode) i \u0026#39;$l(SYSCode) s SYSCode=\u0026#34;GJCRB\u0026#34; s HospitalCode=$g(HospitalCode) i \u0026#39;$l(HospitalCode) s HospitalCode=..#SQJGCode s fDataType=$g(fDataType),fCode=$g(fCode) s ret=\u0026#34;\u0026#34; i \u0026#39;$l(fCode) q ret i \u0026#39;$l(fDataType) q ret i \u0026#39;$d(^dbo.CFBTHISDataI(\u0026#34;IndexMaster\u0026#34;,fDataType,fCode,SYSCode,HospitalCode)) q ret s HISDataCode=$o(^dbo.CFBTHISDataI(\u0026#34;IndexMaster\u0026#34;,fDataType,fCode,SYSCode,HospitalCode,\u0026#34;\u0026#34;)) s HISDataDR=$o(^dbo.CFBTHISDataI(\u0026#34;IndexMaster\u0026#34;,fDataType,fCode,SYSCode,HospitalCode,HISDataCode,\u0026#34;\u0026#34;)) s HISDataData=$g(^dbo.CFBTHISDataD(HISDataDR)) s HISDataCode=$lg(HISDataData,6) s HISDataName=$lg(HISDataData,8) s HISDataID=$lg(HISDataData,7) s ret=HISDataCode_\u0026#34;^\u0026#34;_HISDataName_\u0026#34;^\u0026#34;_HISDataID q ret } /// 标化定性结果转换 ClassMethod examinationResult(Result) { s ret=\u0026#34;\u0026#34; i ((Result[\u0026#34;阳性\u0026#34;)||(Result[\u0026#34;+\u0026#34;)) s ret=\u0026#34;01^阳性\u0026#34; i ((Result=\u0026#34;阴性\u0026#34;)||(Result=\u0026#34;-\u0026#34;)) s ret=\u0026#34;02^阴性\u0026#34; i Result[\u0026#34;++\u0026#34; s ret=\u0026#34;04^强阳性\u0026#34; i ((Result=\u0026#34;弱阳性\u0026#34;)||(Result=\u0026#34;+-\u0026#34;)) s ret=\u0026#34;05^弱阳性\u0026#34; i Result=\u0026#34;检出\u0026#34; s ret=\u0026#34;06^检出\u0026#34; i ((Result=\u0026#34;未检出\u0026#34;)||(Result=\u0026#34;未查出\u0026#34;)) s ret=\u0026#34;07^未检出\u0026#34; q ret } } ","date":"2024-12-17T00:00:00Z","image":"https://work.717170.xyz/img/title.jpg","permalink":"https://work.717170.xyz/p/%E5%9B%BD%E5%AE%B6%E4%BC%A0%E6%9F%93%E7%97%85%E6%8E%A5%E5%8F%A3-20250104010204/","title":"国家传染病接口"},{"content":"双向接口程序整合 上机请求双向 HL7 协议接口双向 回传多行 DSP 回传信息时要求有 DSP 字段，且 DSP 字段前 28 行为患者信息，第 29 行之后为检测项目信息。\n示例接口(亚辉龙名称: MI.MIFI3000 /// 描述: 深圳亚辉龙iFlash3000 双向仪器接口 MIFI3000(mi) S mi=$G(mi) Q:\u0026#39;$L(mi) s par11=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s par10=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s par4=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 S mi1=mi S stx=$C(2),etx=$C(3),ack=$C(6),enq=$C(5),eot=$C(4),etb=$C(23) S sb=$C(11),eb=$C(28),cr=$C(13) S lf=$C(10),nak=$C(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType)=\u0026#34;\u0026#34; Q:$$StartUTF8^MI.MIF000(mi) F { D Main Q:$$Stop^MI.MIF000(mi) } C par4 Q Main S $ZT=\u0026#34;ErrHandler\u0026#34;,$EC=\u0026#34;\u0026#34; R *R:10 Q:\u0026#39;$TEST //如果超时则退出 Q:$c(R)\u0026#39;=sb //以sb开头 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType,msgType,barcode,mshStr)=\u0026#34;\u0026#34; S startTime=$P($H,\u0026#34;,\u0026#34;,2) K PLIST S index=1 F { S curTime=$P($H,\u0026#34;,\u0026#34;,2) Q:curTime\u0026gt;(startTime+300) //5分钟内没有处理完则退出循环 Q:$$Stop^MI.MIF000(mi) R *R:10 Q:\u0026#39;$TEST //如果超时则退出 I $L($G(PLIST(index)))\u0026gt;=32700 { //32767 S index=+$O(PLIST(\u0026#34;\u0026#34;),-1)+1 S PLIST(index)=\u0026#34;\u0026#34; } I $C(R)\u0026#39;=eb,$C(R)\u0026#39;=cr { S PLIST(index)=$G(PLIST(index))_$C(R) } I $C(R)=cr { //解析一条记录 D Record K PLIST S index=1 } Q:$C(R)=eb //循环读取,当为eb的时候则退出 } D Save Q Record K ^TMPMACHINEEPIS(mi) S index=\u0026#34;\u0026#34; S segmentType=\u0026#34;\u0026#34;,dataTye=\u0026#34;\u0026#34;,graphType=\u0026#34;\u0026#34; S isImage=0,isBinary=0 F { S index=$O(PLIST(index)) Q:\u0026#39;$L(index) S record=$TR($G(PLIST(index)),cr) Continue:\u0026#39;$L(record) D Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) I index=1 { S segmentType=$P(record,\u0026#34;|\u0026#34;,1) ;消息段(数据类型) MSH\tMSA PID OBR OBX ORD QRF ERR QAK DSP DSC I segmentType=\u0026#34;MSH\u0026#34; { //信息头信息 S mshStr=record //消息类型 S msgType=$P($P(record,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,1) //ORU,ACK,QRY,QCK,DSR I msgType=\u0026#34;ORU\u0026#34; { D SendACK(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;) } I msgType=\u0026#34;ORM\u0026#34; { } I msgType=\u0026#34;QRY\u0026#34; { D SendQryACK(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;) } S resultType=$P(record,\u0026#34;|\u0026#34;,11) } I segmentType=\u0026#34;PID\u0026#34; { //患者信息 } I segmentType=\u0026#34;PVI\u0026#34; { //就诊信息 } I segmentType=\u0026#34;OBR\u0026#34; { //医嘱信息 S epis=$P(record,\u0026#34;|\u0026#34;,3) S:\u0026#39;$l(epis) epis=$P(record,\u0026#34;|\u0026#34;,4) S dateStr=$P(record,\u0026#34;|\u0026#34;,8) I dateStr?14N { S date=$ZDH($E(dateStr,1,4)_\u0026#34;-\u0026#34;_$E(dateStr,5,6)_\u0026#34;-\u0026#34;_$E(dateStr,7,8),3) S time=$ZTH($E(dateStr,9,10)_\u0026#34;:\u0026#34;_$E(dateStr,11,12)_\u0026#34;:\u0026#34;_$E(dateStr,13,14),1) } S code=$P($P(record,\u0026#34;|\u0026#34;,5),\u0026#34;^\u0026#34;,1) } I segmentType=\u0026#34;OBX\u0026#34; { S dataTye=$P(record,\u0026#34;|\u0026#34;,3) //NM (numeric) 表示数字值，用于定量项目, //ST (string) 表示字符串值，用于定性项目 S channel=$P(record,\u0026#34;|\u0026#34;,4) S channel=$P(channel,\u0026#34;^\u0026#34;,1) S value=$P(record,\u0026#34;|\u0026#34;,6) I $L(channel),dataTye\u0026#39;=\u0026#34;ED\u0026#34;,dataTye\u0026#39;=\u0026#34;IS\u0026#34; { S result=result_channel_par10_value_par11 } } //根据条码号获取LIS标本 I segmentType=\u0026#34;QRD\u0026#34; { S barcode=$P(record,\u0026#34;|\u0026#34;,9) //QRD|20161208150935|R|D|1|||RD|16120703726|OTH|||T| I $L(barcode) { S ^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode,\u0026#34;MSH\u0026#34;)=mshStr S ^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode,\u0026#34;QRD\u0026#34;)=record } } //根据查询条件获取LIS标本 I segmentType=\u0026#34;QRF\u0026#34; { S tRecord=record S record=$TR(record,\u0026#34; \u0026#34;) S qryStartDate=$P(record,\u0026#34;|\u0026#34;,3) S qryEndDate=$P(record,\u0026#34;|\u0026#34;,4) S sampleIdStart=$P(record,\u0026#34;|\u0026#34;,5) S sampleIdEnd=$P(record,\u0026#34;|\u0026#34;,6) S:\u0026#39;$L(qryStartDate) qryStartDate=qryEndDate S:\u0026#39;$L(qryEndDate) qryEndDate=qryStartDate S:\u0026#39;$L(sampleIdStart) sampleIdStart=sampleIdEnd S:\u0026#39;$L(sampleIdEnd) sampleIdEnd=sampleIdStart //通过样本号段查询 QRF|iFlash3000|||1|9|RCT|COR|ALL|| I sampleIdStart?1.N,sampleIdEnd?1.N { F sampleId=sampleIdStart:1:sampleIdEnd { S ^TMPMACHINEEPIS(mi,\u0026#34;S\u0026#34;,sampleId,\u0026#34;MSH\u0026#34;)=mshStr S ^TMPMACHINEEPIS(mi,\u0026#34;S\u0026#34;,sampleId,\u0026#34;QRF\u0026#34;)=tRecord } } //通过时间段查询\tQRF|iFlash3000|20160122080000|20160122120000|||RCT|COR|ALL|| I qryStartDate?1.N,qryEndDate?1.N { F qryDate=qryStartDate:1:qryEndDate { S ^TMPMACHINEEPIS(mi,\u0026#34;D\u0026#34;,qryDate,\u0026#34;MSH\u0026#34;)=mshStr S ^TMPMACHINEEPIS(mi,\u0026#34;D\u0026#34;,qryDate,\u0026#34;QRF\u0026#34;)=tRecord } } } } } //根本样本号获取条码号 S sampleId=\u0026#34;\u0026#34; F { S sampleId=$O(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,sampleId)) Q:\u0026#39;$L(sampleId) //暂不处理 } //根本日期获取条码号 S qryDate=\u0026#34;\u0026#34; F { S qryDate=$O(^TMPMACHINEEPIS(mi,\u0026#34;D\u0026#34;,qryDate)) Q:\u0026#39;$L(qryDate) //暂不处理 } //上传标本 S barcode=\u0026#34;\u0026#34;,barcodeIndex=0 F { S barcode=$O(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode)) Q:\u0026#39;$L(barcode) S mshStr=$G(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode)) S barcodeIndex=barcodeIndex+1 I $O(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode))=\u0026#34;\u0026#34; { S barcodeIndex=\u0026#34;\u0026#34; //最后一个为空 } S mshStr=$G(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode,\u0026#34;MSH\u0026#34;)) S qrdStr=$G(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode,\u0026#34;QRD\u0026#34;)) S qrfStr=$G(^TMPMACHINEEPIS(mi,\u0026#34;B\u0026#34;,barcode,\u0026#34;QRF\u0026#34;)) I \u0026#39;$L(qrdStr) { S qrdStr=\u0026#34;QRD|\u0026#34;_$TR($ZDT($H,8),\u0026#34; :\u0026#34;)_\u0026#34;|R|D|1|||RD||OTH|||T|\u0026#34; } I \u0026#39;$L(qrfStr) { S qrfStr=\u0026#34;QRF|iFlash3000|||||RCT|COR|ALL||\u0026#34; } S $P(qrdStr,\u0026#34;|\u0026#34;,9)=\u0026#34;\u0026#34; S ret=$$SendOrder(mi,mshStr,qrdStr,qrfStr,barcode,barcodeIndex) } K ^TMPMACHINEEPIS(mi) Q Save D Trace^MI.MIF000(mi,epis_\u0026#34;^\u0026#34;_result,\u0026#34;Test\u0026#34;) I $l(epis),$l(result) { S QC=\u0026#34;\u0026#34; ;S result=$$TransResult(mi,result) D Save^MI.MIF000(mi,epis,result,date,time,QC) } S (sample,epis,surname,rec,res,result,date,time,QC,resultType)=\u0026#34;\u0026#34; Q SendACK(mi,mshStr,ackType=\u0026#34;AA\u0026#34;,errCode=0,errDesc=\u0026#34;Message accepted\u0026#34;) //send \u0026#39;ack\u0026#39; to instrument N (mi,mshStr,ackType,errCode,errDesc) S mi=$g(mi),mshStr=$g(mshStr),ackType=$g(ackType),errCode=$g(errCode),errDesc=$g(errDesc) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) //Q:$l(mshStr,\u0026#34;|\u0026#34;)\u0026lt;21 ret S ret=0 S msgRoutine=$P($P(mshStr,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,2) S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;ACK^\u0026#34;_msgRoutine W sb,mshStr,cr,\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_\u0026#34;|\u0026#34;_errDesc_\u0026#34;|||\u0026#34;_errCode_\u0026#34;|\u0026#34;,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,$S(ackType=\u0026#34;AA\u0026#34;:\u0026#34;ACK\u0026#34;,ackType=\u0026#34;AE\u0026#34;:\u0026#34;Error\u0026#34;,ackType=\u0026#34;AR\u0026#34;:\u0026#34;NAK\u0026#34;,1:\u0026#34;NULL\u0026#34;),\u0026#34;H--\u0026gt;M\u0026#34;) Q ret SendQryACK(mi,mshStr,ackType=\u0026#34;AA\u0026#34;,errCode=0,errDesc=\u0026#34;Message accepted\u0026#34;) //send \u0026#39;ack\u0026#39; to instrument N (mi,mshStr,ackType,errCode,errDesc) S mi=$g(mi),mshStr=$g(mshStr),ackType=$g(ackType),errCode=$g(errCode),errDesc=$g(errDesc) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) S ret=0 S msgRoutine=$P($P(mshStr,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,2) S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;QCK^\u0026#34;_msgRoutine W sb,mshStr,cr,\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_\u0026#34;|\u0026#34;_errDesc_\u0026#34;|||\u0026#34;_errCode_\u0026#34;|\u0026#34;,cr,\u0026#34;ERR|0|\u0026#34;,cr,\u0026#34;QAK|SR|OK|\u0026#34;,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,$S(ackType=\u0026#34;AA\u0026#34;:\u0026#34;QACK\u0026#34;,ackType=\u0026#34;AE\u0026#34;:\u0026#34;Error\u0026#34;,ackType=\u0026#34;AR\u0026#34;:\u0026#34;QNAK\u0026#34;,1:\u0026#34;NULL\u0026#34;),\u0026#34;H--\u0026gt;M\u0026#34;) Q ret ErrHandler h 10 D Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) Q //双向上传医嘱信息,wwh,2015-11-05 SendOrder(mi,mshStr,qrdStr,qrfStr,barcode,DSC) N (mi,mshStr,qrdStr,qrfStr,barcode,DSC) S mi=$G(mi),mshStr=$G(mshStr),barcode=$G(barcode),DSC=$G(DSC),qrdStr=$G(qrdStr),qrfStr=$G(qrfStr) S sb=$C(11),eb=$C(28),cr=$C(13) I \u0026#39;$L(barcode) { D Trace^MI.MIF000(mi,\u0026#34;条码号为空\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } I $ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) { //条码扫描错误 D Trace^MI.MIF000(mi,\u0026#34;条码扫描错误,机器未识别\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } S labno=barcode S workGroupMachineDR=$LG($G(^dbo.BTMIMachineParameterD(mi)),6) S visiNumberDR=$O(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) I \u0026#39;$L(visiNumberDR) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } S visNumberObj=##Class(dbo.RPVisitNumber).%OpenId(visiNumberDR) I \u0026#39;$L(visNumberObj) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } D Trace^MI.MIF000(mi,labno,\u0026#34;Upload Start\u0026#34;) K ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno) D ScanOne^MI.MIF000(mi,labno) S result=\u0026#34;\u0026#34; S chlStr=\u0026#34;\u0026#34; S chl=\u0026#34;\u0026#34;,chlCnt=29 F { S chl=$O(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) Q:\u0026#39;$L(chl) S chlStr=chlStr_\u0026#34;DSP|\u0026#34;_chlCnt_\u0026#34;||\u0026#34;_chl_\u0026#34;^^^|||\u0026#34;_cr S chlCnt=chlCnt+1 ;S result=result_chl_$C(92)_\u0026#34;?\u0026#34;_$C(44) } I \u0026#39;$L(chlStr) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的化验项目信息,确定医嘱或项目维护正确?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } D Save^MI.MIF000(mi,labno,result,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) S specimenDR=$LG($G(^dbo.RPVisitNumberD(visiNumberDR)),56) S specimenName=\u0026#34;\u0026#34; S:$L(specimenDR) specimenName=$LG($G(^dbo.BTSpecimenD(specimenDR)),3) S sampleType=\u0026#34;其他\u0026#34; I $L(specimenName),\u0026#34;,血清,血浆,尿液,脑脊液,\u0026#34;[(\u0026#34;,\u0026#34;_specimenName_\u0026#34;,\u0026#34;) { S sampleType=specimenName } S birdthday=visNumberObj.BirthDate S:$L(birdthday)=8 birdthday=birdthday_\u0026#34;000000\u0026#34; S:\u0026#39;$L(mshStr) mshStr=\u0026#34;MSH|^~\\\u0026amp;|YHLO|iFlash3000|||20161208150935||QRY^Q02|18|P|2.3.1||||||ASCII|||\u0026#34; S mshSeq=$P(mshStr,\u0026#34;|\u0026#34;,10) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;DSR^Q03\u0026#34; S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S episode=\u0026#34;\u0026#34; S workGroupMachineDR=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) //##Class(MI.Instrument).GetWorkGroupMachineRowId(mi) I $L(workGroupMachineDR) { S OrderNo=$O(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,visiNumberDR,workGroupMachineDR,\u0026#34;\u0026#34;)) I $L(OrderNo) { S reportDR=$O(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,visiNumberDR,workGroupMachineDR,OrderNo,\u0026#34;\u0026#34;)) S episode=\u0026#34;\u0026#34; //##Class(LIS.Core.Report).GetEpisodeNumber(reportDR) i $l(reportDR) s Assayno=$lg($g(^dbo.RPVisitNumberReportD(reportDR)),6) } } S order=mshStr_cr //\u0026#34;MSH|^~\\\u0026amp;|||||20160122110540||DSR^Q03|14|P|2.3.1||||||ASCII|||\u0026#34;_cr S order=order_\u0026#34;MSA|AA|\u0026#34;_mshSeq_\u0026#34;|Message accepted|||0|\u0026#34;_cr S order=order_\u0026#34;ERR|0|\u0026#34;_cr S order=order_\u0026#34;QAK|SR|OK|\u0026#34;_cr S order=order_qrdStr_cr //\u0026#34;QRD|20160122110540|R|D|1|||RD||OTH|||T|\u0026#34;_cr S order=order_qrfStr_cr //\u0026#34;QRF|iFlash3000|||||RCT|COR|ALL||\u0026#34;_cr S order=order_\u0026#34;DSP|1||\u0026#34;_visNumberObj.RegNo_\u0026#34;|||\u0026#34;_cr\t//住院号 S order=order_\u0026#34;DSP|2||\u0026#34;_visNumberObj.BedNo_\u0026#34;|||\u0026#34;_cr\t//床号 S order=order_\u0026#34;DSP|3||\u0026#34;_visNumberObj.SurName_\u0026#34;|||\u0026#34;_cr\t//病人姓名 /* S order=order_\u0026#34;DSP|1||\u0026#34;_visNumberObj.RegNo_\u0026#34;|||\u0026#34;_cr\t//住院号 S order=order_\u0026#34;DSP|2||\u0026#34;_episode_\u0026#34;|||\u0026#34;_cr\t//床号 //S order=order_\u0026#34;DSP|3||\u0026#34;_visNumberObj.SurName_\u0026#34;|||\u0026#34;_cr\t//病人姓名 S order=order_\u0026#34;DSP|3||\u0026#34;_episode_\u0026#34;|||\u0026#34;_cr\t//病人姓名 */ S order=order_\u0026#34;DSP|4||\u0026#34;_birdthday_\u0026#34;|||\u0026#34;_cr\t//出生日期 S order=order_\u0026#34;DSP|5||\u0026#34;_$S(visNumberObj.SpeciesDR=1:\u0026#34;M\u0026#34;,visNumberObj.SpeciesDR=2:\u0026#34;F\u0026#34;,1:\u0026#34;O\u0026#34;)_\u0026#34;|||\u0026#34;_cr\t//性别 S order=order_\u0026#34;DSP|6|||||\u0026#34;_cr\t//血型 S order=order_\u0026#34;DSP|7|||||\u0026#34;_cr\t//种族 S order=order_\u0026#34;DSP|8|||||\u0026#34;_cr\t//地址 S order=order_\u0026#34;DSP|9|||||\u0026#34;_cr\t//邮编 S order=order_\u0026#34;DSP|10|||||\u0026#34;_cr\t//家庭电话 S order=order_\u0026#34;DSP|11|||||\u0026#34;_cr\t//样本位 S order=order_\u0026#34;DSP|12|||||\u0026#34;_cr\t//样本采集时间 S order=order_\u0026#34;DSP|13|||||\u0026#34;_cr\t//未用 S order=order_\u0026#34;DSP|14|||||\u0026#34;_cr\t//未用 S order=order_\u0026#34;DSP|15|||||\u0026#34;_cr\t//病人类别 S order=order_\u0026#34;DSP|16|||||\u0026#34;_cr\t//医保帐号 S order=order_\u0026#34;DSP|17|||||\u0026#34;_cr\t//收费类型 S order=order_\u0026#34;DSP|18|||||\u0026#34;_cr\t//民族 S order=order_\u0026#34;DSP|19|||||\u0026#34;_cr\t//籍贯 S order=order_\u0026#34;DSP|20|||||\u0026#34;_cr\t//国家 S order=order_\u0026#34;DSP|21||\u0026#34;_barcode_\u0026#34;|||\u0026#34;_cr\t//*样本条码 S order=order_\u0026#34;DSP|22||\u0026#34;_barcode_\u0026#34;|||\u0026#34;_cr\t//*样本编号 S order=order_\u0026#34;DSP|23|||||\u0026#34;_cr\t//送检时间 S order=order_\u0026#34;DSP|24||\u0026#34;_$S(visNumberObj.Urgent=1:\u0026#34;Y\u0026#34;,1:\u0026#34;N\u0026#34;)_\u0026#34;|||\u0026#34;_cr\t//*是否急诊 S order=order_\u0026#34;DSP|25|||||\u0026#34;_cr\t//未用 S order=order_\u0026#34;DSP|26||\u0026#34;_sampleType_\u0026#34;|||\u0026#34;_cr\t//*样本类型(血清,血浆,尿液,脑脊液,其他) S order=order_\u0026#34;DSP|27|||||\u0026#34;_cr\t//送检医生 S order=order_\u0026#34;DSP|28|||||\u0026#34;_cr\t//送检科室 S order=order_chlStr S order=order_\u0026#34;DSC|\u0026#34;_DSC_\u0026#34;|\u0026#34;_cr W sb,order,eb,cr,*-3 D Trace^MI.MIF000(mi,sb_order_eb_cr,\u0026#34;H--\u0026gt;M\u0026#34;) //$TR($ZDT($H,8),\u0026#34; :\u0026#34;) Q 0 //d Test^MI.MIFIFLASH3000N(\u0026#34;22\u0026#34;,9000000266) Test(mi,barcode) N (mi,barcode) S mi=$G(mi),barcode=$G(barcode) S mshStr=\u0026#34;MSH|^~\\\u0026amp;|YHLO|iFlash3000|||20160122110540||QRY^Q02|14|P|2.3.1||||||ASCII|||\u0026#34; S DSC=\u0026#34;\u0026#34; S qrdStr=\u0026#34;QRD|20160122110540|R|D|1|||RD|BarCode1|OTH|||T|\u0026#34; S qrfStr=\u0026#34;QRF|iFlash3000|||||RCT|COR|ALL||\u0026#34; S sb=\u0026#34;\u0026lt;SB\u0026gt;\u0026#34;,eb=\u0026#34;\u0026lt;EB\u0026gt;\u0026#34;,cr=\u0026#34;\u0026lt;CR\u0026gt;\u0026#34; I \u0026#39;$L(barcode) { W \u0026#34;条码号为空\u0026#34;,! Q 1 } I $ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) { //条码扫描错误 W \u0026#34;条码扫描错误,机器未识别\u0026#34;,! Q 1 } S labno=barcode S workGroupMachineDR=$LG($G(^dbo.BTMIMachineParameterD(mi)),6) S visiNumberDR=$O(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) I \u0026#39;$L(visiNumberDR) { W \u0026#34;条码未接收\u0026#34;,! Q 1 } I \u0026#39;$L(visiNumberDR) { W \u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,! Q 1 } S visNumberObj=##Class(dbo.RPVisitNumber).%OpenId(visiNumberDR) I \u0026#39;$L(visNumberObj) { W \u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,! Q 1 } K ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno) D ScanOne^MI.MIF000(mi,labno) S chlStr=\u0026#34;\u0026#34; b ;a102 S chl=\u0026#34;\u0026#34;,chlCnt=29 F { S chl=$O(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) Q:\u0026#39;$L(chl) S chlStr=chlStr_\u0026#34;DSP|\u0026#34;_chlCnt_\u0026#34;||\u0026#34;_chl_\u0026#34;^^^|||\u0026#34;_cr S chlCnt=chlCnt+1 } I \u0026#39;$L(chlStr) { W \u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的化验项目信息,确定医嘱或项目维护正确?\u0026#34;,! Q 1 } S specimenDR=$LG($G(^dbo.RPVisitNumberD(visiNumberDR)),56) S specimenName=\u0026#34;\u0026#34; S:$L(specimenDR) specimenName=$LG($G(^dbo.BTSpecimenD(specimenDR)),3) S sampleType=\u0026#34;其他\u0026#34; I $L(specimenName),\u0026#34;,血清,血浆,尿液,脑脊液,\u0026#34;[(\u0026#34;,\u0026#34;_specimenName_\u0026#34;,\u0026#34;) { S sampleType=specimenName } S birdthday=visNumberObj.BirthDate S:$L(birdthday)=8 birdthday=birdthday_\u0026#34;000000\u0026#34; S mshSeq=$P(mshStr,\u0026#34;|\u0026#34;,10) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;DSR^Q03\u0026#34; S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S order=mshStr_cr //\u0026#34;MSH|^~\\\u0026amp;|||||20160122110540||DSR^Q03|14|P|2.3.1||||||ASCII|||\u0026#34;_cr S order=order_\u0026#34;MSA|AA|\u0026#34;_mshSeq_\u0026#34;|Message accepted|||0|\u0026#34;_cr S order=order_\u0026#34;ERR|0|\u0026#34;_cr S order=order_\u0026#34;QAK|SR|OK|\u0026#34;_cr S order=order_qrdStr_cr //\u0026#34;QRD|20160122110540|R|D|1|||RD||OTH|||T|\u0026#34;_cr S order=order_qrfStr_cr //\u0026#34;QRF|iFlash3000|||||RCT|COR|ALL||\u0026#34;_cr S order=order_\u0026#34;DSP|1||\u0026#34;_visNumberObj.RegNo_\u0026#34;|||\u0026#34;_cr\t//住院号 S order=order_\u0026#34;DSP|2||\u0026#34;_visNumberObj.BedNo_\u0026#34;|||\u0026#34;_cr\t//床号 S order=order_\u0026#34;DSP|3||\u0026#34;_visNumberObj.SurName_\u0026#34;|||\u0026#34;_cr\t//病人姓名 b ;a101 S order=order_\u0026#34;DSP|4||\u0026#34;_birdthday_\u0026#34;|||\u0026#34;_cr\t//出生日期 S order=order_\u0026#34;DSP|5||\u0026#34;_$S(visNumberObj.SpeciesDR=1:\u0026#34;M\u0026#34;,visNumberObj.SpeciesDR=2:\u0026#34;F\u0026#34;,1:\u0026#34;O\u0026#34;)_\u0026#34;|||\u0026#34;_cr\t//性别 S order=order_\u0026#34;DSP|6|||||\u0026#34;_cr\t//血型 S order=order_\u0026#34;DSP|7|||||\u0026#34;_cr\t//种族 S order=order_\u0026#34;DSP|8|||||\u0026#34;_cr\t//地址 S order=order_\u0026#34;DSP|9|||||\u0026#34;_cr\t//邮编 S order=order_\u0026#34;DSP|10|||||\u0026#34;_cr\t//家庭电话 S order=order_\u0026#34;DSP|11|||||\u0026#34;_cr\t//样本位 S order=order_\u0026#34;DSP|12|||||\u0026#34;_cr\t//样本采集时间 S order=order_\u0026#34;DSP|13|||||\u0026#34;_cr\t//未用 S order=order_\u0026#34;DSP|14|||||\u0026#34;_cr\t//未用 S order=order_\u0026#34;DSP|15|||||\u0026#34;_cr\t//病人类别 S order=order_\u0026#34;DSP|16|||||\u0026#34;_cr\t//医保帐号 S order=order_\u0026#34;DSP|17|||||\u0026#34;_cr\t//收费类型 S order=order_\u0026#34;DSP|18|||||\u0026#34;_cr\t//民族 S order=order_\u0026#34;DSP|19|||||\u0026#34;_cr\t//籍贯 S order=order_\u0026#34;DSP|20|||||\u0026#34;_cr\t//国家 S order=order_\u0026#34;DSP|21||\u0026#34;_barcode_\u0026#34;|||\u0026#34;_cr\t//*样本条码 S order=order_\u0026#34;DSP|22||\u0026#34;_barcode_\u0026#34;|||\u0026#34;_cr\t//*样本编号 S order=order_\u0026#34;DSP|23|||||\u0026#34;_cr\t//送检时间 S order=order_\u0026#34;DSP|24||\u0026#34;_$S(visNumberObj.Urgent=1:\u0026#34;Y\u0026#34;,1:\u0026#34;N\u0026#34;)_\u0026#34;|||\u0026#34;_cr\t//*是否急诊 S order=order_\u0026#34;DSP|25|||||\u0026#34;_cr\t//未用 S order=order_\u0026#34;DSP|26||\u0026#34;_sampleType_\u0026#34;|||\u0026#34;_cr\t//*样本类型(血清,血浆,尿液,脑脊液,其他) S order=order_\u0026#34;DSP|27|||||\u0026#34;_cr\t//送检医生 S order=order_\u0026#34;DSP|28|||||\u0026#34;_cr\t//送检科室 S order=order_chlStr S order=order_\u0026#34;DSC|\u0026#34;_DSC_\u0026#34;|\u0026#34;_cr W sb,order,eb,cr,! Q 0 TransResult(miRowId,result) N (miRowId,result) S miRowId=$G(miRowId),result=$G(result),newRes=\u0026#34;\u0026#34; F i=1:1:$L(result,\u0026#34;,\u0026#34;) { S chlStr=$P(result,\u0026#34;,\u0026#34;,i) Continue:\u0026#39;$L(chlStr) S chl=$P(chlStr,\u0026#34;\\\u0026#34;,1) S val=$P(chlStr,\u0026#34;\\\u0026#34;,2) Continue:\u0026#39;$L(chl) S res=val I chl\u0026gt;97,chl\u0026lt;102,val\u0026#39;[\u0026#34;?\u0026#34; { S res=$$GetQuaResult(miRowId,chl,val) } S newRes=newRes_chl_$C(92)_res_$C(44) } Q:$L(newRes) newRes Q result GetQuaResult(miRowId,chl,res) N (miRowId,chl,res) S miRowId=$G(miRowId),chl=$G(chl),res=$G(res) S:res?1\u0026#34;.\u0026#34;1.N res=\u0026#34;0\u0026#34;_res S orgRes=res S resPrefix=$E(res,1) S:\u0026#34;\u0026lt;\u0026gt;\u0026#34;\u0026#39;[resPrefix resPrefix=\u0026#34;\u0026#34; I $L(resPrefix) { S res=$P(res,resPrefix,2) } Q:\u0026#39;$L(chl) orgRes Q:(res\u0026#39;?0.N1.\u0026#34;.\u0026#34;1.N)\u0026amp;\u0026amp;(res\u0026#39;?1.N) orgRes S tcRefRowId=$O(^dbo.BTMIMachineTestCodeI(\u0026#34;IndexResultChannel\u0026#34;,miRowId,##Class(LIS.Util.Common).IndexData(chl),\u0026#34;\u0026#34;)) Q:\u0026#39;$L(tcRefRowId) orgRes S tcRowId=$LG($G(^dbo.BTMIMachineTestCodeD(tcRefRowId)),3) Q:\u0026#39;$L(tcRowId) orgRes S orderNo=$O(^dbo.BTTestCodeRangesI(\u0026#34;IndexMaster\u0026#34;,tcRowId,\u0026#34;\u0026#34;)) Q:\u0026#39;$L(orderNo) orgRes S rangeDR=$O(^dbo.BTTestCodeRangesI(\u0026#34;IndexMaster\u0026#34;,tcRowId,orderNo,\u0026#34;\u0026#34;)) Q:\u0026#39;$L(rangeDR) orgRes S rangeObj=##Class(dbo.BTTestCodeRanges).%OpenId(rangeDR) Q:\u0026#39;$L(rangeObj) orgRes I res\u0026gt;=rangeObj.ValueHigh { I resPrefix=\u0026#34;\u0026lt;\u0026#34; { Q orgRes } Q \u0026#34;阳性(\u0026#34;_orgRes_\u0026#34;)\u0026#34; } ELSE { I resPrefix=\u0026#34;\u0026gt;\u0026#34; { Q orgRes } } Q \u0026#34;阴性(\u0026#34;_orgRes_\u0026#34;)\u0026#34; 回传三行 DSP 双向要求回传三行 DSP 信息，DSP1 为患者信息，DSP2 为标本信息，DSP3 为检测项目信息。\n示例接口(美康生化mi) ///仪器名称:\t血细胞分析流水线 ///仪器型号:\t迈瑞HL7 ///仪器厂商:\t迈瑞 ///通信协议:\tHL7 ///交互方式:\t双 向 ///接 口:\tTCP/IP,RS232 ///备 注:\t仪器配置:选择HL7协议,散点图选择:位图 S mi=$G(mi) Q:\u0026#39;$L(mi) s par11=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s par10=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s par4=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 S stx=$C(2),etx=$C(3),ack=$C(6),enq=$C(5),eot=$C(4),etb=$C(23) S sb=$C(11),eb=$C(28),cr=$C(13) S lf=$C(10),nak=$C(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType)=\u0026#34;\u0026#34; S $ZT=\u0026#34;ErrHandler\u0026#34;,$EC=\u0026#34;\u0026#34; Q:$$Start^MI.MIF000(mi) s IP=$li(^dbo.BTMIMachineParameterD(mi),9) s Port=$li(^dbo.BTMIMachineParameterD(mi),10) s LinkTime=0 s Device=\u0026#34;|TCP|\u0026#34;_Port F { try{ ;d Trace^MI.MIF000(mi,$ZA,\u0026#34;ZA\u0026#34;) //未启动客户端/服务端0，客户端断开连接标志20484，无客户端连接20480，有客户端连接28674，连接并建立数据传输28672 //lis断开 i $ZA=\u0026#34;0\u0026#34; { h 2 open Device:(IP:Port:/IOTABLE=\u0026#34;GB18030\u0026#34;):20 use Device d Trace^MI.MIF000(mi,\u0026#34;lis断开连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;lisReConnect\u0026#34;) //throw ##class(%Exception.General).%New(\u0026#34;ConnectError\u0026#34;,\u0026#34;D\u0026#34;,,\u0026#34;重新连接失败\u0026#34;) } //仪器断开，或者无数据1min，重启tcp i (($ZA=\u0026#34;20484\u0026#34;)) { close par4 d Trace^MI.MIF000(mi,\u0026#34;仪器断开连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;blockConnect\u0026#34;) h 2 open Device:(IP:Port:/IOTABLE=\u0026#34;GB18030\u0026#34;):20 use Device d Trace^MI.MIF000(mi,\u0026#34;重新连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;reConnect\u0026#34;) s LinkTime=0 continue } //连接无数据传输，main每执行6次，即1min，重启tcp i $ZA=\u0026#34;28674\u0026#34; s LinkTime=$i(LinkTime) //正常传输了，就清空计数 i $ZA=\u0026#34;28672\u0026#34; s LinkTime=0 d Main }catch ex{ s exception=\u0026#34;错误:\u0026#34;_ex.Location_\u0026#34;^\u0026#34;_ex.Data_ex.Name d Trace^MI.MIF000(mi,exception,\u0026#34;读取或写入异常，重启服务端\u0026#34;) } Q:$$Stop^MI.MIF000(mi) } C par4 Q Main R *R:10 Q:\u0026#39;$TEST\t//如果超时则退出 Q:$c(R)\u0026#39;=sb //以sb开头 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType,msgType,barcode,mshStr)=\u0026#34;\u0026#34; S startTime=$P($H,\u0026#34;,\u0026#34;,2) K PLIST S index=1 F { S curTime=$P($H,\u0026#34;,\u0026#34;,2) Q:curTime\u0026gt;(startTime+300) //5分钟内没有处理完则退出循环 Q:$$Stop^MI.MIF000(mi) R *R:10 Q:\u0026#39;$TEST\t//如果超时则退出 I $L($G(PLIST(index)))\u0026gt;=32700 { //32767 S index=+$O(PLIST(\u0026#34;\u0026#34;),-1)+1 S PLIST(index)=\u0026#34;\u0026#34; } I $C(R)\u0026#39;=eb,$C(R)\u0026#39;=cr { S PLIST(index)=$G(PLIST(index))_$C(R) } I $C(R)=cr { //解析一条记录 D Record K PLIST S index=1 } Q:$C(R)=eb //循环读取,当为eb的时候则退出 } D Trace^MI.MIF000(mi,result,\u0026#34;result\u0026#34;) D Save Q Record S index=\u0026#34;\u0026#34; S segmentType=\u0026#34;\u0026#34;,dataTye=\u0026#34;\u0026#34;,graphType=\u0026#34;\u0026#34;,base64Stream=\u0026#34;\u0026#34; S isImage=0,isBinary=0 s OldgraphDataDIFF=\u0026#34;\u0026#34; s OldgraphDataBaso=\u0026#34;\u0026#34; F { S index=$O(PLIST(index)) Q:\u0026#39;$L(index) S record=$TR($G(PLIST(index)),cr) Continue:\u0026#39;$L(record) D Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) I index=1 { S segmentType=$P(record,\u0026#34;|\u0026#34;,1) I segmentType=\u0026#34;MSH\u0026#34; {\t//信息头信息 S mshStr=record //消息类型 S msgType=$P($P(record,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,1) //ORU,ACK,QRY,QCK,DSR I msgType=\u0026#34;ORU\u0026#34; { D SendACK(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;) } I msgType=\u0026#34;ORM\u0026#34; { } S resultType=$P(record,\u0026#34;|\u0026#34;,11) } I segmentType=\u0026#34;PID\u0026#34; {\t//患者信息 } I segmentType=\u0026#34;PVI\u0026#34; {\t//就诊信息 } I segmentType=\u0026#34;OBR\u0026#34; {\t//医嘱信息 S epis=$P(record,\u0026#34;|\u0026#34;,2) S:\u0026#39;$l(epis) epis=$P(record,\u0026#34;|\u0026#34;,3) S code=$P($P(record,\u0026#34;|\u0026#34;,5),\u0026#34;^\u0026#34;,1) I code=\u0026#34;00003\u0026#34; {\t//LJ QCR } } I segmentType=\u0026#34;OBX\u0026#34; { S dataTye=$P(record,\u0026#34;|\u0026#34;,3) //NM (numeric) 表示数字值，用于定量项目, //ST (string) 表示字符串值，用于定性项目 S channel=$P(record,\u0026#34;|\u0026#34;,4) S channel=$P(channel,\u0026#34;^\u0026#34;,1) //s:\u0026#39;$l(channel) channel=$P(record,\u0026#34;|\u0026#34;,5) S value=$P(record,\u0026#34;|\u0026#34;,5) i value[\u0026#34;\u0026lt;\u0026#34; s value=$tr(value,\u0026#34;\u0026lt;\u0026#34;) i value[\u0026#34;\u0026gt;\u0026#34; s value=$tr(value,\u0026#34;\u0026gt;\u0026#34;) I channel=\u0026#34;SI\u0026#34; {\t//value=浊度(L)^溶血(H)^黄疸(I) S:$l($P(value,\u0026#34;^\u0026#34;,2)) result=result_channel_\u0026#34;H\u0026#34;_par10_$P(value,\u0026#34;^\u0026#34;,2)_par11 S:$l($P(value,\u0026#34;^\u0026#34;,3)) result=result_channel_\u0026#34;I\u0026#34;_par10_$P(value,\u0026#34;^\u0026#34;,3)_par11 S value=$P(value,\u0026#34;^\u0026#34;,1) } I dataTye=\u0026#34;ST\u0026#34; { S value=$S(value=\u0026#34;ò?D?\u0026#34;:\u0026#34;阴性\u0026#34;,value=\u0026#34;??D?\u0026#34;:\u0026#34;阳性\u0026#34;,1:value) } I $L(channel),dataTye\u0026#39;=\u0026#34;ED\u0026#34;,dataTye\u0026#39;=\u0026#34;IS\u0026#34; { S result=result_channel_par10_value_par11 } I dataTye=\u0026#34;IS\u0026#34; {\tI channel=\u0026#34;05001\u0026#34;,resultType=\u0026#34;Q\u0026#34; {\t//质控浓度 S epis=value } } S graphTypeDesc=$ZCVT($P($P(record,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,2),\u0026#34;U\u0026#34;) I dataTye=\u0026#34;ED\u0026#34; {\t//图形数据 I $ZCVT($P(value,\u0026#34;^\u0026#34;,2),\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Image\u0026#34;,\u0026#34;U\u0026#34;) { S isImage=1 //位图数据 } I $ZCVT($P(value,\u0026#34;^\u0026#34;,3),\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Octer-stream\u0026#34;,\u0026#34;U\u0026#34;) { S isBinary=1\t//二进制数据(需要绘图) } S graphType=channel I channel=\u0026#34;15050\u0026#34; {\t//二进制数据 S graphType=\u0026#34;RBC\u0026#34; } I channel=\u0026#34;15056\u0026#34; {\t//位图数据 S graphType=\u0026#34;RBC\u0026#34; } I channel=\u0026#34;15100\u0026#34; {\t//二进制数据 S graphType=\u0026#34;PLT\u0026#34; } I channel=\u0026#34;15116\u0026#34; {\t//位图数据 S graphType=\u0026#34;PLT\u0026#34; } I channel=\u0026#34;15200\u0026#34; {\t//位图数据 S graphType=\u0026#34;WBC-DIFFBMP\u0026#34; } I channel=\u0026#34;15201\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;WBC-DIFF\u0026#34; } I channel=\u0026#34;15202\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;WBC-DIFF\u0026#34; } I channel=\u0026#34;15250\u0026#34; {\t//位图数据 S graphType=\u0026#34;BASOBMP\u0026#34; } I channel=\u0026#34;15251\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;BASO\u0026#34; } I channel=\u0026#34;15300\u0026#34; {\t//位图数据 S graphType=\u0026#34;RET\u0026#34; } I channel=\u0026#34;15306\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;RET\u0026#34; } I channel=\u0026#34;15301\u0026#34; {\t//位图数据 S graphType=\u0026#34;PLT-0\u0026#34; } I channel=\u0026#34;15302\u0026#34; {\t//位图数据 S graphType=\u0026#34;RET-EXT\u0026#34; } I channel=\u0026#34;15350\u0026#34; {\t//位图数据 S graphType=\u0026#34;NRBC\u0026#34; } I channel=\u0026#34;15354\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;NRBC\u0026#34; } S graphData=$P(value,\u0026#34;^\u0026#34;,5) S graphDataType=$P(value,\u0026#34;^\u0026#34;,4) I $ZCVT(graphDataType,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Base64\u0026#34;,\u0026#34;U\u0026#34;) { D Trace^MI.MIF000(mi,graphData,graphType) i graphType[\u0026#34;RBC\u0026#34; d .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;RBC\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#RBC#RBC######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RBC#RBC######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!\u0026#34;_$lb(epis,mi),\u0026#34;绘图：RBC\u0026#34;) i graphType[\u0026#34;PLT\u0026#34; d .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;PLT\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#PLT#PLT######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#PLT#RBC######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!\u0026#34;_$lb(epis,mi),\u0026#34;绘图：PLT\u0026#34;) i graphType[\u0026#34;WBC\u0026#34; d .//s OldgraphDataDIFF=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;WBC-DIFF\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#DIFF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#DIFF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!\u0026#34;_$lb(epis,mi),\u0026#34;绘图：wbc\u0026#34;) i graphType[\u0026#34;WNB\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#WNB#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#Baso#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) } } } I segmentType=\u0026#34;ORC\u0026#34; {\t//就诊信息 S barcode=$P(record,\u0026#34;|\u0026#34;,4) //S:$ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) barcode=\u0026#34;\u0026#34; //条码扫描错误 //I $L(barcode) { //双向 //} Invalid 条码扫描错误 d SendORR(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;,mshStr,barcode) } I segmentType=\u0026#34;QRD\u0026#34; {\t//就诊信息 S barcode=$P(record,\u0026#34;|\u0026#34;,9) s qrdStr=record //S:$ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) barcode=\u0026#34;\u0026#34; //条码扫描错误 //I $L(barcode) { //双向 //} Invalid 条码扫描错误 //mi,mshStr,qrdStr,qrfStr,barcode } I segmentType=\u0026#34;QRF\u0026#34; {\t//就诊信息 ;S barcode=$P(record,\u0026#34;|\u0026#34;,9) s qrfStr=record //S:$ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) barcode=\u0026#34;\u0026#34; //条码扫描错误 //I $L(barcode) { //双向 //} Invalid 条码扫描错误 //mi,mshStr,qrdStr,qrfStr,barcode d SendDSP(mi,mshStr,qrdStr,qrfStr,barcode) } } //I dataTye=\u0026#34;ED\u0026#34;,index\u0026gt;1,$L(base64Stream) { //D base64Stream.Write($P(record,\u0026#34;|\u0026#34;,1)) //i graphType=\u0026#34;WBC-DIFFBMP\u0026#34; d //.s ^LISDrawImageTask($h,mi,epis_\u0026#34;WBC-DIFF\u0026#34;)=$lb(epis,OldgraphDataDIFF,mi,\u0026#34;MI.MIFBC6800BI\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#DIFF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) //i graphType=\u0026#34;BASOBMP\u0026#34; d //.s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,OldgraphDataBaso,mi,\u0026#34;MI.MIFBC6800BI\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#Baso#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) //s miCode=$lg(^dbo.BTMIMachineParameterD(mi),2) //i graphType=\u0026#34;WBC-DIFF\u0026#34; d //.D Trace^MI.MIF000(mi,miCode_\u0026#34;:\u0026#34;_epis_\u0026#34;:\u0026#34;_graphType,\u0026#34;SaveImage\u0026#34;) //.s ret=##Class(MI.Common.MIFBase).SaveBase64ToMachine(mi,epis,graphType,base64Stream,epis_\u0026#34;-\u0026#34;_graphType,miCode) //} } Q /// D SendDSP^MI.MIFMEIKANG(63,\u0026#34;MSH|^~\\\u0026amp;|HOST|Unkown□Device|FMIS||20240410153949||QRY^Q02|2|P|2.3.1||||0||ANSI||\u0026#34;,\u0026#34;QRD|20240410153949|BC|D|0|||RD|1000860681||Rack^Pos|N|T\u0026#34;,\u0026#34;QRF|Unkown□Device|20240410000000|20240410235959|||RCT|COR|ALL|\u0026#34;,\u0026#34;1000860681\u0026#34;) SendDSP(mi,mshStr,qrdStr,qrfStr,barcode) N (mi,mshStr,qrdStr,qrfStr,barcode) S mi=$G(mi),mshStr=$G(mshStr),barcode=$G(barcode),qrdStr=$G(qrdStr),qrfStr=$G(qrfStr) D Trace^MI.MIF000(mi,\u0026#34;开始上传\u0026#34;,\u0026#34;Upload\u0026#34;) D Trace^MI.MIF000(mi,mshStr,\u0026#34;Upload\u0026#34;) D Trace^MI.MIF000(mi,qrdStr,\u0026#34;Upload\u0026#34;) D Trace^MI.MIF000(mi,qrfStr,\u0026#34;Upload\u0026#34;) b ;a102 S sb=$C(11),eb=$C(28),cr=$C(13) I \u0026#39;$L(barcode) { D Trace^MI.MIF000(mi,\u0026#34;条码号为空\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } I $ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) { //条码扫描错误 D Trace^MI.MIF000(mi,\u0026#34;条码扫描错误,机器未识别\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } S labno=barcode S workGroupMachineDR=$LG($G(^dbo.BTMIMachineParameterD(mi)),6) S visiNumberDR=$O(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) I \u0026#39;$L(visiNumberDR) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } S visNumberObj=##Class(dbo.RPVisitNumber).%OpenId(visiNumberDR) I \u0026#39;$L(visNumberObj) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } D Trace^MI.MIF000(mi,labno,\u0026#34;Upload Start\u0026#34;) K ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno) D ScanOne^MI.MIF000(mi,labno) S result=\u0026#34;\u0026#34; S chlStr=\u0026#34;\u0026#34; S chl=\u0026#34;\u0026#34;,chlCnt=0 F { S chl=$O(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) Q:\u0026#39;$L(chl) S chlStr=chlStr_chl_\u0026#34;^\u0026#34; S chlCnt=chlCnt+1 ;S result=result_chl_$C(92)_\u0026#34;?\u0026#34;_$C(44) } I \u0026#39;$L(chlStr) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的化验项目信息,确定医嘱或项目维护正确?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } i $l(chlStr){ s chlStr=$e(chlStr,1,*-1) } /* F { S chl=$O(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) Q:\u0026#39;$L(chl) S chlStr=chlStr_\u0026#34;DSP|\u0026#34;_chlCnt_\u0026#34;||\u0026#34;_chl_\u0026#34;^^^|||\u0026#34;_cr S chlCnt=chlCnt+1 ;S result=result_chl_$C(92)_\u0026#34;?\u0026#34;_$C(44) } I \u0026#39;$L(chlStr) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_labno_\u0026#34;对应的化验项目信息,确定医嘱或项目维护正确?\u0026#34;,\u0026#34;Upload Error\u0026#34;) Q 1 } */ D Save^MI.MIF000(mi,labno,result,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) S specimenDR=$LG($G(^dbo.RPVisitNumberD(visiNumberDR)),56) S specimenName=\u0026#34;\u0026#34; S:$L(specimenDR) specimenName=$LG($G(^dbo.BTSpecimenD(specimenDR)),3) S sampleType=\u0026#34;其他\u0026#34; I $L(specimenName),\u0026#34;,血清,血浆,尿液,脑脊液,\u0026#34;[(\u0026#34;,\u0026#34;_specimenName_\u0026#34;,\u0026#34;) { S sampleType=specimenName } S birdthday=visNumberObj.BirthDate S:$L(birdthday)=8 birdthday=birdthday_\u0026#34;000000\u0026#34; S:\u0026#39;$L(mshStr) mshStr=\u0026#34;MSH|^~\\\u0026amp;|YHLO|iFlash3000|||20161208150935||QRY^Q02|18|P|2.3.1||||||ASCII|||\u0026#34; S mshSeq=$P(mshStr,\u0026#34;|\u0026#34;,10) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;DSR^Q03\u0026#34; S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S episode=\u0026#34;\u0026#34; S workGroupMachineDR=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) //##Class(MI.Instrument).GetWorkGroupMachineRowId(mi) I $L(workGroupMachineDR) { S OrderNo=$O(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,visiNumberDR,workGroupMachineDR,\u0026#34;\u0026#34;)) I $L(OrderNo) { S reportDR=$O(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,visiNumberDR,workGroupMachineDR,OrderNo,\u0026#34;\u0026#34;)) S episode=\u0026#34;\u0026#34; //##Class(LIS.Core.Report).GetEpisodeNumber(reportDR) i $l(reportDR) s Assayno=$lg($g(^dbo.RPVisitNumberReportD(reportDR)),6) } } s Date=$h s datetime=$tr($zd($p(Date,\u0026#34;,\u0026#34;,1),3),\u0026#34;-\u0026#34;,\u0026#34;\u0026#34;)_\u0026#34;\u0026#34;_$tr($zt($p(Date,\u0026#34;,\u0026#34;,2),1),\u0026#34;:\u0026#34;,\u0026#34;\u0026#34;)\t//时间 s JZHWZ=$p(qrdStr,\u0026#34;|\u0026#34;,11)\t//架子号位置 S order=mshStr_cr //\u0026#34;MSH|^~\\\u0026amp;|||||20160122110540||DSR^Q03|14|P|2.3.1||||||ASCII|||\u0026#34;_cr S order=order_\u0026#34;MSA|OK|\u0026#34;_mshSeq_\u0026#34;||||0\u0026#34;_cr S order=order_\u0026#34;DSP|1||\u0026#34;_visNumberObj.RegNo_\u0026#34;|\u0026#34;_episode_\u0026#34;|\u0026#34;_visNumberObj.SurName_\u0026#34;|||||||||||||||||||||||||\u0026#34;_cr\tS order=order_\u0026#34;DSP|2|\u0026#34;_barcode_\u0026#34;|\u0026#34;_barcode_\u0026#34;||N||\u0026#34;_datetime_\u0026#34;||1|\u0026#34;_JZHWZ_\u0026#34;||N||\u0026#34;_datetime_\u0026#34;||||||||\u0026#34;_datetime_\u0026#34;||||||||||||||||||||||||\u0026#34;_cr\ts order=order_\u0026#34;DSP|3|\u0026#34;_chlCnt_\u0026#34;|\u0026#34;_chlStr_cr W sb,order,eb,cr,*-3 b ;a101 D Trace^MI.MIF000(mi,sb_order_eb_cr,\u0026#34;H--\u0026gt;M\u0026#34;) //$TR($ZDT($H,8),\u0026#34; :\u0026#34;) Q 0 Save D Trace^MI.MIF000(mi,epis_\u0026#34;^\u0026#34;_result,\u0026#34;Test\u0026#34;) I $l(epis),$l(result) { S QC=\u0026#34;\u0026#34; D Save^MI.MIF000(mi,epis,result,date,time,QC) } S (sample,epis,surname,rec,res,result,date,time,QC,resultType)=\u0026#34;\u0026#34; Q SendACK(mi,mshStr,ackType=\u0026#34;AA\u0026#34;,errCode=0,errDesc=\u0026#34;Message accepted\u0026#34;) //send \u0026#39;ack\u0026#39; to instrument N (mi,mshStr,ackType,errCode,errDesc) S mi=$g(mi),mshStr=$g(mshStr),ackType=$g(ackType),errCode=$g(errCode),errDesc=$g(errDesc) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) //Q:$l(mshStr,\u0026#34;|\u0026#34;)\u0026lt;21 ret S ret=0 S msgRoutine=$P($P(mshStr,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,2) S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;ACK^\u0026#34;_msgRoutine W sb,mshStr,cr,\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_\u0026#34;|\u0026#34;_errDesc_\u0026#34;|||\u0026#34;_errCode_\u0026#34;|\u0026#34;,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,$S(ackType=\u0026#34;AA\u0026#34;:\u0026#34;ACK\u0026#34;,ackType=\u0026#34;AE\u0026#34;:\u0026#34;Error\u0026#34;,ackType=\u0026#34;AR\u0026#34;:\u0026#34;NAK\u0026#34;,1:\u0026#34;NULL\u0026#34;),\u0026#34;H--\u0026gt;M\u0026#34;) Q ret ErrHandler D Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) h 3 Q //保存直方图 SaveHistogram(mi,epis,graphType,graphOrder,base64Stream) N (mi,epis,graphType,graphOrder,base64Stream) S mi=$G(mi),epis=$G(epis),graphType=$G(graphType),graphOrder=$G(graphOrder),base64Stream=$G(base64Stream) Q:\u0026#39;$L(mi) 1 Q:\u0026#39;$L(epis) 1 Q:\u0026#39;$L(base64Stream) 1 Q:\u0026#39;$L(graphType) 1 S:\u0026#39;$L(graphOrder) graphOrder=0 S glBinaryStream=##Class(%GlobalBinaryStream).%New() While \u0026#39;base64Stream.AtEnd { S base64=base64Stream.Read() S binary=$system.Encryption.Base64Decode(base64) D glBinaryStream.Write(binary) } S charStream=##Class(%GlobalCharacterStream).%New() S maxDot=0 While \u0026#39;glBinaryStream.AtEnd { S char=glBinaryStream.Read(1) S ascValue=$ASCII(char)_\u0026#34;,\u0026#34; S maxDot=maxDot+1 D charStream.Write(ascValue) } D charStream.Write(\u0026#34;0\u0026#34;) K glBinaryStream S title=graphType S foreColor=12 S:graphType=\u0026#34;PLT\u0026#34; foreColor=10 S top=10 S left=10 S width=300 S height=150 S (label,maxValue,memo)=\u0026#34;\u0026#34; S error=##Class(MI.Instrument).SaveHistogram(charStream,mi,epis,graphType,graphOrder,label,title,maxDot,maxValue,memo,foreColor,top,left,width,height) I $L(error) { D Trace^MI.MIF000(mi,$TR(error,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;),\u0026#34;Graph Error\u0026#34;) } K charStream Q 0 SendORR(mi,record, AckType=\u0026#34;AA\u0026#34;,ErrCode=0,ErrDesc=\u0026#34;Message accepted\u0026#34;,mshStr,epis) N (mi,record,AckType,ErrCode,ErrDesc,mshStr,epis) s mi=$g(mi),record=$g(record),AckType=$g(AckType),ErrCode=$g(ErrCode),ErrDesc=$g(ErrDesc),mshStr=$g(mshStr),epis=$g(epis) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) S ret=0 S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS||||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,7,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;ORR^O02\u0026#34; s isRecieve=\u0026#34;\u0026#34; s wgDR=\u0026#34;\u0026#34; s wgDR=$lg(^dbo.BTMIMachineParameterD(mi),6) //\u0026amp;sql(SELECT EpisodeNo into :isRecieve FROM dbo.RP_VisitNumberReport where AssayNo=:epis and WorkGroupMachineDR=:wgDR) s isRecieve=epis //##class(HIS.DHCReportPrint).GetReportAssayNoMTHD(mi,epis) s flag=\u0026#34;AA\u0026#34; s MSACode=seq D Trace^MI.MIF000(mi,isRecieve,\u0026#34;isRecieve is \u0026#34;) i ($l(isRecieve)\u0026lt;1) { s flag=\u0026#34;AR\u0026#34; } i $ZCVT(epis,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;){ s flag=\u0026#34;AR\u0026#34; } s MSA=\u0026#34;MSA|\u0026#34;_flag_\u0026#34;|\u0026#34;_MSACode i flag=\u0026#34;AR\u0026#34;{ S TMPCORDE=sb_mshStr_cr_MSA_cr_eb_cr W sb,mshStr,cr,MSA,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,TMPCORDE,\u0026#34;H-\u0026gt;M\u0026#34;) }else{ s PatInfomation=\u0026#34;\u0026#34; s PatInfomation=$$GetPatInfo(epis,mi) D Trace^MI.MIF000(mi,PatInfomation,\u0026#34;PatInfomation is\u0026#34;) s (RegNo,Name,Birth,Species,PatType,LOC,BedNo,Fee,Srcdocno,PatAge)=\u0026#34;\u0026#34; if $l(PatInfomation){ s RegNo=$p(PatInfomation,\u0026#34;,\u0026#34;,9) s Name=$p(PatInfomation,\u0026#34;,\u0026#34;,10) s Birth=$p(PatInfomation,\u0026#34;,\u0026#34;,29) s Species=$p(PatInfomation,\u0026#34;,\u0026#34;,11) i Species=\u0026#34;1\u0026#34; s Species=\u0026#34;Male\u0026#34; i Species=\u0026#34;2\u0026#34; s Species=\u0026#34;Fmale\u0026#34; s PatType=$p(PatInfomation,\u0026#34;,\u0026#34;,12) s LOC=$p(PatInfomation,\u0026#34;,\u0026#34;,6) s BedNo=$p(PatInfomation,\u0026#34;,\u0026#34;,13) s Fee=$p(PatInfomation,\u0026#34;,\u0026#34;,5) s Srcdocno=$p(PatInfomation,\u0026#34;,\u0026#34;,7) s PatAge=$p(PatInfomation,\u0026#34;,\u0026#34;,14) } s PID=\u0026#34;PID|1||\u0026#34;_RegNo_\u0026#34;^^^^MR||\u0026#34;_Name_\u0026#34;||\u0026#34;_Birth_\u0026#34;|\u0026#34;_Species s PV1=\u0026#34;PV1|1|\u0026#34;_PatType_\u0026#34;|\u0026#34;_LOC_\u0026#34;^^\u0026#34;_BedNo_\u0026#34;|||||||||||||||||\u0026#34;_Fee s ORC=\u0026#34;ORC|AF||\u0026#34;_epis s curTime=$zd($h,8)_$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;,\u0026#34;\u0026#34;) s randomNumber=1000+$r(1000) s OBR=\u0026#34;OBR|1|\u0026#34;_epis_\u0026#34;||00001^Automated Count^99MRC||\u0026#34;_curTime_randomNumber_\u0026#34;||||\u0026#34;_Srcdocno_\u0026#34;||||||||||||||HM||||||||Bill\u0026#34; s TestCodeDate=\u0026#34;\u0026#34; s TestCodeDate=$$SearchTestItem(mi,epis) s OBX=\u0026#34;OBX|1|IS|08003^Test Mode^99MRC||\u0026#34;_TestCodeDate_\u0026#34;||||||F\u0026#34;_cr_ \u0026#34;OBX|2|IS|01002^Ref Group^99MRC||Child||||||F\u0026#34;_cr_ \u0026#34;OBX|3|NM|30525-0^Age^LN||\u0026#34;_PatAge_\u0026#34;|yr|||||F\u0026#34;_cr_ \u0026#34;OBX|4|ST|01001^Remark^99MRC||\u0026#34;_PatType_\u0026#34;||||||F\u0026#34;_cr_ \u0026#34;OBX|5|ST|08005^SerialNumber^99MRC||\u0026#34;_isRecieve_\u0026#34;||||||F\u0026#34;_cr_ \u0026#34;OBX|6|IS|01007^Sample Type^99MRC||Venous blood||||||\u0026#34;_cr_ \u0026#34;OBX|7|IS|01008^Patient Area^99MRC||A - 501||||||F\u0026#34;_cr_ \u0026#34;OBX|8|ST|01009^Custom patient info 1^99MRC||Nothing||||||F\u0026#34;_cr_ \u0026#34;OBX|9|ST|01010^Custom patient info 2^99MRC||Nothing||||||F\u0026#34;_cr_ \u0026#34;OBX|10|ST|01011^Custom patient info 3^99MRC||Nothing||||||F\u0026#34; S TMPORDER=sb_mshStr_cr_MSA_cr_PID_cr_PV1_cr_ORC_cr_OBR_cr_OBX_cr_eb_cr w sb,mshStr,cr,MSA,cr,PID,cr,PV1,cr,ORC,cr,OBR,cr,OBX,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,TMPORDER,\u0026#34;H-\u0026gt;M\u0026#34;) } Q ret SearchTestItem(mi,epis) S tcx=\u0026#34;\u0026#34;,tc=\u0026#34;\u0026#34; d ScanOne^MI.MIF000(mi,epis) i $d(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis)){ f { s tc=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis,tc)) q:tc=\u0026#34;\u0026#34; i \u0026#39;$l(tcx){ s tcx=tc }else{ s tcx=tcx_\u0026#34;+\u0026#34;_tc } } } Q tcx GetPatInfo(labno,mi) s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,\u0026#34; \u0026#34;_labno,\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$lg(RPVisitNumberData,3) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),2) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s BirthDate=$lg(RPVisitNumberData,16) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$lg(RPVisitNumberData,28) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; s Patna=PatName ;病人姓名 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s EpisodeNo=\u0026#34;\u0026#34; s Diagnose=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode_\u0026#34;,\u0026#34;_BirthDate_\u0026#34;,\u0026#34;_EpisodeNo q RetString //双向上传医嘱信息,wwh,2015-11-05,未测试 SendOrder(mi,mshStr,record) N (mi,mshStr,record) S mi=$G(mi),mshStr=$G(mshStr),record=$G(record) Q:\u0026#39;$L(mi) 1 Q:\u0026#39;$D(^TMIF(mi)) 1 S barcode=$P(record,\u0026#34;|\u0026#34;,4) I \u0026#39;$L(barcode) { D Trace^MI.MIF000(mi,\u0026#34;条码号为空\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } I $ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) {\t//条码扫描错误 D Trace^MI.MIF000(mi,\u0026#34;条码扫描错误,机器未识别\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } I \u0026#39;$D(^TEPI(barcode)) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_barcode_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } K uploadList S tsCode=\u0026#34;\u0026#34;,uploadList=0 F { S tsCode=$O(^TEPI(barcode,1,tsCode)) Q:\u0026#39;$L(tsCode) Q:\u0026#39;$D(^TMIF(mi,0,tsCode)) S tsDesc=$P($G(^TTAB(\u0026#34;TS\u0026#34;,tsCode)),\u0026#34;\\\u0026#34;,1) S tsCnt=$O(^TEPI(barcode,1,tsCode,\u0026#34;\u0026#34;)) Q:\u0026#39;$L(tsCnt) S status=$P($G(^TEPI(barcode,1,tsCode,tsCnt)),\u0026#34;\\\u0026#34;,31) I status=\u0026#34;A\u0026#34; { D Trace^MI.MIF000(mi,\u0026#34;条码扫:\u0026#34;_barcode_\u0026#34;,医嘱:\u0026#34;_tsCode_\u0026#34;||\u0026#34;_tsDesc_\u0026#34;,不是登记状态,不再上传\u0026#34;,\u0026#34;Order\u0026#34;)\tContinue } S channel=$$GetTestSetChannel(tsCode) I \u0026#39;$L(channel) { D Trace^MI.MIF000(mi,\u0026#34;条码扫:\u0026#34;_barcode_\u0026#34;,医嘱:\u0026#34;_tsCode_\u0026#34;||\u0026#34;_tsDesc_\u0026#34;,未找到通道号\u0026#34;,\u0026#34;Order\u0026#34;)\tContinue } Continue:$D(uploadList(tsCode)) S uploadList(tsCode)=channel S uploadList=$I(uploadList) } I +$G(uploadList)\u0026lt;1 { D Trace^MI.MIF000(mi,\u0026#34;条码扫:\u0026#34;_barcode_\u0026#34;未找可上传的医嘱\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } //1,仪器发送过来的请求信息: //MSH|^~\\\u0026amp;||Mindray|||20081120174836||ORM^O01|4|P|2.3.1||||||UNICODE //ORC|RF||SampleID1||IP S order=\u0026#34;\u0026#34; S msh=\u0026#34;MSH|^~\\\u0026amp;|LIS||||\u0026#34;_$TR($ZDT($H,8),\u0026#34; :\u0026#34;)_\u0026#34;||ORR^O02|1|P|2.3.1||||||UNICODE\u0026#34; //huifu: //MSH|^~\\\u0026amp;|LIS||||20081120174836||ORR^O02|1|P|2.3.1||||||UNICODE //MSA|AA|4 //PID|1||ChartNo^^^^MR||^FName||19810506|NT //PV1|1|E|内科^^Bn4|||||||||||||||||NewCharge //ORC|AF|SampleID1||| //OBR|1|SampleID1||||20060506||||tester|||Diagnose content...|20060504||||||||20080821||HM||||审核者||||检验者 //OBX|1|IS|08001^Take Mode^99MRC||A||||||F //OBX|2|IS|08002^Blood Mode^99MRC||W||||||F //OBX|3|IS|08003^Test Mode^99MRC||CBC||||||F //OBX|4|IS|01002^Ref Group^99MRC||XXXX||||||F //OBX|5|NM|30525-0^Age^LN||1|hr|||||F //OBX|6|ST|01001^Remark^99MRC||remark content...||||||F ///未找到检测时: //MSH|^~\\\u0026amp;|LIS||||20081120174836||ORR^O02|1|P|2.3.1||||||UNICODE //MSA|AR|9 Q 0 GetTestSetChannel(tsCode) N (tsCode) S tsCode=$G(tsCode) Q \u0026#34;\u0026#34; 回传多行 OBX 示例接口(迈瑞 BC7500) 将患者信息和项目信息存入 OBX 回传仪器\nmi) ///仪器名称:\t血细胞分析流水线 ///仪器型号:\t迈瑞HL7 ///仪器厂商:\t迈瑞 ///通信协议:\tHL7 ///交互方式:\t双 向 ///接 口:\tTCP/IP,RS232 ///备 注:\t仪器配置:选择HL7协议,散点图选择:位图 S mi=$G(mi) Q:\u0026#39;$L(mi) s par11=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s par10=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s par4=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 S stx=$C(2),etx=$C(3),ack=$C(6),enq=$C(5),eot=$C(4),etb=$C(23) S sb=$C(11),eb=$C(28),cr=$C(13) S lf=$C(10),nak=$C(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType)=\u0026#34;\u0026#34; S $ZT=\u0026#34;ErrHandler\u0026#34;,$EC=\u0026#34;\u0026#34; Q:$$StartUTF8^MI.MIF000(mi) s IP=$li(^dbo.BTMIMachineParameterD(mi),9) s Port=$li(^dbo.BTMIMachineParameterD(mi),10) s LinkTime=0 s Device=\u0026#34;|TCP|\u0026#34;_Port F { try{ ;d Trace^MI.MIF000(mi,$ZA,\u0026#34;ZA\u0026#34;) //未启动客户端/服务端0，客户端断开连接标志20484，无客户端连接20480，有客户端连接28674，连接并建立数据传输28672 //lis断开 i $ZA=\u0026#34;0\u0026#34; { h 2 open Device:(IP:Port:/IOTABLE=\u0026#34;GB18030\u0026#34;):20 use Device d Trace^MI.MIF000(mi,\u0026#34;lis断开连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;lisReConnect\u0026#34;) //throw ##class(%Exception.General).%New(\u0026#34;ConnectError\u0026#34;,\u0026#34;D\u0026#34;,,\u0026#34;重新连接失败\u0026#34;) } //仪器断开，或者无数据1min，重启tcp i (($ZA=\u0026#34;20484\u0026#34;)) { close par4 ;d Trace^MI.MIF000(mi,\u0026#34;仪器断开连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;blockConnect\u0026#34;) h 2 open Device:(IP:Port:/IOTABLE=\u0026#34;GB18030\u0026#34;):20 use Device ;d Trace^MI.MIF000(mi,\u0026#34;重新连接\u0026#34;_$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;reConnect\u0026#34;) s LinkTime=0 continue } //连接无数据传输，main每执行6次，即1min，重启tcp i $ZA=\u0026#34;28674\u0026#34; s LinkTime=$i(LinkTime) //正常传输了，就清空计数 i $ZA=\u0026#34;28672\u0026#34; s LinkTime=0 d Main }catch ex{ s exception=\u0026#34;错误:\u0026#34;_ex.Location_\u0026#34;^\u0026#34;_ex.Data_ex.Name d Trace^MI.MIF000(mi,exception,\u0026#34;读取或写入异常，重启服务端\u0026#34;) } Q:$$Stop^MI.MIF000(mi) } C par4 Q Main R *R:10 Q:\u0026#39;$TEST\t//如果超时则退出 Q:$c(R)\u0026#39;=sb //以sb开头 S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType,msgType,barcode,mshStr)=\u0026#34;\u0026#34; S startTime=$P($H,\u0026#34;,\u0026#34;,2) K PLIST S index=1 F { S curTime=$P($H,\u0026#34;,\u0026#34;,2) Q:curTime\u0026gt;(startTime+300) //5分钟内没有处理完则退出循环 Q:$$Stop^MI.MIF000(mi) R *R:10 Q:\u0026#39;$TEST\t//如果超时则退出 I $L($G(PLIST(index)))\u0026gt;=32700 { //32767 S index=+$O(PLIST(\u0026#34;\u0026#34;),-1)+1 S PLIST(index)=\u0026#34;\u0026#34; } I $C(R)\u0026#39;=eb,$C(R)\u0026#39;=cr { S PLIST(index)=$G(PLIST(index))_$C(R) } I $C(R)=cr { //解析一条记录 D Record K PLIST S index=1 } Q:$C(R)=eb //循环读取,当为eb的时候则退出 } D Trace^MI.MIF000(mi,result,\u0026#34;result\u0026#34;) D Save Q Record S index=\u0026#34;\u0026#34; S segmentType=\u0026#34;\u0026#34;,dataTye=\u0026#34;\u0026#34;,graphType=\u0026#34;\u0026#34;,base64Stream=\u0026#34;\u0026#34; S isImage=0,isBinary=0 s OldgraphDataDIFF=\u0026#34;\u0026#34; s OldgraphDataBaso=\u0026#34;\u0026#34; s (Bracket,TestTube)=\u0026#34;\u0026#34; F { S index=$O(PLIST(index)) Q:\u0026#39;$L(index) S record=$TR($G(PLIST(index)),cr) Continue:\u0026#39;$L(record) D Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) I index=1 { S segmentType=$P(record,\u0026#34;|\u0026#34;,1) I segmentType=\u0026#34;MSH\u0026#34; {\t//信息头信息 S mshStr=record //消息类型 S msgType=$P($P(record,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,1) //ORU,ACK,QRY,QCK,DSR I msgType=\u0026#34;ORU\u0026#34; { D SendACK(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;) } I msgType=\u0026#34;ORM\u0026#34; { } S resultType=$P(record,\u0026#34;|\u0026#34;,11) } I segmentType=\u0026#34;PID\u0026#34; {\t//患者信息 } I segmentType=\u0026#34;PVI\u0026#34; {\t//就诊信息 } I segmentType=\u0026#34;OBR\u0026#34; {\t//医嘱信息 S epis=$P(record,\u0026#34;|\u0026#34;,3) S:\u0026#39;$l(epis) epis=$P(record,\u0026#34;|\u0026#34;,4) i epis[\u0026#34;Inv\u0026#34; d\t//Inv.082526_6-8 .s epis=$tr($tr(epis,\u0026#34;Inv.\u0026#34;,\u0026#34;\u0026#34;),\u0026#34;_\u0026#34;,\u0026#34;\u0026#34;)\t//YHR 20230819 仪器未识别到条码改为架子号获取信息 /*------自动核收-------*/\t//YHR 20230910 迈瑞BC7500自动核收 ;try{s ret=##class(MI.Special.AutomaticReceipt).ZDHS(mi,epis)}catch{} S code=$P($P(record,\u0026#34;|\u0026#34;,5),\u0026#34;^\u0026#34;,1) I code=\u0026#34;00003\u0026#34; {\t//LJ QCR } } I segmentType=\u0026#34;OBX\u0026#34; { S dataTye=$P(record,\u0026#34;|\u0026#34;,3) //NM (numeric) 表示数字值，用于定量项目, //ST (string) 表示字符串值，用于定性项目 S channel=$P(record,\u0026#34;|\u0026#34;,4) s InformationID=$p(channel,\u0026#34;^\u0026#34;,1) S channel=$P(channel,\u0026#34;^\u0026#34;,2) //s:\u0026#39;$l(channel) channel=$P(record,\u0026#34;|\u0026#34;,5) S value=$P(record,\u0026#34;|\u0026#34;,6) ;i value[\u0026#34;\u0026lt;\u0026#34; s value=$tr(value,\u0026#34;\u0026lt;\u0026#34;) ;i value[\u0026#34;\u0026gt;\u0026#34; s value=$tr(value,\u0026#34;\u0026gt;\u0026#34;) s value=$tr(value,\u0026#34; \u0026#34;) I channel=\u0026#34;FR-CRP\u0026#34; { i value\u0026gt;10 d .s channel1=\u0026#34;FCRP\u0026#34; .s channel2=\u0026#34;Fhs-CRP\u0026#34; .s value1=value .s value2=\u0026#34;\u0026gt;10\u0026#34; i value\u0026lt;10 d .s channel1=\u0026#34;FCRP\u0026#34; .s channel2=\u0026#34;Fhs-CRP\u0026#34; .s value1=\u0026#34;\u0026lt;10\u0026#34; .s value2=value i value=10 d .s channel1=\u0026#34;FCRP\u0026#34; .s channel2=\u0026#34;Fhs-CRP\u0026#34; .s value1=value .s value2=value S result=result_channel1_par10_value1_par11 S result=result_channel2_par10_value2_par11 } I channel=\u0026#34;SI\u0026#34; {\t//value=浊度(L)^溶血(H)^黄疸(I) S:$l($P(value,\u0026#34;^\u0026#34;,2)) result=result_channel_\u0026#34;H\u0026#34;_par10_$P(value,\u0026#34;^\u0026#34;,2)_par11 S:$l($P(value,\u0026#34;^\u0026#34;,3)) result=result_channel_\u0026#34;I\u0026#34;_par10_$P(value,\u0026#34;^\u0026#34;,3)_par11 S value=$P(value,\u0026#34;^\u0026#34;,1) } I dataTye=\u0026#34;ST\u0026#34; { S value=$S(value=\u0026#34;ò?D?\u0026#34;:\u0026#34;阴性\u0026#34;,value=\u0026#34;??D?\u0026#34;:\u0026#34;阳性\u0026#34;,1:value) i InformationID=\u0026#34;01012\u0026#34; d .s Bracket=$P(record,\u0026#34;|\u0026#34;,6) .s ^TMPBC7500(\u0026#34;Bracket\u0026#34;)=Bracket i $l($g(^TMPBC7500(\u0026#34;Bracket\u0026#34;))),InformationID=\u0026#34;01013\u0026#34; d .s TestTube=$P(record,\u0026#34;|\u0026#34;,6) .s RackNo=\u0026#34;上机:\u0026#34;_$g(^TMPBC7500(\u0026#34;Bracket\u0026#34;))_\u0026#34;-\u0026#34;_TestTube .k ^TMPBC7500(\u0026#34;Bracket\u0026#34;) .try{s ret=##class(MI.Special.SaveInformation).SaveRackNo(mi,epis, RackNo)}catch{}\t//YHR 20230914 保存架子号 } I $L(channel),dataTye\u0026#39;=\u0026#34;ED\u0026#34;,dataTye\u0026#39;=\u0026#34;IS\u0026#34; { S result=result_channel_par10_value_par11 } I dataTye=\u0026#34;IS\u0026#34; {\tI channel=\u0026#34;05001\u0026#34;,resultType=\u0026#34;Q\u0026#34; {\t//质控浓度 S epis=value } i $d(^LISPolice(\u0026#34;BC7500\u0026#34;,InformationID)) d .s WarningMessage=$g(^LISPolice(\u0026#34;BC7500\u0026#34;,InformationID)) .try{s ret=##Class(MI.Special.SaveInformation).SaveAlarmInformation(mi,epis,WarningMessage)}catch{}\t//YHR 20230914 保存报警信息 } S graphTypeDesc=$ZCVT($P($P(record,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,2),\u0026#34;U\u0026#34;) I dataTye=\u0026#34;ED\u0026#34; {\t//图形数据 I $ZCVT($P(value,\u0026#34;^\u0026#34;,2),\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Image\u0026#34;,\u0026#34;U\u0026#34;) { S isImage=1 //位图数据 } I $ZCVT($P(value,\u0026#34;^\u0026#34;,3),\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Octer-stream\u0026#34;,\u0026#34;U\u0026#34;) { S isBinary=1\t//二进制数据(需要绘图) } S graphType=channel I channel=\u0026#34;15050\u0026#34; {\t//二进制数据 S graphType=\u0026#34;RBC\u0026#34; } I channel=\u0026#34;15056\u0026#34; {\t//位图数据 S graphType=\u0026#34;RBC\u0026#34; } I channel=\u0026#34;15100\u0026#34; {\t//二进制数据 S graphType=\u0026#34;PLT\u0026#34; } I channel=\u0026#34;15116\u0026#34; {\t//位图数据 S graphType=\u0026#34;PLT\u0026#34; } I channel=\u0026#34;15200\u0026#34; {\t//位图数据 S graphType=\u0026#34;WBC-DIFFBMP\u0026#34; } I channel=\u0026#34;15201\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;WBC-DIFF\u0026#34; } I channel=\u0026#34;15202\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;WBC-DIFF\u0026#34; } I channel=\u0026#34;15250\u0026#34; {\t//位图数据 S graphType=\u0026#34;BASOBMP\u0026#34; } I channel=\u0026#34;15251\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;BASO\u0026#34; } I channel=\u0026#34;15300\u0026#34; {\t//位图数据 S graphType=\u0026#34;RET\u0026#34; } I channel=\u0026#34;15306\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;RET\u0026#34; } I channel=\u0026#34;15301\u0026#34; {\t//位图数据 S graphType=\u0026#34;PLT-0\u0026#34; } I channel=\u0026#34;15302\u0026#34; {\t//位图数据 S graphType=\u0026#34;RET-EXT\u0026#34; } I channel=\u0026#34;15350\u0026#34; {\t//位图数据 S graphType=\u0026#34;NRBC\u0026#34; } I channel=\u0026#34;15354\u0026#34; {\t//二进制数据 S (isImage,isBinary)=0\t//暂时不处理二进制数据 S graphType=\u0026#34;NRBC\u0026#34; } S graphData=$P(value,\u0026#34;^\u0026#34;,5) S graphDataType=$P(value,\u0026#34;^\u0026#34;,4) I $ZCVT(graphDataType,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Base64\u0026#34;,\u0026#34;U\u0026#34;) { D Trace^MI.MIF000(mi,graphData,graphType) /* i graphType[\u0026#34;RBC Histogram\u0026#34; d .s charStream=##class(%GlobalCharacterStream).%New() .d charStream.Write(graphData) .s ret=##Class(MI.TEST.TEST).SaveBase64ToMachine(mi,epis,\u0026#34;RBC\u0026#34;,charStream,epis_\u0026#34;RBC.bmp\u0026#34;,\u0026#34;BC7500\u0026#34;) .D Trace^MI.MIF000(mi,ret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：RBC Histogram\u0026#34;) i graphType[\u0026#34;PLT Histogram\u0026#34; d .s charStream=##class(%GlobalCharacterStream).%New() .d charStream.Write(graphData) .s ret=##Class(MI.TEST.TEST).SaveBase64ToMachine(mi,epis,\u0026#34;PLT\u0026#34;,charStream,epis_\u0026#34;PLT.bmp\u0026#34;,\u0026#34;BC7500\u0026#34;) .D Trace^MI.MIF000(mi,ret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：PLT Histogram\u0026#34;) i graphType[\u0026#34;WBC DIFF Scattergram\u0026#34; d .s charStream=##class(%GlobalCharacterStream).%New() .d charStream.Write(graphData) .s ret=##Class(MI.TEST.TEST).SaveBase64ToMachine(mi,epis,\u0026#34;DIFF\u0026#34;,charStream,epis_\u0026#34;DIFF.bmp\u0026#34;,\u0026#34;BC7500\u0026#34;) .D Trace^MI.MIF000(mi,ret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：WBC DIFF Scattergram\u0026#34;) i graphType[\u0026#34;WNB Scattergram\u0026#34; d .s charStream=##class(%GlobalCharacterStream).%New() .d charStream.Write(graphData) .s ret=##Class(MI.TEST.TEST).SaveBase64ToMachine(mi,epis,\u0026#34;Baso\u0026#34;,charStream,epis_\u0026#34;Baso.bmp\u0026#34;,\u0026#34;BC7500\u0026#34;) .D Trace^MI.MIF000(mi,ret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：WNB Scattergram\u0026#34;) */ i graphType[\u0026#34;RBC Histogram\u0026#34; d .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;RBC\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#RBC#RBC######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RBC#RBC######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：RBC Histogram\u0026#34;) i graphType[\u0026#34;PLT Histogram\u0026#34; d .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;PLT\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#PLT#PLT######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#PLT#RBC######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：PLT Histogram\u0026#34;) i graphType[\u0026#34;WBC DIFF\u0026#34; d .//s OldgraphDataDIFF=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;WBC-DIFF\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#DIFF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#DIFF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：WBC DIFF\u0026#34;) i graphType[\u0026#34;WNB Scattergram\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#WNB#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#Baso#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：WNB Scattergram\u0026#34;) i graphType[\u0026#34;RET Scattergram\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RET#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RET#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：RET Scattergram\u0026#34;) i graphType[\u0026#34;PLT-O Scattergram\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RET#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#PLTO#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：PLT-O Scattergram\u0026#34;) i graphType[\u0026#34;RET-EXT Scattergram\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RET#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RETEXT#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：RET-EXT Scattergram\u0026#34;) i graphType[\u0026#34;RBCVHF Scattergram\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RET#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RBCVHF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：RBCVHF Scattergram\u0026#34;) i graphType[\u0026#34;RBCSCT Scattergram\u0026#34; d .s OldgraphDataBaso=graphData .//s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RET#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() .s tret=tretObj.DrawImage(epis,graphData,mi,\u0026#34;MI.MIFLISMonitorTest\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#RBCSCT#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) .D Trace^MI.MIF000(mi,tret_\u0026#34;!!\u0026#34;_epis_\u0026#34;$$\u0026#34;_mi,\u0026#34;绘图：RBCSCT Scattergram\u0026#34;) } } } I segmentType=\u0026#34;ORC\u0026#34; {\t//就诊信息 S barcode=$P(record,\u0026#34;|\u0026#34;,4) /*------自动核收-------*/\t//YHR 20230910 迈瑞BC7500自动核收 ;try{s ret=##class(MI.Special.AutomaticReceipt).ZDHS(mi,barcode)}catch{} //S:$ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) barcode=\u0026#34;\u0026#34; //条码扫描错误 //I $L(barcode) { //双向 //} Invalid 条码扫描错误 d SendORR(mi,record,\u0026#34;AA\u0026#34;,0,\u0026#34;Message accepted\u0026#34;,mshStr,barcode) } } //I dataTye=\u0026#34;ED\u0026#34;,index\u0026gt;1,$L(base64Stream) { //D base64Stream.Write($P(record,\u0026#34;|\u0026#34;,1)) //i graphType=\u0026#34;WBC-DIFFBMP\u0026#34; d //.s ^LISDrawImageTask($h,mi,epis_\u0026#34;WBC-DIFF\u0026#34;)=$lb(epis,OldgraphDataDIFF,mi,\u0026#34;MI.MIFBC6800BI\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#DIFF#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) //i graphType=\u0026#34;BASOBMP\u0026#34; d //.s ^LISDrawImageTask($h,mi,epis_\u0026#34;BASO\u0026#34;)=$lb(epis,OldgraphDataBaso,mi,\u0026#34;MI.MIFBC6800BI\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#Baso#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.Imagebc6800,LIS.Mach.ImageDeal\u0026#34;) //s miCode=$lg(^dbo.BTMIMachineParameterD(mi),2) //i graphType=\u0026#34;WBC-DIFF\u0026#34; d //.D Trace^MI.MIF000(mi,miCode_\u0026#34;:\u0026#34;_epis_\u0026#34;:\u0026#34;_graphType,\u0026#34;SaveImage\u0026#34;) //.s ret=##Class(MI.Common.MIFBase).SaveBase64ToMachine(mi,epis,graphType,base64Stream,epis_\u0026#34;-\u0026#34;_graphType,miCode) //} } Q Save D Trace^MI.MIF000(mi,epis_\u0026#34;^\u0026#34;_result,\u0026#34;Test\u0026#34;) I $l(epis),$l(result) { S QC=\u0026#34;\u0026#34; D Save^MI.MIF000(mi,epis,result,date,time,QC) } S (sample,epis,surname,rec,res,result,date,time,QC,resultType)=\u0026#34;\u0026#34; Q SendACK(mi,mshStr,ackType=\u0026#34;AA\u0026#34;,errCode=0,errDesc=\u0026#34;Message accepted\u0026#34;) //send \u0026#39;ack\u0026#39; to instrument N (mi,mshStr,ackType,errCode,errDesc) S mi=$g(mi),mshStr=$g(mshStr),ackType=$g(ackType),errCode=$g(errCode),errDesc=$g(errDesc) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) //Q:$l(mshStr,\u0026#34;|\u0026#34;)\u0026lt;21 ret S ret=0 S msgRoutine=$P($P(mshStr,\u0026#34;|\u0026#34;,9),\u0026#34;^\u0026#34;,2) S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS|||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,6,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;ACK^\u0026#34;_msgRoutine W sb,mshStr,cr,\u0026#34;MSA|\u0026#34;_ackType_\u0026#34;|\u0026#34;_seq_\u0026#34;|\u0026#34;_errDesc_\u0026#34;|||\u0026#34;_errCode_\u0026#34;|\u0026#34;,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,$S(ackType=\u0026#34;AA\u0026#34;:\u0026#34;ACK\u0026#34;,ackType=\u0026#34;AE\u0026#34;:\u0026#34;Error\u0026#34;,ackType=\u0026#34;AR\u0026#34;:\u0026#34;NAK\u0026#34;,1:\u0026#34;NULL\u0026#34;),\u0026#34;H--\u0026gt;M\u0026#34;) Q ret ErrHandler D Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) h 3 Q //保存直方图 SaveHistogram(mi,epis,graphType,graphOrder,base64Stream) N (mi,epis,graphType,graphOrder,base64Stream) S mi=$G(mi),epis=$G(epis),graphType=$G(graphType),graphOrder=$G(graphOrder),base64Stream=$G(base64Stream) Q:\u0026#39;$L(mi) 1 Q:\u0026#39;$L(epis) 1 Q:\u0026#39;$L(base64Stream) 1 Q:\u0026#39;$L(graphType) 1 S:\u0026#39;$L(graphOrder) graphOrder=0 S glBinaryStream=##Class(%GlobalBinaryStream).%New() While \u0026#39;base64Stream.AtEnd { S base64=base64Stream.Read() S binary=$system.Encryption.Base64Decode(base64) D glBinaryStream.Write(binary) } S charStream=##Class(%GlobalCharacterStream).%New() S maxDot=0 While \u0026#39;glBinaryStream.AtEnd { S char=glBinaryStream.Read(1) S ascValue=$ASCII(char)_\u0026#34;,\u0026#34; S maxDot=maxDot+1 D charStream.Write(ascValue) } D charStream.Write(\u0026#34;0\u0026#34;) K glBinaryStream S title=graphType S foreColor=12 S:graphType=\u0026#34;PLT\u0026#34; foreColor=10 S top=10 S left=10 S width=300 S height=150 S (label,maxValue,memo)=\u0026#34;\u0026#34; S error=##Class(MI.Instrument).SaveHistogram(charStream,mi,epis,graphType,graphOrder,label,title,maxDot,maxValue,memo,foreColor,top,left,width,height) I $L(error) { D Trace^MI.MIF000(mi,$TR(error,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;),\u0026#34;Graph Error\u0026#34;) } K charStream Q 0 SendORR(mi,record, AckType=\u0026#34;AA\u0026#34;,ErrCode=0,ErrDesc=\u0026#34;Message accepted\u0026#34;,mshStr,epis) N (mi,record,AckType,ErrCode,ErrDesc,mshStr,epis) s mi=$g(mi),record=$g(record),AckType=$g(AckType),ErrCode=$g(ErrCode),ErrDesc=$g(ErrDesc),mshStr=$g(mshStr),epis=$g(epis) S ret=1,sb=$C(11),eb=$C(28),cr=$C(13) Q:(\u0026#39;$l(mi))||(\u0026#39;$l(mshStr)) ret S mshStr=$TR(mshStr,cr,\u0026#34;\u0026#34;) S ret=0 S seq=$P(mshStr,\u0026#34;|\u0026#34;,10) S mshStr=$P(mshStr,\u0026#34;|\u0026#34;,1,2)_\u0026#34;|LIS||||\u0026#34;_$P(mshStr,\u0026#34;|\u0026#34;,7,$l(mshStr)) S $P(mshStr,\u0026#34;|\u0026#34;,9)=\u0026#34;ORR^O02\u0026#34; s isRecieve=\u0026#34;\u0026#34; s wgDR=\u0026#34;\u0026#34; s wgDR=$lg(^dbo.BTMIMachineParameterD(mi),6) //\u0026amp;sql(SELECT EpisodeNo into :isRecieve FROM dbo.RP_VisitNumberReport where AssayNo=:epis and WorkGroupMachineDR=:wgDR) s isRecieve=epis //##class(HIS.DHCReportPrint).GetReportAssayNoMTHD(mi,epis) s flag=\u0026#34;AA\u0026#34; s MSACode=seq D Trace^MI.MIF000(mi,isRecieve,\u0026#34;isRecieve is \u0026#34;) i ($l(isRecieve)\u0026lt;1) { s flag=\u0026#34;AR\u0026#34; } i $ZCVT(epis,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;){ s flag=\u0026#34;AR\u0026#34; } s MSA=\u0026#34;MSA|\u0026#34;_flag_\u0026#34;|\u0026#34;_MSACode i flag=\u0026#34;AR\u0026#34;{ S TMPCORDE=sb_mshStr_cr_MSA_cr_eb_cr W sb,mshStr,cr,MSA,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,TMPCORDE,\u0026#34;H-\u0026gt;M\u0026#34;) }else{ s PatInfomation=\u0026#34;\u0026#34; s PatInfomation=$$GetPatInfo(epis,mi) D Trace^MI.MIF000(mi,PatInfomation,\u0026#34;PatInfomation is\u0026#34;) s (RegNo,Name,Birth,Species,PatType,LOC,BedNo,Fee,Srcdocno,PatAge)=\u0026#34;\u0026#34; if $l(PatInfomation){ s RegNo=$p(PatInfomation,\u0026#34;,\u0026#34;,9) s Name=$p(PatInfomation,\u0026#34;,\u0026#34;,10) s Birth=$p(PatInfomation,\u0026#34;,\u0026#34;,29) s Species=$p(PatInfomation,\u0026#34;,\u0026#34;,11) i Species=\u0026#34;1\u0026#34; s Species=\u0026#34;男\u0026#34; i Species=\u0026#34;2\u0026#34; s Species=\u0026#34;女\u0026#34; s PatType=$p(PatInfomation,\u0026#34;,\u0026#34;,12) s LOC=$p(PatInfomation,\u0026#34;,\u0026#34;,6) s BedNo=$p(PatInfomation,\u0026#34;,\u0026#34;,13) s Fee=$p(PatInfomation,\u0026#34;,\u0026#34;,5) s Srcdocno=$p(PatInfomation,\u0026#34;,\u0026#34;,7) s PatAge=$p(PatInfomation,\u0026#34;,\u0026#34;,14) } s PID=\u0026#34;PID|1||\u0026#34;_RegNo_\u0026#34;^^^^MR||\u0026#34;_Name_\u0026#34;^\u0026#34;_Name_\u0026#34;||\u0026#34;_Birth_\u0026#34;|\u0026#34;_Species s PV1=\u0026#34;PV1|1|\u0026#34;_PatType_\u0026#34;|\u0026#34;_LOC_\u0026#34;^^\u0026#34;_BedNo_\u0026#34;|||||||||||||||||\u0026#34;_Fee s ORC=\u0026#34;ORC|AF||\u0026#34;_epis s curTime=$zd($h,8)_$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;,\u0026#34;\u0026#34;) s randomNumber=1000+$r(1000) s OBR=\u0026#34;OBR|1|\u0026#34;_epis_\u0026#34;||00001^Automated Count^99MRC||\u0026#34;_curTime_randomNumber_\u0026#34;||||\u0026#34;_Srcdocno_\u0026#34;||||||||||||||HM||||||||Bill\u0026#34; s TestCodeDate=\u0026#34;\u0026#34; s TestCodeDate=$$SearchTestItem(mi,epis) s OBX=\u0026#34;OBX|1|IS|08003^Test Mode^99MRC||\u0026#34;_TestCodeDate_\u0026#34;||||||F\u0026#34;_cr_ \u0026#34;OBX|2|IS|01002^Ref Group^99MRC||Child||||||F\u0026#34;_cr_ \u0026#34;OBX|3|NM|30525-0^Age^LN||\u0026#34;_PatAge_\u0026#34;|yr|||||F\u0026#34;_cr_ \u0026#34;OBX|4|ST|01001^Remark^99MRC||\u0026#34;_PatType_\u0026#34;||||||F\u0026#34;_cr_ \u0026#34;OBX|5|ST|08005^SerialNumber^99MRC||\u0026#34;_isRecieve_\u0026#34;||||||F\u0026#34;_cr_ \u0026#34;OBX|6|IS|01007^Sample Type^99MRC||Venous blood||||||\u0026#34;_cr_ \u0026#34;OBX|7|IS|01008^Patient Area^99MRC||A - 501||||||F\u0026#34;_cr_ \u0026#34;OBX|8|ST|01009^Custom patient info 1^99MRC||Nothing||||||F\u0026#34;_cr_ \u0026#34;OBX|9|ST|01010^Custom patient info 2^99MRC||Nothing||||||F\u0026#34;_cr_ \u0026#34;OBX|10|ST|01011^Custom patient info 3^99MRC||Nothing||||||F\u0026#34; S TMPORDER=sb_mshStr_cr_MSA_cr_PID_cr_PV1_cr_ORC_cr_OBR_cr_OBX_cr_eb_cr w sb,mshStr,cr,MSA,cr,PID,cr,PV1,cr,ORC,cr,OBR,cr,OBX,cr,eb,cr,*-3 D Trace^MI.MIF000(mi,TMPORDER,\u0026#34;H-\u0026gt;M\u0026#34;) } Q ret SearchTestItem(mi,epis) S tcx=\u0026#34;\u0026#34;,tc=\u0026#34;\u0026#34; d ScanOne^MI.MIF000(mi,epis) i $d(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis)){ f { s tc=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,epis,tc)) q:tc=\u0026#34;\u0026#34; i \u0026#39;$l(tcx){ s tcx=tc }else{ s tcx=tcx_\u0026#34;+\u0026#34;_tc } } } Q tcx GetPatInfo(labno,mi) s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,\u0026#34;\u0026#34;_labno,\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$lg(RPVisitNumberData,3) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),2) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s BirthDate=$lg(RPVisitNumberData,16) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$lg(RPVisitNumberData,28) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; s Patna=PatName ;病人姓名 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s EpisodeNo=\u0026#34;\u0026#34; s Diagnose=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode_\u0026#34;,\u0026#34;_BirthDate_\u0026#34;,\u0026#34;_EpisodeNo q RetString //双向上传医嘱信息,wwh,2015-11-05,未测试 SendOrder(mi,mshStr,record) N (mi,mshStr,record) S mi=$G(mi),mshStr=$G(mshStr),record=$G(record) Q:\u0026#39;$L(mi) 1 Q:\u0026#39;$D(^TMIF(mi)) 1 S barcode=$P(record,\u0026#34;|\u0026#34;,4) I \u0026#39;$L(barcode) { D Trace^MI.MIF000(mi,\u0026#34;条码号为空\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } I $ZCVT(barcode,\u0026#34;U\u0026#34;)=$ZCVT(\u0026#34;Invalid\u0026#34;,\u0026#34;U\u0026#34;) {\t//条码扫描错误 D Trace^MI.MIF000(mi,\u0026#34;条码扫描错误,机器未识别\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } I \u0026#39;$D(^TEPI(barcode)) { D Trace^MI.MIF000(mi,\u0026#34;在检验系统未找到条码:\u0026#34;_barcode_\u0026#34;对应的标本信息,确定条码正确或标本已经接收?\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } K uploadList S tsCode=\u0026#34;\u0026#34;,uploadList=0 F { S tsCode=$O(^TEPI(barcode,1,tsCode)) Q:\u0026#39;$L(tsCode) Q:\u0026#39;$D(^TMIF(mi,0,tsCode)) S tsDesc=$P($G(^TTAB(\u0026#34;TS\u0026#34;,tsCode)),\u0026#34;\\\u0026#34;,1) S tsCnt=$O(^TEPI(barcode,1,tsCode,\u0026#34;\u0026#34;)) Q:\u0026#39;$L(tsCnt) S status=$P($G(^TEPI(barcode,1,tsCode,tsCnt)),\u0026#34;\\\u0026#34;,31) I status=\u0026#34;A\u0026#34; { D Trace^MI.MIF000(mi,\u0026#34;条码扫:\u0026#34;_barcode_\u0026#34;,医嘱:\u0026#34;_tsCode_\u0026#34;||\u0026#34;_tsDesc_\u0026#34;,不是登记状态,不再上传\u0026#34;,\u0026#34;Order\u0026#34;)\tContinue } S channel=$$GetTestSetChannel(tsCode) I \u0026#39;$L(channel) { D Trace^MI.MIF000(mi,\u0026#34;条码扫:\u0026#34;_barcode_\u0026#34;,医嘱:\u0026#34;_tsCode_\u0026#34;||\u0026#34;_tsDesc_\u0026#34;,未找到通道号\u0026#34;,\u0026#34;Order\u0026#34;)\tContinue } Continue:$D(uploadList(tsCode)) S uploadList(tsCode)=channel S uploadList=$I(uploadList) } I +$G(uploadList)\u0026lt;1 { D Trace^MI.MIF000(mi,\u0026#34;条码扫:\u0026#34;_barcode_\u0026#34;未找可上传的医嘱\u0026#34;,\u0026#34;Order\u0026#34;) Q 1 } //1,仪器发送过来的请求信息: //MSH|^~\\\u0026amp;||Mindray|||20081120174836||ORM^O01|4|P|2.3.1||||||UNICODE //ORC|RF||SampleID1||IP S order=\u0026#34;\u0026#34; S msh=\u0026#34;MSH|^~\\\u0026amp;|LIS||||\u0026#34;_$TR($ZDT($H,8),\u0026#34; :\u0026#34;)_\u0026#34;||ORR^O02|1|P|2.3.1||||||UNICODE\u0026#34; //huifu: //MSH|^~\\\u0026amp;|LIS||||20081120174836||ORR^O02|1|P|2.3.1||||||UNICODE //MSA|AA|4 //PID|1||ChartNo^^^^MR||^FName||19810506|NT //PV1|1|E|内科^^Bn4|||||||||||||||||NewCharge //ORC|AF|SampleID1||| //OBR|1|SampleID1||||20060506||||tester|||Diagnose content...|20060504||||||||20080821||HM||||审核者||||检验者 //OBX|1|IS|08001^Take Mode^99MRC||A||||||F //OBX|2|IS|08002^Blood Mode^99MRC||W||||||F //OBX|3|IS|08003^Test Mode^99MRC||CBC||||||F //OBX|4|IS|01002^Ref Group^99MRC||XXXX||||||F //OBX|5|NM|30525-0^Age^LN||1|hr|||||F //OBX|6|ST|01001^Remark^99MRC||remark content...||||||F ///未找到检测时: //MSH|^~\\\u0026amp;|LIS||||20081120174836||ORR^O02|1|P|2.3.1||||||UNICODE //MSA|AR|9 Q 0 GetTestSetChannel(tsCode) N (tsCode) S tsCode=$G(tsCode) Q \u0026#34;\u0026#34; 8-血细胞（迈瑞7500））H-046-011151-00-7.0 labXpert 通信协议（中文）.pdf\nASTM 协议接口双向 一次性发送按照字符数多次发送 限制每次发送字数不能超过 241 个字数，在回传时要根据回传的字符数进行分割\n示例接口(日立名称: MI.MIFDXC800BI /// 描述: DXC800 仪器接口 /// 通讯方式：双向,半双工 /// 编写者:liuzf /// 编写日期: 20150827 MIFABH7600BI(mi) ; 3/17/04 ; ASTM protocol - H7600 s mi=$g(mi) S ^TMPMACH10(mi,104)=$H i \u0026#39;$l(mi) q s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 //控制字符 s stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4) s lf=$c(10),cr=$c(13),nak=$c(21),(result,epis)=\u0026#34;\u0026#34;,etb=$c(23) S ^TMPMACH10(mi,102)=$H i $$Start^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q c Port q ErrHandler h 10 d Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) s iERR=+$g(iERR)+1 i iERR\u0026gt;30 s ret=$$Stop^MI.MIF000(mi) Q Main SET $ZTRAP=\u0026#34;ErrHandler\u0026#34; S iERR=0 r *R:10 e d q .d BUILD .//自动上传 .d BUILD2 i $c(R)=enq d .s AllRecord=\u0026#34;\u0026#34; .d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) .d ACK .f r *R:10 q:$c(R)=eot d ..i $c(R)\u0026#39;=stx q ..s record=$$Read^MI.MIF000(mi,\u0026#34;\u0026#34;,lf) q:\u0026#39;$l(record) ..s record=$e(record,2,$l(record)-1) ..d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) ..s AllRecord=AllRecord_$p(record,etb,1) ..d ACK .d Trace^MI.MIF000(mi,$s($c(R)=eot:\u0026#34;EOT\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) .;i $c(R)=eot,$l(AllRecord) d .i $l(AllRecord) d ..s (mid,sample,epis,surname,rec,res,result,date,time,QC,Pflag,code)=\u0026#34;\u0026#34; ..f i=1:1:$l(AllRecord,cr) d ...s rec=$p(AllRecord,cr,i) ...d Trace^MI.MIF000(mi,rec,\u0026#34;rec\u0026#34;) ...s type=$tr($p(rec,\u0026#34;|\u0026#34;),\u0026#34; \u0026#34;) ...i type=\u0026#34;H\u0026#34; d q ....s (mid,sample,epis,surname,rec,res,result,date,time,QC,racksid,rackno,code)=\u0026#34;\u0026#34; ...i type=\u0026#34;Q\u0026#34; d q ....;Q|1|^^0/*************/1/5527/5/R1/R||||||||||A\u0026#34;_$c(13)_\u0026#34; ....s temstr=$p(rec,\u0026#34;|\u0026#34;,3) ....s temlabno=$p(temstr,\u0026#34;^\u0026#34;,3) ....;s temlabno=$tr($P(temstr,\u0026#34;/\u0026#34;,2),\u0026#34;*\u0026#34;) ....;i \u0026#39;$l(temlabno) q ....;s racksid=$tr($p(temstr,\u0026#34;/\u0026#34;,4),\u0026#34; \u0026#34;) ....;s rackno=$tr($p(temstr,\u0026#34;/\u0026#34;,5),\u0026#34; \u0026#34;) ....;S temlabno=$tr(temlabno,\u0026#34; \u0026#34;) ....;s temlabno=$tr($P(temstr,\u0026#34;/\u0026#34;,2),\u0026#34;*\u0026#34;) ....;i \u0026#39;$l(temlabno) q ....s racksid=$p(temstr,\u0026#34;^\u0026#34;,5) ....s rackno=$p(temstr,\u0026#34;^\u0026#34;,6) ....s ^TMP($zn,$j,\u0026#34;temlabnoInfo\u0026#34;,temlabno)=$p(temstr,\u0026#34;^\u0026#34;,4,9) ....d Trace^MI.MIF000(mi,temlabno,\u0026#34;temlabno\u0026#34;) ....;s temlabno=9000001621 ....i \u0026#39;$l(temlabno) q ....s ^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,temlabno)=racksid_\u0026#34;^\u0026#34;_rackno ...//------------------------------------ ...i type=\u0026#34;O\u0026#34; d q ....s epis=$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,2),\u0026#34; \u0026#34;) ....if epis=\u0026#34;\u0026#34; s epis=+$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ....s qcid=$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,2),\u0026#34; \u0026#34;) ....s qcid=$tr(qcid,\u0026#34;-\u0026#34;) ....s QCStat=$tr($p(rec,\u0026#34;|\u0026#34;,4),\u0026#34; \u0026#34;) ....s SpecStat=$tr($p(rec,\u0026#34;|\u0026#34;,6),\u0026#34; \u0026#34;) ....i SpecStat=\u0026#34;S\u0026#34; s epis=epis //s epis=\u0026#34;E\u0026#34;_epis ....i QCStat=\u0026#34;Q\u0026#34; s QC=\u0026#34;\\\u0026#34;_qcid,epis=qcid ....;s QC=$$findQC^MIF000(mi,epis) ....s datex=$p(rec,\u0026#34;|\u0026#34;,23) ....//s date=$e(datex,5,6)_\u0026#34;/\u0026#34;_$e(datex,7,8)_\u0026#34;/\u0026#34;_$e(datex,1,4) ;,date=$$intdate^SSUTIL4(date) ....//s time=$e(datex,9,10)_\u0026#34;:\u0026#34;_$e(datex,11,12)_\u0026#34;:\u0026#34;_$e(datex,13,14) ;,time=$$inttime^SSUTIL4(time1) ...//-------------------- ...i type=\u0026#34;R\u0026#34; d q ....s code=$tr($p($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,4),\u0026#34;/\u0026#34;,1),\u0026#34; \u0026#34;) ....s mid1=$p(rec,\u0026#34;|\u0026#34;,14) ....//DaiYi 20111226 ....If mid1=\u0026#34;ISE1\u0026#34; Set mid1=\u0026#34;\u0026#34; ....;If mid1=\u0026#34;D1\u0026#34; Set mid1=\u0026#34;\u0026#34; ....;If mid1\u0026#39;=\u0026#34;\u0026#34;,QC\u0026#39;=\u0026#34;\u0026#34; Set QC=$$findQC^MIF000(mi,epis_mid1) ....;If mid1\u0026#39;=\u0026#34;\u0026#34;,QC\u0026#39;=\u0026#34;\u0026#34; Set epis=epis_mid1 ....If mid1\u0026#39;=\u0026#34;\u0026#34; s mid=mid1 ....s res=$p(rec,\u0026#34;|\u0026#34;,4) ...i type=\u0026#34;C\u0026#34; d q ....//-----FLAG---DaiYi 2010-07-12 ....s resFlag=$p(rec,\u0026#34;|\u0026#34;,4) ....If resFlag=0 Set resFlag=\u0026#34;\u0026#34; ....If resFlag=26 Set resFlag=\u0026#34;$\u0026#34; ....If resFlag=5 Set resFlag=\u0026#34;Z\u0026#34; ....If resFlag=43 Set resFlag=\u0026#34;!\u0026#34; ....If resFlag=1 Set resFlag=\u0026#34;A\u0026#34; ....If resFlag=2 Set resFlag=\u0026#34;Q\u0026#34; ....If resFlag=3 Set resFlag=\u0026#34;V\u0026#34; ....If resFlag=4 Set resFlag=\u0026#34;T\u0026#34; ....If resFlag=6 Set resFlag=\u0026#34;P\u0026#34; ....If resFlag=7 Set resFlag=\u0026#34;I\u0026#34; ....If resFlag=8 Set resFlag=\u0026#34;J\u0026#34; ....If resFlag=9 Set resFlag=\u0026#34;K\u0026#34; ....If resFlag=10 Set resFlag=\u0026#34;W\u0026#34; ....If resFlag=11 Set resFlag=\u0026#34;F\u0026#34; ....If resFlag=12 Set resFlag=\u0026#34;H\u0026#34; ....If resFlag=13 Set resFlag=\u0026#34;U\u0026#34; ....If resFlag=14 Set resFlag=\u0026#34;S\u0026#34; ....If resFlag=15 Set resFlag=\u0026#34;Y\u0026#34; ....If resFlag=16 Set resFlag=\u0026#34;G\u0026#34; ....If resFlag=17 Set resFlag=\u0026#34;B\u0026#34; ....If resFlag=18 Set resFlag=\u0026#34;N\u0026#34; ....If resFlag=19 Set resFlag=\u0026#34;L\u0026#34; ....If resFlag=20 Set resFlag=\u0026#34;E\u0026#34; ....If resFlag=21 Set resFlag=\u0026#34;R\u0026#34; ....If resFlag=22 Set resFlag=\u0026#34;D\u0026#34; ....If resFlag=23 Set resFlag=\u0026#34;\u0026amp;\u0026#34; ....If resFlag=24 Set resFlag=\u0026#34;Z\u0026#34; ....If resFlag=25 Set resFlag=\u0026#34;M\u0026#34; ....If resFlag=27 Set resFlag=\u0026#34;$\u0026#34; ....If resFlag=28 Set resFlag=\u0026#34;@\u0026#34; ....If resFlag=29 Set resFlag=\u0026#34;#\u0026#34; ....If resFlag=30 Set resFlag=\u0026#34;#\u0026#34; ....If resFlag=31 Set resFlag=\u0026#34;#\u0026#34; ....If resFlag=32 Set resFlag=\u0026#34;#\u0026#34; ....If resFlag=33 Set resFlag=\u0026#34;#\u0026#34; ....If resFlag=34 Set resFlag=\u0026#34;#\u0026#34; ....If resFlag=35 Set resFlag=\u0026#34;+\u0026#34; ....If resFlag=36 Set resFlag=\u0026#34;+\u0026#34; ....If resFlag=37 Set resFlag=\u0026#34;%\u0026#34; ....If resFlag=38 Set resFlag=\u0026#34;O\u0026#34; ....If resFlag=39 Set resFlag=\u0026#34;X\u0026#34; ....If resFlag=42 Set resFlag=\u0026#34;\u0026#39;\u0026#34; ....If resFlag=43 Set resFlag=\u0026#34;!\u0026#34; ....If resFlag=44 Set resFlag=\u0026#34;=\u0026#34; ....If resFlag=45 Set resFlag=\u0026#34;=\u0026#34; ....If resFlag=46 Set resFlag=\u0026#34;\u0026gt;\u0026#34; ....If resFlag=51 Set resFlag=\u0026#34;:\u0026#34; ....If resFlag=52 Set resFlag=\u0026#34;;\u0026#34; ....If resFlag=53 Set resFlag=\u0026#34;/\u0026#34; ....If resFlag=55 Set resFlag=\u0026#34;r\u0026#34; ....If resFlag=62 Set resFlag=\u0026#34;g\u0026#34; ....If resFlag=63 Set resFlag=\u0026#34;a\u0026#34; ....If resFlag=64 Set resFlag=\u0026#34;b\u0026#34; ....If resFlag=65 Set resFlag=\u0026#34;p\u0026#34; ....If resFlag=66 Set resFlag=\u0026#34;q\u0026#34; ....If resFlag=67 Set resFlag=\u0026#34;h\u0026#34; ....If resFlag=68 Set resFlag=\u0026#34;k\u0026#34; ....If resFlag=69 Set resFlag=\u0026#34;m\u0026#34; ....If resFlag=70 Set resFlag=\u0026#34;f\u0026#34; ....If resFlag=71 Set resFlag=\u0026#34;d\u0026#34; ....If resFlag=72 Set resFlag=\u0026#34;e\u0026#34; ....If resFlag=74 Set resFlag=\u0026#34;y\u0026#34; ....If resFlag=75 Set resFlag=\u0026#34;t\u0026#34; ....If resFlag=76 Set resFlag=\u0026#34;s\u0026#34; ....If resFlag=77 Set resFlag=\u0026#34;c\u0026#34; ....If resFlag=86 Set resFlag=\u0026#34;u\u0026#34; ....If resFlag=87 Set resFlag=\u0026#34;n\u0026#34; ....If resFlag=93 Set resFlag=\u0026#34;z\u0026#34; ....If resFlag=94 Set resFlag=\u0026#34;]\u0026#34; ....If resFlag=95 Set resFlag=\u0026#34;[\u0026#34; ....If resFlag=96 Set resFlag=\u0026#34;[\u0026#34; ....If resFlag=97 Set resFlag=\u0026#34;}\u0026#34; ....If resFlag=98 Set resFlag=\u0026#34;v\u0026#34; ....If resFlag=99 Set resFlag=\u0026#34;w\u0026#34; ....If resFlag=100 Set resFlag=\u0026#34;\u0026lt;\u0026#34; ....If resFlag=101 Set resFlag=\u0026#34;￥\u0026#34; ....;s result=result_code_ResultDeli_res_$c(92,92,92)_resFlag_$c(44) ....s result=result_code_ResultDeli_res_ItemDeli ....//------------------------------------------------ ...i type=\u0026#34;L\u0026#34; d Last q q Last\t; file result if exist s AllRecord=\u0026#34;\u0026#34; d BUILD d Trace^MI.MIF000(mi,mi,\u0026#34;1H\u0026lt;--M\u0026#34;) d Trace^MI.MIF000(mi,result,\u0026#34;1H\u0026lt;--M\u0026#34;) //s epis=9775 i $l(epis),$l(result) d Save^MI.MIF000(mi,epis,result,date,time,QC) s (epis,result,date,time,QC)=\u0026#34;\u0026#34; q BUILD i \u0026#39;$d(^TMP($zn)) q i \u0026#39;$d(^TMP($zn,$j)) q s labno=\u0026#34;\u0026#34; f s labno=$o(^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,labno)) q:labno=\u0026#34;\u0026#34; d .;根据预置条码号取得检验条码号 .;s ^aai200(763,labno)=\u0026#34;\u0026#34; .//s labno1=$$GetLabNo^CHDhcLabDoEpis(labno) .//s ^aai200(764,labno)=labno1_\u0026#34;,\u0026#34;_labno_\u0026#34;,\u0026#34;_mi .//----判断日志条码和系统条码是否一样---- .//If labno=labno1 Quit .//-------------------------------------- .d ScanOne^MI.MIF000(mi,labno) .s tcx=\u0026#34;\u0026#34; .s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) q:chl=\u0026#34;\u0026#34; d ..s tcx=tcx_\u0026#34;^^^\u0026#34;_$p(chl,\u0026#34;_\u0026#34;,1)_\u0026#34;^\\\u0026#34; .s tcx=$e(tcx,1,$l(tcx)-1) .;s xx=$$extdate2^SSUTIL4($h),date=$p(xx,\u0026#34;/\u0026#34;,3)_$p(xx,\u0026#34;/\u0026#34;,2)_$p(xx,\u0026#34;/\u0026#34;,1) .;s xx=$$exttime^SSUTIL4($p($h,\u0026#34;,\u0026#34;,2)),time=$p(xx,\u0026#34;:\u0026#34;,1)_$p(xx,\u0026#34;:\u0026#34;,2)_\u0026#34;00\u0026#34; .s temepis=\u0026#34;\u0026#34; .s str=\u0026#34;1H|\\^\u0026amp;|||host^1|||||LST008AS|TSDWN^REPLY|P|1\u0026#34;_cr .//s str=str_\u0026#34;P|1|||||||M||||||48^Y\u0026#34;_cr .s str=str_\u0026#34;P|1|||||||||||||\u0026#34;_cr .s samtype=\u0026#34;1\u0026#34; .s racksid=$p(^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,labno),\u0026#34;^\u0026#34;,1) .;s rackno=$p(^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,labno),\u0026#34;^\u0026#34;,2) .s temlabnoInfo=^TMP($zn,$j,\u0026#34;temlabnoInfo\u0026#34;,labno) .i labno=\u0026#34;N\u0026#34; s labno=\u0026#34;\u0026#34; .;d SetTSMachine(mi,labno,racksid,rackno) .s str=str_\u0026#34;O|1|\u0026#34;_labno_\u0026#34;|\u0026#34;_temlabnoInfo_\u0026#34;|\u0026#34; .s str=str_tcx_\u0026#34;|R||\u0026#34;_$tr($tr($zdt($h,8),\u0026#34; \u0026#34;),\u0026#34;:\u0026#34;)_\u0026#34;||||A||||1||||||||||O\u0026#34;_cr .;s str=str_\u0026#34;O|1|40045259602|0^00001^1^^S1^SC|^^^601^\\^^^1011^dec\\1012^400|R||20000630131236||||A||||1||||||||||O\u0026#34;_cr .s str=str_\u0026#34;C|1|I|comment1^comment2^comment3^comment4^comment5|G\u0026#34;_cr .s str=str_\u0026#34;L|1|N\u0026#34;_cr .d Send(labno,str) .k ^TMP($zn,$j,\u0026#34;ENQ\u0026#34;) .k ^TMP($zn,$j,\u0026#34;temlabnoInfo\u0026#34;) q //读取自动上传的标本 BUILD2 K ^TMP($zn,$j) s LabnoList=\u0026#34;\u0026#34; S AddDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s ^TMP(\u0026#34;MI\u0026#34;,1)=AddDate s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d .s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime,\u0026#34;\u0026#34;)) .s Labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) .//H 1 //每隔2S处理一个标本上传 .S SIMAck=$$BUILD3() .I SIMAck=0 D ..s err=##Class(MI.MachineUpload).SetSendFlag(mi,Labno,\u0026#34;S\u0026#34;,\u0026#34;\u0026#34;) //成功 .E D ..s err=##Class(MI.MachineUpload).SetSendFlag(mi,Labno,\u0026#34;F\u0026#34;,\u0026#34;\u0026#34;) //失败 q BUILD3() ; S episx=Labno,Labno=$P(Labno,\u0026#34;-\u0026#34;,1),suffix=\u0026#34;\u0026#34;,RetAck=1 s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q 1 s WorkGPMiDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR, \u0026#34;\u0026#34;)) i WorkGPMiDR=\u0026#34;\u0026#34; q 1 s RptOrder=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR, WorkGPMiDR,\u0026#34;\u0026#34;)) i RptOrder=\u0026#34;\u0026#34; q 1 s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR, WorkGPMiDR,RptOrder,\u0026#34;\u0026#34;)) i ReportDR=\u0026#34;\u0026#34; q 1 s EpisodeNo=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),8) i EpisodeNo=\u0026#34;\u0026#34; q 1 s epis=EpisodeNo d ScanOne^MI.MIF000(mi,Labno) ;创建上传化验项目列表 i \u0026#39;$D(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,Labno)) q 1 s tcx=\u0026#34;\u0026#34; s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,Labno,chl)) q:chl=\u0026#34;\u0026#34; d ..s tcx=tcx_\u0026#34;^^^\u0026#34;_$p(chl,\u0026#34;_\u0026#34;,1)_\u0026#34;/\\\u0026#34; s tcx=$e(tcx,1,$l(tcx)-1) s date=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s time=$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;) s str=\u0026#34;1H|\\^\u0026amp;|||H7600^1|||||host|TSDWN^REPLY|P|1\u0026#34;_cr s str=str_\u0026#34;P|1\u0026#34;_cr s str=str_\u0026#34;O|1|\u0026#34;_epis_\u0026#34;^^1^^|R1|\u0026#34; s str=str_tcx_\u0026#34;|R||\u0026#34;_date_time_\u0026#34;||||N||||||||^^^^||||||O\u0026#34;_cr s str=str_\u0026#34;L|1|N\u0026#34;_cr d Send(epis,str) Q 0 //给检验号赋仪器和位置号 SetTSMachine(mi,labno,rack,pos) n (mi,labno,rack,pos) s mi=$g(mi),labno=$g(labno),rack=$g(rack),pos=$g(pos) If $Data(^DHCSndLabNo(labno)) Set ^DHCSndLabNo(labno)=labno_\u0026#34;\\\u0026#34;_rack_\u0026#34;-\u0026#34;_pos_\u0026#34;\\\u0026#34; q ORDER ; create list of orders if exists ; ^DHCMIFLoadList(mi,\u0026#34;PEND\u0026#34;,flowno) 暂时存储上传医嘱列表 s ord=\u0026#34;\u0026#34; f s ord=$o(^DHCMIFLoadList(mi,\u0026#34;PEND\u0026#34;,ord)) q:ord=\u0026#34;\u0026#34; d .s rectemp=$g(^DHCMIFLoadList(mi,\u0026#34;PEND\u0026#34;,ord)) .s epis=ord .s (str,tcs,date,time)=\u0026#34;\u0026#34; .;化验项目列表 .f i=1:1:$l(rectemp,\u0026#34;,\u0026#34;) d ..s tc=$p(rectemp,\u0026#34;,\u0026#34;,i) ..q:tc=\u0026#34;\u0026#34; ..s tcs=tcs_\u0026#34;^^^\u0026#34;_tc_\u0026#34;/\\\u0026#34; .s tcs=$e(tcs,1,$l(tcs)-1) .;日期时间 .s date=$p($h,\u0026#34;/\u0026#34;,3)_$p($h,\u0026#34;/\u0026#34;,2)_$p($h,\u0026#34;/\u0026#34;,1) .s xx=$p($h,\u0026#34;,\u0026#34;,2),time=$p(xx,\u0026#34;:\u0026#34;,1)_$p(xx,\u0026#34;:\u0026#34;,2)_\u0026#34;00\u0026#34; .;s xx=$$extdate2^SSUTIL4($h),date=$p(xx,\u0026#34;/\u0026#34;,3)_$p(xx,\u0026#34;/\u0026#34;,2)_$p(xx,\u0026#34;/\u0026#34;,1) .;s xx=$$exttime^SSUTIL4($p($h,\u0026#34;,\u0026#34;,2)),time=$p(xx,\u0026#34;:\u0026#34;,1)_$p(xx,\u0026#34;:\u0026#34;,2)_\u0026#34;00\u0026#34; .s str=\u0026#34;1H|\\^\u0026amp;|||HOST^1|||||1-99999|TSDWN^REPLY|P|1\u0026#34;_cr .s str=str_\u0026#34;P|1\u0026#34;_cr .s str=str_\u0026#34;O|1|\u0026#34;_epis_\u0026#34;^ ^1^^|R1|\u0026#34; .s str=str_tcs_\u0026#34;|R||\u0026#34;_date_time_\u0026#34;||||N||||||||^^^^||||||O\u0026#34;_cr .s str=str_\u0026#34;L|1|N\u0026#34;_cr .d Send(epis,str) .s ^DHCMIFLoadList(mi,\u0026#34;TRAN\u0026#34;,epis)=$g(^DHCMIFLoadList(mi,\u0026#34;PEND\u0026#34;,epis)) ;保存已传输数据 .k ^DHCMIFLoadList(mi,\u0026#34;PEND\u0026#34;,epis) ;删除待传输数据 q Send(epis,str) ; send list of orders if exists h 0.5 ;w enq,*-3 d trace^MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) w enq,*-3 d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;1H\u0026lt;--M\u0026#34;) i $c(R)=enq q i $c(R)\u0026#39;=ack w eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q i $l(str)\u0026gt;240 d .s str1=$e(str,1,240) .s ret=$$SEND(str1,1) .s strS=$e(str,241,$l(str)) .i $l(strS)\u0026gt;240 d ..s str2=\u0026#34;2\u0026#34;_$e(strS,1,240) ..s ret=$$SEND(str2,1) ..s strS1=$e(strS,241,$l(strS)) ..i $l(strS1)\u0026gt;240 d ...s str3=\u0026#34;3\u0026#34;_$e(strS1,1,240) ...s ret=$$SEND(str3,1) ...s str4=\u0026#34;4\u0026#34;_$e(strS1,241,$l(strS1)) ...s ret=$$SEND(str4,0) ..e d ...s str3=\u0026#34;3\u0026#34;_$e(strS1,241,$l(strS1)) ...s ret=$$SEND(str3,0) .e d ..s str2=\u0026#34;2\u0026#34;_$e(str,241,$l(str)) ..s ret=$$SEND(str2,0) e d .s ret=$$SEND(str,0) ;f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q ;d trace^MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;2H\u0026lt;--M\u0026#34;) w eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q Sendold(epis,str) ; send list of orders if exists w enq,*-3 d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;1H\u0026lt;--M\u0026#34;) i $c(R)=enq q i $c(R)\u0026#39;=ack w eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q i $l(str)\u0026gt;241 d .s str1=$e(str,1,241) .s ret=$$SEND(str1,1) .s str2=\u0026#34;2\u0026#34;_$e(str,242,$l(str)) .s ret=$$SEND(str2,0) e d .s ret=$$SEND(str,0) w eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q SEND(str,flag) ; send string to instrument i flag=1 d .s str=str_etb .s chsum=$$CHSUM(str) e d .s str=str_etx .s chsum=$$CHSUM(str) w stx,str,chsum,cr,lf,*-3 d Trace^MI.MIF000(mi,str_chsum,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:6 r *R:1 i ($c(R)=ack)!($c(R)=eot) q i $c(R)=ack d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) q 0 i $c(R)=eot d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) q 0 i $c(R)=-1 w nak,*-3 d Trace^MI.MIF000(mi,R,\u0026#34;H\u0026lt;--M\u0026#34;) q 1 CHSUM(x) ; calculate check sum n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y) s z=$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#256\\16+1)_$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#16+1) q z ACK ; send \u0026#39;ack\u0026#39; to instrument w ack,*-3 d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q NEXTTRAY(tray) q tray 通过收到 ACK 发送多条数据 示例接口(贝克曼 DXH900) 标准的 ASTM 发送等收到 ACK 后继续回传下一条信息\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 MIFDXH800I(MachID) s MachID=$g(MachID) S ^TMPMACH10(MachID,104)=$H i \u0026#39;$l(MachID) q s ItemDeli=$li(^dbo.BTMIMachineParameterD(MachID),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(MachID),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(MachID),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(MachID),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(MachID),17) //端口号 //控制字符 s stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4),lf=$c(10),cr=$c(13),nak=$c(21) //s stx=\u0026#34;[\u0026#34;,etx=\u0026#34;]\u0026#34; S ^TMPMACH10(MachID,102)=$H i $$Start^MI.MIF000(MachID) q f d Main i $$Stop^MI.MIF000(MachID) q c Port q ///结果采集和数据分解 Main r *R:10 e d q .d ORDER i $c(R)\u0026#39;=enq q d Trace^MI.MIF000(MachID,\u0026#34;ENQ\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) d ACK s (Epis,Result,Date,Time,QC)=\u0026#34;\u0026#34; f r *R:10 q:$c(R)=eot q:R=-1 d .i $c(R)\u0026#39;=stx q .s Record=$$Read^MI.MIF000(MachID,\u0026#34;\u0026#34;,lf) q:\u0026#39;$l(Record) .d Trace^MI.MIF000(MachID,Record,\u0026#34;H\u0026lt;--M\u0026#34;) .d ACK .i $e(Record,2)=\u0026#34;C\u0026#34; d q ..//报警信息 ..s PoliceInfo=$p(Record,\u0026#34;|\u0026#34;,4) ..i $l(PoliceInfo),$d(^LISPolice(\u0026#34;DXH900\u0026#34;,PoliceInfo)) d ...s InputInfo=$g(^LISPolice(\u0026#34;DXH900\u0026#34;,PoliceInfo)) ...d Trace^MI.MIF000(MachID,PoliceInfo_\u0026#34;$$\u0026#34;_InputInfo,\u0026#34;报警信息\u0026#34;) ...try{s ret=##Class(MI.Special.Common).SaveAlarmInformation(MachID,Epis,InputInfo)}catch{} .i $e(Record,2)=\u0026#34;Q\u0026#34; d q ..//询问信息 ..s QEpis=$tr($p(Record,\u0026#34;|\u0026#34;,3),\u0026#34;!\u0026#34;) ..;d Trace^MI.MIF000(MachID,QEpis,\u0026#34;QEpis\u0026#34;) ..S ^TMPQUERY(MachID,1)=QEpis ..i $l(QEpis) s ^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,QEpis)=\u0026#34;\u0026#34; .i $e(Record,2)=\u0026#34;H\u0026#34; d q ..//结果头信息 ..d Last s (Epis,Result,Date,Time,QC)=\u0026#34;\u0026#34; .i $e(Record,2)=\u0026#34;P\u0026#34; d q ..//病人信息 .i $e(Record,2)=\u0026#34;O\u0026#34; d q ..s Epis=$tr($p($p(Record,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ..s QC=$tr($p(Record,\u0026#34;|\u0026#34;,12),\u0026#34; \u0026#34;) ..s:\u0026#39;$l(Epis) Epis=$tr($p($p(Record,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ..//判断是否是质控编号 ..//s QC=$$findQC^MIF000(mi,epis) .i $e(Record,2)=\u0026#34;R\u0026#34; d q ..//结果信息 ..s Chl=$tr($tr($p($p(Record,\u0026#34;|\u0026#34;,3),\u0026#34;!\u0026#34;,4),\u0026#34; \u0026#34;),\u0026#34;@\u0026#34;) ..//s ResStus=$tr($p($p(Record,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,11),\u0026#34; \u0026#34;) ..s Res=$p($tr($p(Record,\u0026#34;|\u0026#34;,4),\u0026#34; \u0026#34;),\u0026#34;!\u0026#34;,1) ..//i ResStus\u0026#39;=\u0026#34;F\u0026#34; q //判断结果状态 ..i $l(Chl),$l(Res) s Result=Result_Chl_ResultDeli_Res_ItemDeli .//绘图 .i $e(Record,2)=\u0026#34;M\u0026#34; d q ..//结果信息 ..s Chl=$tr($p($p(Record,\u0026#34;|\u0026#34;,3),\u0026#34;!\u0026#34;,4),\u0026#34; \u0026#34;) ..s Res=$P($tr($p(Record,\u0026#34;|\u0026#34;,4),\u0026#34; |\u0026#34;),\u0026#34;!\u0026#34;,1) ..s Chl=$p(Chl,\u0026#34;.\u0026#34;,1) ..i Chl=\u0026#34;WBC\u0026#34; d ...s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() ...s tret=tretObj.DrawImage(Epis,Res,MachID,\u0026#34;MI.MIFDXH800\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#WBCF.bmp#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.ImageDealDXH800,LIS.Mach.ImageDeal\u0026#34;) ...d Trace^MI.MIF000(MachID,tret,\u0026#34;绘图返回\u0026#34;) ..i Chl=\u0026#34;Plt\u0026#34; d ...s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() ...s tret=tretObj.DrawImage(Epis,Res,MachID,\u0026#34;MI.MIFDXH800\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#PLT.bmp#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.ImageDealDXH800,LIS.Mach.ImageDeal\u0026#34;) ...d Trace^MI.MIF000(MachID,tret,\u0026#34;绘图返回\u0026#34;) ..i Chl=\u0026#34;RBC\u0026#34; d ...s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() ...s tret=tretObj.DrawImage(Epis,Res,MachID,\u0026#34;MI.MIFDXH800\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;Histogram#RBCH.bmp#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.ImageDealDXH800,LIS.Mach.ImageDeal\u0026#34;) ...d Trace^MI.MIF000(MachID,tret,\u0026#34;绘图返回\u0026#34;) ..i Chl=\u0026#34;5PD1\u0026#34; d ...s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() ...s tret=tretObj.DrawImage(Epis,Res,MachID,\u0026#34;MI.MIFDXH800\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#5PD1.bmp#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.ImageDealDXH800,LIS.Mach.ImageDeal\u0026#34;) ...d Trace^MI.MIF000(MachID,tret,\u0026#34;绘图返回\u0026#34;) ..i Chl=\u0026#34;NRBC1\u0026#34; d ...s tretObj=##Class(wbsLisMsgAsyncHandler.LISMsg.wbsLisDrawImageAsyncHandlerSoap).%New() ...s tret=tretObj.DrawImage(Epis,Res,MachID,\u0026#34;MI.MIFDXH800\u0026#34;,\u0026#34;-1\u0026#34;,\u0026#34;DiffPlot#NRBC1.bmp#######10#10#320#138\u0026#34;,\u0026#34;LIS.Mach.ImageDeal.ImageDealDXH800,LIS.Mach.ImageDeal\u0026#34;) ...d Trace^MI.MIF000(MachID,tret,\u0026#34;绘图返回\u0026#34;) .i $e(Record,2)=\u0026#34;L\u0026#34; d Last q d Trace^MI.MIF000(MachID,$s($c(R)=eot:\u0026#34;EOT\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) d ORDER q ///保存结果 Last ; file result if exist i $l(Epis),$l(Result) d Save^MI.MIF000(MachID,Epis,Result,Date,Time,QC) q ///上传项目 ORDER s date=$tr($zdt($p($h,\u0026#34;,\u0026#34;,1),3),\u0026#34;-\u0026#34;)_$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;) s ^TMPQUERY(MachID,2)=$d(^TMP($zn,$j)) i \u0026#39;$d(^TMP($zn,$j)) q ;d Trace^MI.MIF000(MachID,\u0026#34;准备上传,清除缓存\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) k ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,MachID) k ^TMPQUERY(MachID,4) s Epis=\u0026#34;\u0026#34; f s Epis=$o(^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,Epis)) q:Epis=\u0026#34;\u0026#34; d .d ScanOne^MI.MIF000(MachID,Epis) .;d PATDET(Epis) .s LSH=\u0026#34;\u0026#34; .s LSH=$$CHANGEEPIS(MachID,Epis) .d Trace^MI.MIF000(MachID,Epis,\u0026#34;Epis\u0026#34;) .s TCx=\u0026#34;\u0026#34;,Episx=Epis .s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,MachID,Epis,chl)) q:chl=\u0026#34;\u0026#34; d ..s TCx=TCx_\u0026#34;!!!\u0026#34;_chl .;s TCx=TCx_\u0026#34;\\\u0026#34; .i TCx[\u0026#34;CDR\u0026#34; s TCx=\u0026#34;!!!CDR\u0026#34; .s sam=\u0026#34;Sam\u0026#34; .s pat=\u0026#34;219!King!Eric!T\u0026#34; .s F=\u0026#34;F\u0026#34; .s FA=\u0026#34;Fairview!952-121-1123\u0026#34; .s ^TMPQUERY(MachID,3)=TCx .i $l(TCx) d ..s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;H|\\!~|||LISHOST|||||||P|LIS2-A|\u0026#34;_date ..s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;P|1||\u0026#34;_LSH ..;s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;O|1|\u0026#34;_Episx_\u0026#34;|\u0026#34;_Pos_\u0026#34;|\u0026#34;_tcx_\u0026#34;|R||||||A||||Whole blood|||||||||||\u0026#34; ..;s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;O|1|\u0026#34;_Episx_\u0026#34;||\u0026#34;_TCx_\u0026#34;|R|\u0026#34;_date_\u0026#34;|\u0026#34;_date_\u0026#34;|||\u0026#34;_sam_\u0026#34;|A||||Whole blood|\u0026#34;_pat_\u0026#34;|||||||||\u0026#34;_F_\u0026#34;||\u0026#34;_FA ..s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;O|1|\u0026#34;_Episx_\u0026#34;||\u0026#34;_TCx_\u0026#34;|R|\u0026#34;_date_\u0026#34;|\u0026#34;_date_\u0026#34;|||\u0026#34;_sam_\u0026#34;|A||||Whole blood\u0026#34; ..s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;L|1|N\u0026#34; .e d ..s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;Q|1|^\u0026#34;_Epis_\u0026#34;||^^^ALL||||||||X\u0026#34; k ^TMP($zn,$j,\u0026#34;ENQ\u0026#34;) k ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,MachID) q:\u0026#39;$d(^TMPTMIF(MachID,22)) m ^TMPQUERY(MachID,4)=^TMPTMIF(MachID,22) d Send k ^TMPTMIF(MachID,22) q ///病人基本信息 PATDET(Epis) ; set patient details record s line=$o(^TMPTMIF(MachID,22,\u0026#34;\u0026#34;),-1)+1,^TMPTMIF(MachID,22,line)=\u0026#34;P|1|\u0026#34;_+$h_\u0026#34;||||||U||||||||||||||||||||||||||\u0026#34; q ///发送检测项目 Send w enq,*-3 d Trace^MI.MIF000(MachID,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q d Trace^MI.MIF000(MachID,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) i $c(R)=enq q i $c(R)\u0026#39;=ack w eot,*-3 d Trace^MI.MIF000(MachID,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q //q:$$SEND(\u0026#34;1H|\\^\u0026amp;\u0026#34;) ;q:$$SEND(\u0026#34;1H|\\^\u0026amp;|||LIS||||||||LIS2-A|\u0026#34;_date) s x=\u0026#34;\u0026#34; f FRAME=1:1 s x=$O(^TMPQUERY(MachID,4,x)) q:x=\u0026#34;\u0026#34; q:$$SEND(FRAME#8_^TMPQUERY(MachID,4,x)) w eot,*-3 d Trace^MI.MIF000(MachID,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) k ^TMPTMIF(MachID,22) q ///发送字符串 SEND(str) s str=str_cr_etx,chsum=$$CHSUM(str) w stx,str,chsum,cr,lf,*-3 d Trace^MI.MIF000(MachID,str_chsum,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:6 r *R:1 i ($c(R)=ack)!($c(R)=eot) q i $c(R)=ack d Trace^MI.MIF000(MachID,\u0026#34;ACK\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) q 0 i $c(R)=eot d Trace^MI.MIF000(MachID,\u0026#34;EOT\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) q 0 d Trace^MI.MIF000(MachID,R,\u0026#34;H\u0026lt;--M\u0026#34;) q 1 ///生成校验码 CHSUM(x) n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y) s z=$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#256\\16+1)_$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#16+1) q z ///发送回应符到仪器 ACK w ack,*-3 d Trace^MI.MIF000(MachID,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q CHANGEEPIS(mi,epis) //根据流水号找检测号 S DATA=$zd($h,8) s mi=$g(mi),epis=$g(epis) s VisitNumberReportDR=\u0026#34;\u0026#34; b ;//^dbo.RPVisitNumberReportI(\u0026#34;IndexEpisodeNo\u0026#34;,TransmitDate, WorkGroupMachineDR, EpisodeNo) i \u0026#39;$l(mi) q epis i \u0026#39;$l(epis) q epis s WorkGroupMachineDR=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) i \u0026#39;$l(WorkGroupMachineDR) q epis s VisitNumberReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAcceptDate\u0026#34;,WorkGroupMachineDR,DATA,\u0026#34; \u0026#34;_epis,\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberReportDR) q epis s LSH=$lg($g(^dbo.RPVisitNumberReportD(VisitNumberReportDR)),8) i \u0026#39;$l(LSH) q epis B ;LSH Q LSH //// w $$GetName^MI.MIFBECKImage(70,3003497773) //// 取病人姓名按拼音输出,\u0026#34;^\u0026#34;分隔 GetName(MachID,epis) s epis = $g(epis),MachID=$g(MachID) s SurName=\u0026#34;\u0026#34; i $l(epis)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(epis),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s SurName=$lg(RPVisitNumberData,13) i SurName\u0026#39;=\u0026#34;\u0026#34; s SurName=$$GetCNCODE(SurName,3,\u0026#34;^\u0026#34;) q SurName /// Description:返回汉字的编码信息 /// Input：\tHANZI:汉字 /// FLAG:返回何种编码(1:ASC码,2:汉字,3:拼音,4:首拼,5:四角码6:五笔码7:区位码8:笔划数9:郑码) /// SPLIT:分割符(可以为空) /// Output： /// 非0:返回编码信息:ASC码^汉字^拼音^首拼^四角码^五笔码^区位码^笔划数^郑码 /// 0：未找到编码信息 /// CreatDate:2011-06-08 /// w ##class(web.DHCINSUPort).GetCNCODE(\u0026#34;东华\u0026#34;,4,\u0026#34;^\u0026#34;) /// w ##class(web.DHCINSUPort).GetCNCODE(\u0026#34;东华\u0026#34;,4,\u0026#34;\u0026#34;) GetCNCODE(HANZIS,FLAG, SPLIT) s Rtnstr=\u0026#34;0\u0026#34; q:$g(HANZIS)=\u0026#34;\u0026#34; Rtnstr s Rtnstr=\u0026#34;\u0026#34; f i=1:1:$l(HANZIS) d .s HANZI=$EXTRACT(HANZIS,i) .s ASCIICODE=$ASCII(HANZI) .i $D(^DHCCharacterEncoding(\u0026#34;0\u0026#34;,\u0026#34;ASCII\u0026#34;,ASCIICODE))\u0026#39;=0 d ..s rowid=$o(^DHCCharacterEncoding(\u0026#34;0\u0026#34;,\u0026#34;ASCII\u0026#34;,ASCIICODE,\u0026#34;\u0026#34;)) ..s tmpstr=\u0026#34;\u0026#34; ..s:FLAG=\u0026#34;\u0026#34; tmpstr=$g(^DHCCharacterEncoding(rowid)) ..s:FLAG\u0026#39;=\u0026#34;\u0026#34; tmpstr=$p(^DHCCharacterEncoding(rowid),\u0026#34;^\u0026#34;,FLAG) ..i Rtnstr=\u0026#34;\u0026#34; d ...s Rtnstr=tmpstr ..e d ...s Rtnstr=Rtnstr_SPLIT_tmpstr .e d ..s:Rtnstr=\u0026#34;\u0026#34; Rtnstr=\u0026#34;?\u0026#34; ..s Rtnstr=Rtnstr_SPLIT_\u0026#34;?\u0026#34; q Rtnstr 通过文件请求双向 上机生成请求文件请求 示例代码(爱康 Aigel400) 仪器上机扫条码后生成请求文件，通过监听读取文件，解析数据后回传文件，此处需特殊解析设置。将仪器配置为主动上传模式，解析数据时，将主动上传信息从 C 变为 X，QryLabInfo 循环读取为 X 的标本，从而实现文件双向。\n双向比较特殊，需要配置两台仪器，一台用于接收，一台用于双向上传 */ /// [{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;Drect\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;3000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;D:\\\\OUTPUT\\\\\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFAigel400\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;.txt\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoMAll,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UpPara\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;MachID\u0026#34;:\u0026#34;41\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;Drect\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;3000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;D:\\\\Aigel400\\\\Data\\\\\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFAigel400\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;regexImport.dat\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoMAll,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;,\u0026#34;UpPara\u0026#34;:\u0026#34;D:\\\\Aigel400\\\\Data\\\\\u0026#34;}] Class MI.MIFAigel400 Extends %RegisteredObject { /// H|\\^\u0026amp;|||Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|||||||P|4|20230503095046[13][10]P|1|12|[13][10]O|1|12^^^^^^|69449292212011757621|^^^ABO/RhD血型定型试剂卡|R|20230503094655||||||||||||||||||Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|C|[13][10]R|1|^^^ABO/RhD血型定型试剂卡|-A=-^-B=4+^-D=3+^control=-^Ac=3+^Bc=-^B/Rh+|||N||F||A1|20230503091546|20230503094655|Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|[13][10]L|1|N[13][10] /// H|\\^\u0026amp;|||Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|||||||P|4|20230602161519[13][10]P|1|102|[13][10]O|1|102^^^^^^|69449292211011587452|^^^抗人球蛋白检测卡(抗筛)|R|20230602094910||||||||||||||||||Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|F|[13][10]R|1|^^^抗人球蛋白检测卡(抗筛)|IgG=-^C3d=-^Ctl=-^-|||N||F||A1|20230602091802|20230602094910|Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|[13][10]L|1|N[13][10] /// d ##class(MI.MIFAigel300).fileMTHD(28,\u0026#34;H|\\^\u0026amp;|||Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|||||||P|4|20230503095046[13][10]P|1|12|[13][10]O|1|12^^^^^^|69449292212011757621|^^^ABO/RhD血型定型试剂卡|R|20230503094655||||||||||||||||||Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|C|[13][10]R|1|^^^ABO/RhD血型定型试剂卡|-A=-^-B=4+^-D=3+^control=-^Ac=3+^Bc=-^B/Rh+|||N||F||A1|20230503091546|20230503094655|Across□Auto□System□OCTO-M^^1.00.25□(build17062603)|[13][10]L|1|N[13][10]\u0026#34;) ClassMethod fileMTHD(mi, record, epis, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q s (sample,epis,result,date,time,QC)=\u0026#34;\u0026#34; i \u0026#39;$l(record) q \u0026#34;\u0026#34; d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) i P3\u0026#39;[\u0026#34;Import\u0026#34; d Result e d Upload q \u0026#34;\u0026#34; Upload s AllEpis=\u0026#34;\u0026#34; f i=1:1:$l(record,\u0026#34;[13][10]\u0026#34;) d .s rec=$p(record,\u0026#34;[13][10]\u0026#34;,i) .s rtype=$e(rec,1) .i rtype=\u0026#34;H\u0026#34; d ..s ASTMH=rec ..d Trace^MI.MIF000(mi,ASTMH,\u0026#34;ASTMH\u0026#34;) ..s ^LISAigel400(\u0026#34;DATA\u0026#34;)=ASTMH .i rtype=\u0026#34;Q\u0026#34; d ..s epis=$p(rec,\u0026#34;|\u0026#34;,3) ..i \u0026#39;$l(AllEpis) s AllEpis=epis ..e s AllEpis=AllEpis_\u0026#34;^\u0026#34;_epis i $l(AllEpis) d .s ^LISAigel400(\u0026#34;Epis\u0026#34;,1)=AllEpis d Trace^MI.MIF000(mi,AllEpis,\u0026#34;AllEpis\u0026#34;) s ^LISAigel400(\u0026#34;OutFlag\u0026#34;)=1 ;d ##Class(MI.MachineUpload).SetSendFlag(mi,\u0026#34;9000000256\u0026#34;,\u0026#34;X\u0026#34;,\u0026#34;\u0026#34;) q \u0026#34;\u0026#34; Result f i=1:1:$l(record,\u0026#34;[13][10]\u0026#34;) d .s rec=$p(record,\u0026#34;[13][10]\u0026#34;,i) .s rtype=$e(rec,1) .i rtype=\u0026#34;O\u0026#34; d ..s epis=$P($P(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,1) .i rtype=\u0026#34;R\u0026#34; d ..s TestSet=$p($P(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,4) ..i TestSet[\u0026#34;ABO\u0026#34; d ...s allres=$p($P(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,9) ...s code1=\u0026#34;ABO\u0026#34; s res1=$P(allres,\u0026#34;/\u0026#34;,1)_\u0026#34;型\u0026#34; ...s code2=\u0026#34;Rh\u0026#34; s res2=$p(allres,\u0026#34;/\u0026#34;,2) ...i res2[\u0026#34;+\u0026#34; s res2=\u0026#34;阳性\u0026#34; ...i res2[\u0026#34;-\u0026#34; s res2=\u0026#34;阴性\u0026#34; ...s result=code1_\u0026#34;\\\u0026#34;_res1_\u0026#34;,\u0026#34;_code2_\u0026#34;\\\u0026#34;_res2_\u0026#34;,\u0026#34; ..i TestSet[\u0026#34;交叉配血\u0026#34; d ...s code1=\u0026#34;JCPX\u0026#34; s res1=$p($P(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,3) ...i res1=\u0026#34;+\u0026#34; s res1=\u0026#34;阳性\u0026#34; ...i res1=\u0026#34;-\u0026#34; s res1=\u0026#34;阴性\u0026#34; ...s result=code1_\u0026#34;\\\u0026#34;_res1_\u0026#34;,\u0026#34; ..i TestSet[\u0026#34;不规则抗体筛查\u0026#34; d ...s code1=\u0026#34;KRQDB\u0026#34; s res1=$p($P(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,3) ...i res1[\u0026#34;=\u0026#34; d ....s res1=$p(res1,\u0026#34;=\u0026#34;,2) ...i res1=\u0026#34;+\u0026#34; s res1=\u0026#34;阳性\u0026#34; ...i res1=\u0026#34;-\u0026#34; s res1=\u0026#34;阴性\u0026#34; ...s result=code1_\u0026#34;\\\u0026#34;_res1_\u0026#34;,\u0026#34; d Trace^MI.MIF000(mi,epis_\u0026#34;$$\u0026#34;_result,\u0026#34;AllResult\u0026lt;--M\u0026#34;) i $l(epis),$l(result) d ##Class(MI.Common.MIFBase).Save(mi, epis, result, date, time, QC) q \u0026#34;\u0026#34; } ClassMethod SaveImageMTHD(mi, epis, ImageClass, FileName, FullName, SaveImageRetName, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //通过OtherPara配置取图的在这里通过epis和ImageClass的图片名字提取出流水号和图片类别 s mi=$g(mi) s epis=$g(epis) s ImageClass=$g(ImageClass) s FileName=$g(FileName) s FullName=$g(FullName) s SaveImageRetName=$g(SaveImageRetName) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; d ##Class(MI.Common.MIFBase).Trace(mi,epis_\u0026#34;:\u0026#34;_ImageClass_\u0026#34;:\u0026#34;_FileName,\u0026#34;H\u0026lt;--M\u0026#34;) s (ReceiveDate, ImageOrder, Caption, DisplayRatio, Height, Width, Sequence)=\u0026#34;\u0026#34; //加上当前时间，防止浏览器缓存 s FileName=FileName_\u0026#34;?\u0026#34;_$p($h,\u0026#34;,\u0026#34;,2) //OtherPara用^分隔第四位指定SaveImageRetName的话在这里改FileName为新名称。同时让方法返回新图片名字 s NewFileName=\u0026#34;\u0026#34; i SaveImageRetName=\u0026#34;SaveImageRetName\u0026#34; d .//图片新名字 .s NewFileName=epis_\u0026#34;-\u0026#34;_ImageClass_\u0026#34;-\u0026#34; .//路径新名字 .s NewPathName=\u0026#34;\u0026#34; .s SPLen=$l(FileName,\u0026#34;/\u0026#34;) .f ii=1:1:SPLen d ..i ii\u0026lt;SPLen d ...s NewPathName=NewPathName_$p(FileName,\u0026#34;/\u0026#34;,ii)_\u0026#34;/\u0026#34; ..i ii=SPLen d ...s NewFileName=NewFileName_$p(FileName,\u0026#34;/\u0026#34;,ii) .s NewPathName=NewPathName_NewFileName .s FileName=NewPathName //最后返回NewFileName s ret=##Class(MI.Common.MachineResult).SaveImage(ReceiveDate, epis, ImageClass, ImageOrder, FileName, mi, Caption, DisplayRatio, Height, Width, Sequence) //返回值控制图片名称模式 i SaveImageRetName=\u0026#34;SaveImageRetName\u0026#34; d .s ret=NewFileName q ret } // w ##class(MI.XN9000).GetFtpMTHD(\u0026#34;7\u0026#34;) ClassMethod GetFtpMTHD(mi, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //文件服务模式必须改的地方，老的FTP模式这么改了也没问题，所以建议都这样 s mi=$g(mi) q ##Class(MI.Common.MIFBase).GetMiFtpPath(mi) } /// Creator： 查询患者信息，监听配置上传前处理类后会定时调用这个query查询数据进行上传操作 /// CreatDate： 20140919 /// Description:： /// Table： /// Input： mi：仪器主键 /// Output： 仪器信息 /// Return： 仪器信息 /// Others： Query QryLabInfo(mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Query(ROWSPEC = \u0026#34;labno,labnoInfo,patInfo\u0026#34;) { } /// Query的执行方法 /// d ##class(%ResultSet).RunQuery(\u0026#34;MI.MIFAigel400\u0026#34;,\u0026#34;QryLabInfo\u0026#34;,\u0026#34;41\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) ClassMethod QryLabInfoExecute(ByRef qHandle As %Binary, mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Status { Set repid=$i(^CacheTemp) Set ind=1 s mi=$g(mi),flag=$g(flag) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; s LabnoList=\u0026#34;\u0026#34; s VisitNumberDR=\u0026#34;\u0026#34; s AddDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s DeleteFlag=0 i $d(^LISAigel400(\u0026#34;Epis\u0026#34;,1)) d .s DeleteFlag=1 .b ;MiUploadDR .s labno=$g(^LISAigel400(\u0026#34;Epis\u0026#34;,1)) .;s EpisNo=$$getEpis^MI.MIF000(labno,mi) .;i \u0026#39;$l(EpisNo) q .i \u0026#39;$l(labno) q .//测试类型0：文本，1：数据库 .s TestType=\u0026#34;0\u0026#34; .i TestType=\u0026#34;0\u0026#34; d ..//文本双向上传开始****************************************************** ..//控制输出文本的内容 ..s txtInfo=..GetLabnoInfo(mi,labno) ..;s filename=\u0026#34;L\u0026#34;_$e($zd($p($h,\u0026#34;,\u0026#34;,1),8),3,8)_\u0026#34;_\u0026#34;_labno_\u0026#34;.txt\u0026#34; ..s filename=\u0026#34;Servers.dat\u0026#34; ..s labno1=$p(labno,\u0026#34;^\u0026#34;,1) ..s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo(filename,txtInfo,labno1,0,\u0026#34;\u0026#34;) ..d Trace^MI.MIF000(mi,txtInfo,\u0026#34;上传信息\u0026#34;) ..d OutputRow ..//文本双向上传结束****************************************************** i DeleteFlag=1 k ^LISAigel400(\u0026#34;Epis\u0026#34;,1) Set qHandle=$lb(0,repid,0) Quit $$$OK OutputRow Set ColFields=\u0026#34;labno,labnoInfo,patInfo\u0026#34; Set ^CacheTemp(repid,ind)=##Class(LIS.Util.Common).TransListNull(Data,ColFields) Set ind=ind+1 quit } ClassMethod QryLabInfoClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set repid=$LIST(qHandle,2) Kill ^CacheTemp(repid) Quit $$$OK } ClassMethod QryLabInfoFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set AtEnd=$LIST(qHandle,1) Set repid=$LIST(qHandle,2) Set ind=$LIST(qHandle,3) Set ind=$o(^CacheTemp(repid,ind)) If ind=\u0026#34;\u0026#34; { Set AtEnd=1 Set Row=\u0026#34;\u0026#34; } Else { Set Row=^CacheTemp(repid,ind) } s qHandle=$lb(AtEnd,repid,ind) Quit $$$OK } /// w ##Class(MI.MIFAigel400).GetLabnoInfo(41,\u0026#34;9000000256^9000000258\u0026#34;) ClassMethod GetLabnoInfo(mi, labno) As %String { s mi=$g(mi),labno=$g(labno) d Trace^MI.MIF000(mi,labno,\u0026#34;labno\u0026#34;) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; s tcx=\u0026#34;\u0026#34; s ASTMH=$g(^LISAigel400(\u0026#34;DATA\u0026#34;)) s (ASTMP,ASTMO,ASTMPO)=\u0026#34;\u0026#34; for i=1:1:$l(labno,\u0026#34;^\u0026#34;) d .s labnoi=$p(labno,\u0026#34;^\u0026#34;,i) .s ASTMP=\u0026#34;P|1|\u0026#34;_labnoi_\u0026#34;|\u0026#34; .s ASTMO=$$GetASTMO(mi,labnoi) .s ASTMPO=ASTMPO_ASTMP_\u0026#34;[13]\u0026#34;_ASTMO_\u0026#34;[13]\u0026#34; s ASTML=\u0026#34;L|1|N\u0026#34; i $l(ASTMP,ASTMO) d .s tcx=ASTMH_\u0026#34;[13]\u0026#34;_ASTMPO_ASTML q tcx GetASTMO(mi,VisitNumber) s patInfo=..GetPatInfo(mi,VisitNumber) s PatName=$p(patInfo,\u0026#34;,\u0026#34;,10) //获取项目通道号 d ScanOne^MI.MIF000(mi,VisitNumber) s ASTMO=\u0026#34;\u0026#34; s str=\u0026#34;\u0026#34; s Num=0 s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,VisitNumber,chl)) q:chl=\u0026#34;\u0026#34; d .s Num=Num+1 .s str=\u0026#34;O|\u0026#34;_Num_\u0026#34;|\u0026#34;_VisitNumber_\u0026#34;^\u0026#34;_PatName_\u0026#34;^^^^|||^^^^\u0026#34;_chl .i \u0026#39;$l(ASTMO) s ASTMO=str .e s ASTMO=ASTMO_\u0026#34;[13]\u0026#34;_str q ASTMO } /// w ##Class(MI.MIFKRD).GetLabnoInfo(22,\u0026#34;9000000253\u0026#34;) ClassMethod GetLabnoInfoBak(mi, labno) As %String { s OutFlag=$g(^LISAigel400(\u0026#34;OutFlag\u0026#34;)) s tcx=\u0026#34;\u0026#34; i OutFlag=1 d .s ASTMH=$g(^LISAigel400(\u0026#34;DATA\u0026#34;)) .s ASTMP=\u0026#34;P|1|001\u0026#34; .s ASTMO1=\u0026#34;O|1|001^测试^^^^|||^^^^ABO/RhD血型抗原检测卡\u0026#34; .s ASTMO2=\u0026#34;O|2|001^测试^^^^|||^^^^ABO正反定型及Rh(D/C/E)血型检测卡\u0026#34; .s ASTMO3=\u0026#34;O|3|001^测试^^^^|||^^^^抗人球蛋白检测卡(IgG+C3d)不规则抗体筛查\u0026#34; .s ASTMO4=\u0026#34;O|1|001^测试^^^^|||^^^^O|4|001^测试^^^^|||^^^^抗人球蛋白检测卡(抗IgG+C3d)交叉配血\u0026#34; .s ASTMO5=\u0026#34;O|1|001^测试^^^^|||^^^^Rh血型抗原检测卡\u0026#34; .s ASTML=\u0026#34;L|1|N\u0026#34; .s tcx=ASTMH_\u0026#34;[13]\u0026#34;_ASTMP_\u0026#34;[13]\u0026#34;_ASTMO1_\u0026#34;[13]\u0026#34;_ASTMO2_\u0026#34;[13]\u0026#34;_ASTMO3_\u0026#34;[13]\u0026#34;_ASTMO4_\u0026#34;[13]\u0026#34;_ASTMO5_\u0026#34;[13]\u0026#34;_ASTML q tcx s mi=$g(mi),labno=$g(labno) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; //获取项目通道号 d ScanOne^MI.MIF000(mi,labno) s tcx=\u0026#34;\u0026#34; s str=\u0026#34;\u0026#34; s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) q:chl=\u0026#34;\u0026#34; d .s str=str_chl_\u0026#34;[9]\u0026#34; s tcx=labno_\u0026#34;[9]\u0026#34;_str q tcx } /// w ##Class(MI.MIFLISMonitorTest).GetPatInfo(6,1001367) ClassMethod GetPatInfo(mi, labno) As %String { s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$lg(RPVisitNumberData,3) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),3) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$lg(RPVisitNumberData,28) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; s Patna=PatName ;病人姓名 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode q RetString } /// 监听做上传操作后调用改方法设置标本上传表状态 ClassMethod SaveSDFMTHD(mi, labno, epis, filename, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi),labno=$g(labno),epis = $g(epis),filename=$g(filename) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q s ret=##Class(MI.MachineUpload).SetSendFlag(mi,labno,\u0026#34;S\u0026#34;,filename) q } } 私有协议接口双向 类 ASTM 双向回复 ACK 示例接口(万泰 Wan200) W1N1111222222222222222200334S555555556666abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij 2 1141123\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 MIFCARIS200BI(mi) s mi=$g(mi) S ^TMPMACH10(mi,104)=$H i \u0026#39;$l(mi) q s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),17) //端口号 //控制字符 SET $ZTRAP=\u0026#34;ErrHandler\u0026#34; S iERR=0 s stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4) s lf=$c(10),cr=$c(13),nak=$c(21),(result,epis)=\u0026#34;\u0026#34;,etb=$c(23) S ^TMPMACH10(mi,102)=$H i $$Start^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q c Port q ErrHandler h 10 d Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) s iERR=+$g(iERR)+1 i iERR\u0026gt;30 s ret=$$Stop^MI.MIF000(mi) Q Main r *R:10 e d q .d BUILD i $c(R)=enq d .s record1=\u0026#34;\u0026#34; .d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) .d ACK .f r *R:10 q:$c(R)=eot d ..i $c(R)\u0026#39;=stx q ..s record=$$Read^MI.MIF000(mi,\u0026#34;\u0026#34;,etx) q:\u0026#39;$l(record) ..d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) ..d ACK ..s (sample,epis,surname,result,date,time,QC)=\u0026#34;\u0026#34; ..//\u0026#34;D1N15 15 xx500015S 1 1 3975631111.05 12016121020170223165831\u0026#34;_$C(3) ..s Type=$e(record,1) ..//请求 ..i Type=\u0026#34;R\u0026#34; d q ...s epis=$tr($e(record,4,19),\u0026#34; \u0026#34;) ...i $l(epis) s ^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,epis)=record ..//结果 D1N7008□□11□□□□□□□□□□□□□□□800383S□□□□□□□□1□□□T□□□□□ ..// D1N7001□□□1□□□□□□900023407700382S□□□□□□□□1□□□N□□□□□□□□□□□□□ ..i Type=\u0026#34;D\u0026#34; d q ...s ResultType=$e(record,3) ...i ResultType=\u0026#34;C\u0026#34; d ....s epis=$tr($e(record,8,16),\u0026#34; \u0026#34;) ...e d ....s epis=$tr($e(record,17,27),\u0026#34; \u0026#34;) ...s code=$tr($e(record,126,128),\u0026#34; \u0026#34;) ...i code=28 s code=$tr($e(record,45,46),\u0026#34; \u0026#34;)_code ...s res=$tr($e(record,137,142),\u0026#34; \u0026#34;) ...;try{s res1=##class(MI.Special.JudgeResult).IsYang(mi,epis,code,res)}catch{s res1=\u0026#34;\u0026#34;} ...s PoliceInfo=$e(record,157,172) ...try{s ret=$$GetPolice(PoliceInfo)}catch{} ...s resFuHao=\u0026#34;\u0026#34; ...i $d(^LISCaris200(\u0026#34;Data\u0026#34;,43)) s resFuHao=\u0026#34;\u0026lt;\u0026#34; ...i $d(^LISCaris200(\u0026#34;Data\u0026#34;,42)) s resFuHao=\u0026#34;\u0026gt;\u0026#34; ...k ^LISCaris200(\u0026#34;Data\u0026#34;) ...i $l(resFuHao) s res=resFuHao_res ...i $l(code),$l(res) s result=result_code_$c(92)_res_$c(92)_res1_$c(44) ...d Trace^MI.MIF000(mi,epis_\u0026#34;$$\u0026#34;_result,\u0026#34;Result\u0026#34;) ...i $l(epis),$l(result) d Save^MI.MIF000(mi,epis,result,date,time,QC) .d Trace^MI.MIF000(mi,$s($c(R)=eot:\u0026#34;EOT\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) .d BUILD q GetPolice(PoliceInfo) s str=$$scale(PoliceInfo,\u0026#34;16\u0026#34;,\u0026#34;2\u0026#34;) k ^LISCaris200(\u0026#34;Data\u0026#34;) s strLong=$l(str) f i=1:1:strLong d .s stri=$e(str,i) .i stri=1 d ..s ^LISCaris200(\u0026#34;Data\u0026#34;,strLong+1-i)=1 q \u0026#34;\u0026#34; /// 进制转换，将snum从scale1进制转换为scale2进制 scale(snum, scale1, scale2) // 转十进制 s snum=$g(snum) s tnum=0 s numlong=$l(snum) f i=1:1:$L(snum) d .s numi=$e(snum,i) .s numi=$$Sixteen2Ten(numi) .s tnum=tnum+(numi*(scale1**(numlong-i))) // 转scale2进制 s tnum=$g(tnum) s num=\u0026#34;\u0026#34; s GoTo=1 while (GoTo=1){ s pnum1=tnum s tnum=$p(tnum/scale2,\u0026#34;.\u0026#34;,1) s pnum2=pnum1#scale2 s pnum2=$$Ten2Sixteen(pnum2) i tnum\u0026lt;scale2 d .s num=tnum_pnum2_num .s GoTo=0 e s num=pnum2_num if (tnum=0)||\u0026#39;$l(tnum) s GoTo=0 } q num Ten2Sixteen(pnum2) i pnum2=10 s pnum2=\u0026#34;A\u0026#34; i pnum2=11 s pnum2=\u0026#34;B\u0026#34; i pnum2=12 s pnum2=\u0026#34;C\u0026#34; i pnum2=13 s pnum2=\u0026#34;D\u0026#34; i pnum2=14 s pnum2=\u0026#34;E\u0026#34; i pnum2=15 s pnum2=\u0026#34;F\u0026#34; q pnum2 Sixteen2Ten(numi) i (numi=\u0026#34;A\u0026#34;)||(numi=\u0026#34;a\u0026#34;) s numi=10 i (numi=\u0026#34;B\u0026#34;)||(numi=\u0026#34;b\u0026#34;) s numi=11 i (numi=\u0026#34;C\u0026#34;)||(numi=\u0026#34;c\u0026#34;) s numi=12 i (numi=\u0026#34;D\u0026#34;)||(numi=\u0026#34;d\u0026#34;) s numi=13 i (numi=\u0026#34;E\u0026#34;)||(numi=\u0026#34;e\u0026#34;) s numi=14 i (numi=\u0026#34;F\u0026#34;)||(numi=\u0026#34;f\u0026#34;) s numi=15 q numi //W1N11112222222222222222aa\u0026#34; BUILD i \u0026#39;$d(^TMP($zn)) q i \u0026#39;$d(^TMP($zn,$j)) q s labno=\u0026#34;\u0026#34; f s labno=$o(^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,labno)) q:labno=\u0026#34;\u0026#34; d .d ScanOne^MI.MIF000(mi,labno) .s tcx=\u0026#34;\u0026#34;,tcNum=0 .s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) q:chl=\u0026#34;\u0026#34; d ..s AutoDil=1 ///自动稀释倍数 ..i $l(chl)=1 s tcx=tcx_\u0026#34; \u0026#34;_chl_AutoDil ..i $l(chl)=2 s tcx=tcx_\u0026#34; \u0026#34;_chl_AutoDil ..i $l(chl)=3 s tcx=tcx_chl_AutoDil ..s tcNum=tcNum+1 .//组串 .s tStr=$g(^TMP($zn,$j,\u0026#34;ENQ\u0026#34;,labno)) .s TNUM=$e($p($h,\u0026#34;,\u0026#34;,2),2,5) . .//\u0026#34;W1N1111222222222222222200334S555555556666abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij 2 1141123\u0026#34; .s str=\u0026#34;W1N\u0026#34;_TNUM_$e(tStr,4,19)_\u0026#34; S 1 \u0026#34; .s Commend=\u0026#34; \u0026#34; .//i $l(tcNum)=1 s str=str_Commend_\u0026#34; \u0026#34;_tcNum .//i $l(tcNum)=2 s str=str_Commend_tcNum .s str=str_Commend_\u0026#34; \u0026#34;_tcNum_tcx .d Send(str) k ^TMP($zn,$j,\u0026#34;ENQ\u0026#34;) q Send(str) ; send list of orders if exists w enq,*-3 d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) i $c(R)=enq q i $c(R)\u0026#39;=ack w eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q q:$$SEND(str) w eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q SEND(str) ; send string to instrument s str=str,chsum=$$CHSUM(str_etx) w stx,str,etx,chsum,*-3 d Trace^MI.MIF000(mi,str_chsum,\u0026#34;H--\u0026gt;M\u0026#34;) f j=1:1:6 r *R:1 i ($c(R)=ack)!($c(R)=eot) q i $c(R)=ack d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) q 0 i $c(R)=eot d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) q 0 d Trace^MI.MIF000(mi,R,\u0026#34;H\u0026lt;--M\u0026#34;) q 1 CHSUM(x) ; calculate check sum n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y) s z=$zh(z) //转16进制 i $l(z)=3 s z=\u0026#34;0\u0026#34;_z q z aa(val) s ret = \u0026#34;\u0026#34; f j=1:1:$l(val) d .s ascii = $a($e(val,j)) .if ascii\u0026lt;16 set ret = ret_\u0026#34;0\u0026#34;_$zh(ascii) .else set ret = ret_$zh(ascii) q ret ACK ; send \u0026#39;ack\u0026#39; to instrument w ack,*-3 d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q NEXTTRAY(tray) q tray 安图协议 示例接口(安图 2000) {10,0,[S]41,1,0,[S]0,[S]BL07,3,[S]100,1,[S]112,1,[S]113,1}\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 MIFAUTOLUMOA2000(mi) ///仪器名称:\t全自动化学发光测定仪 ///仪器型号:\tA2000 ///仪器厂商:\tAutoLumo ///通信协议:\t自定义V0.07 ///交互方式:\t双向 ///接 口:\tRS232 ///编 写 者:\twwh ///编写日期:\t2015-11-05 ///备 注:\t仪器配置:系统设置--\u0026gt;LIS通信设置 ///\t仪器也可读取文件,文件路径log/LisData/,文件内容与通信协议中一致 ///接口版本:\tV0.0.1 ///更新日志: ///-1.更新日期: ///---更 新 者: ///---更新备注: s mi=$g(mi) i \u0026#39;$l(mi) q s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 //控制字符 S stx=$C(2),etx=$C(3),ack=$C(6),enq=$C(5),eot=$C(4),etb=$C(23) S sb=$C(11),eb=$C(28),cr=$C(13) S lf=$C(10),nak=$C(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 s ^TMPMACHDATA1(mi,10)=mi S leftBrace=\u0026#34;{\u0026#34;,rightBrace=\u0026#34;}\u0026#34; i $$Start^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q s ^TMPMACH10(mi,50)=$h c Port q /* S mi=$G(mi) Q:\u0026#39;$L(mi) Q:$$select^LVBMIMP(mi) F j=1:1:PLIST { S @(\u0026#34;par\u0026#34;_j)=PLIST(j) } S mi1=$P($G(par36),\u0026#34;,\u0026#34;,1) S stx=$C(2),etx=$C(3),ack=$C(6),enq=$C(5),eot=$C(4),etb=$C(23) S sb=$C(11),eb=$C(28),cr=$C(13) S lf=$C(10),nak=$C(21),(AllRecord,result,epis)=\u0026#34;\u0026#34;,kk=1 S $ZT=\u0026#34;ErrHandler\u0026#34;,$EC=\u0026#34;\u0026#34; S leftBrace=\u0026#34;{\u0026#34;,rightBrace=\u0026#34;}\u0026#34; S (sample,epis,surname,rec,res,result,date,time,QC,errFlag,resultType)=\u0026#34;\u0026#34; Q:$$start^MIF000() F { D Main Q:$$stop^MIF000() } C par4 Q */ Main S $ZT=\u0026#34;ErrHandler\u0026#34;,$EC=\u0026#34;\u0026#34; S record=$$Read^MI.MIF000(mi,leftBrace,rightBrace) Q:\u0026#39;$l(record) d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) S (epis,result,date,time,QC,data)=\u0026#34;\u0026#34; S cmd=$P(record,\u0026#34;,\u0026#34;,1) I cmd=\u0026#34;1\u0026#34; {\t//获取指定样本编号和指定病历号的样本详细测试请求数据 S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S sampleId=$P(record,\u0026#34;,\u0026#34;,3)\t//测试请求ID S epis=sampleId S:epis[\u0026#34;[S]\u0026#34; epis=$P(epis,\u0026#34;[S]\u0026#34;,2) K PLIST S error=$$BuildItems(mi,epis) I $L(error) { S ack=\u0026#34;{2,1,\u0026#34;_sampleId_\u0026#34;}\u0026#34; D ACK(mi,ack) ;D trace^MIF000(mi,error,\u0026#34;Error\u0026#34;) Q } S tc=\u0026#34;\u0026#34;,items=\u0026#34;\u0026#34; F { S tc=$O(PLIST(tc)) Q:\u0026#39;$L(tc) S itemDiluFactor=$G(PLIST(tc)) S:\u0026#39;$L(itemDiluFactor) itemDiluFactor=1\t//稀释倍数,机器内部稀释,必须在该测试项目的支持范围内 S items=items_\u0026#34;[S]\u0026#34;_tc_\u0026#34;,\u0026#34;_itemDiluFactor_\u0026#34;,\u0026#34; } S itemCount=+$G(PLIST) S items=$E(items,1,$L(items)-1) S dilutionFactor=1\t//稀释倍数 S isEmergency=0\t//是否急诊:0=普通,1=急诊 S medicareId=\u0026#34;[S]\u0026#34;\t//病案号 S secondName=\u0026#34;[S]\u0026#34;\t//姓 S firstName=\u0026#34;[S]\u0026#34;\t//名 S sex=\u0026#34;\u0026#34;\t//性别 0:女 1:男 S age=\u0026#34;\u0026#34;\t//年龄:整数 S location=\u0026#34;[S]\u0026#34;\t//科室 S ward=\u0026#34;[S]\u0026#34;\t//病区 S bed=\u0026#34;[S]\u0026#34;\t//床号 S reqDoctor=\u0026#34;[S]\u0026#34;\t//送检医生 S reqDate=\u0026#34;\u0026#34;\t//送检日期(格式:YYYY/MM/DD) S receiveUser=\u0026#34;[S]\u0026#34;\t//检验人员 S remark=\u0026#34;[S]\u0026#34;\t//备注 S ack=\u0026#34;{2,0,\u0026#34;_sampleId_\u0026#34;,\u0026#34;_dilutionFactor_\u0026#34;,\u0026#34;_isEmergency_\u0026#34;,\u0026#34;_medicareId_\u0026#34;,\u0026#34; S ack=ack_secondName_\u0026#34;,\u0026#34;_firstName_\u0026#34;,\u0026#34;_sex_\u0026#34;,\u0026#34;_age_\u0026#34;,\u0026#34;_location_\u0026#34;,\u0026#34;_ward_\u0026#34;,\u0026#34; S ack=ack_bed_\u0026#34;,\u0026#34;_reqDoctor_\u0026#34;,\u0026#34;_reqDate_\u0026#34;,\u0026#34;_receiveUser_\u0026#34;,\u0026#34;_remark_\u0026#34;,\u0026#34; S ack=ack_itemCount_\u0026#34;,\u0026#34;_items_\u0026#34;}\u0026#34; D ACK(mi,ack) Q } I cmd=\u0026#34;3\u0026#34; {\t//获取分配给指定仪器所有患者测试样本的个数 S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S sampleTotal=\u0026#34;0\u0026#34; S ack=\u0026#34;{4,1}\u0026#34;\t//暂时不处理 D ACK(mi,ack) Q } I cmd=\u0026#34;5\u0026#34; {\t//按测试模式发送结果到LIS //{5,[S]A2000,[S]41,[S]132,47925,970200L,183.145F} S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S sampleId=$P(record,\u0026#34;,\u0026#34;,5)\t//测试请求ID S sampleNo=$P(record,\u0026#34;,\u0026#34;,3)\t//测试样本编号 S itemId=$P(record,\u0026#34;,\u0026#34;,4)\t//测试项目编号 S medicareId=\u0026#34;[S]\u0026#34;\t//病案号 //{6,0,47925,[S]41,[S],[S]132} S ack=\u0026#34;{6,0,\u0026#34;_sampleId_\u0026#34;,\u0026#34;_sampleNo_\u0026#34;,\u0026#34;_medicareId_\u0026#34;,\u0026#34;_itemId_\u0026#34;}\u0026#34; D ACK(mi,ack) S epis=sampleNo //sampleId S:epis[\u0026#34;[S]\u0026#34; epis=$P(epis,\u0026#34;[S]\u0026#34;,2) // 2017-09-13 WxC 质控标示特殊处理 ;I \u0026#34;H1,L1,P1,C1\u0026#34;[epis S epis=\u0026#34;liver1\u0026#34; ;I \u0026#34;H2,L2,P2,C2\u0026#34;[epis S epis=\u0026#34;liver2\u0026#34; ;I \u0026#34;M1,G1\u0026#34;[epis S epis=\u0026#34;HEV1\u0026#34; ;I \u0026#34;M2,G2\u0026#34;[epis S epis=\u0026#34;HEV2\u0026#34; // S channel=itemId S:channel[\u0026#34;[S]\u0026#34; channel=$P(channel,\u0026#34;[S]\u0026#34;,2) S valueL=$P(record,\u0026#34;,\u0026#34;,6)\t//RLU((检测结果相对发光值) S valueL=$P(valueL,\u0026#34;L\u0026#34;,1) S valueF=$P(record,\u0026#34;,\u0026#34;,7)\t//浓度值或S/CO值 S valueF=$P(valueF,\u0026#34;F\u0026#34;,1) S:valueF[\u0026#34;[S]\u0026#34; valueF=$tr(valueF,\u0026#34;[S]\u0026#34;,\u0026#34;\u0026#34;) Q:\u0026#39;$L(channel) S result=\u0026#34;\u0026#34; //S result=result_channel_\u0026#34;-L\u0026#34;_$C(par10)_valueL_$C(par11) //S result=result_channel_\u0026#34;-F\u0026#34;_$C(par10)_valueF_$C(par11) S result=result_channel_ResultDeli_valueF_ItemDeli D Save Q } I cmd=\u0026#34;7\u0026#34; {\t//按样本模式发送结果到LIS //{7,[S]A2000,101,[S]41,3,[S]132,970200L,183.145F,[S]112,673200L,13.15F,[S]113,1378200L,13.5F S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S sampleId=$P(record,\u0026#34;,\u0026#34;,3)\t//样本ID S sampleNo=$P(record,\u0026#34;,\u0026#34;,4)\t//测试样本编号 S itemCount=+$P(record,\u0026#34;,\u0026#34;,5)\t//测试样本包含的测试个数 S items=$P(record,\u0026#34;,\u0026#34;,6,$L(record,\u0026#34;,\u0026#34;)) S medicareId=\u0026#34;[S]\u0026#34;\t//病案号 //{8,0,101,[S]41,[S] S ack=\u0026#34;{8,0,\u0026#34;_sampleId_\u0026#34;,\u0026#34;_sampleNo_\u0026#34;,\u0026#34;_medicareId_\u0026#34;}\u0026#34; D ACK(mi,ack) S epis=sampleId S:epis[\u0026#34;[S]\u0026#34; epis=$P(epis,\u0026#34;[S]\u0026#34;,2) // 2017-09-13 WxC 质控标示特殊处理 I \u0026#34;H1,L1,P1,C1\u0026#34;[epis S epis=\u0026#34;liver1\u0026#34; I \u0026#34;H2,L2,P2,C2\u0026#34;[epis S epis=\u0026#34;liver2\u0026#34; I \u0026#34;M1,G1\u0026#34;[epis S epis=\u0026#34;HEV1\u0026#34; I \u0026#34;M2,G2\u0026#34;[epis S epis=\u0026#34;HEV2\u0026#34; // S result=\u0026#34;\u0026#34; F itemIndex=1:3:$L(items,\u0026#34;,\u0026#34;) { S itemId=$P(items,\u0026#34;,\u0026#34;,itemIndex)\t//测试项目编号 S channel=itemId S:channel[\u0026#34;[S]\u0026#34; channel=$P(channel,\u0026#34;[S]\u0026#34;,2) Continue:\u0026#39;$L(channel) S valueL=$P(items,\u0026#34;,\u0026#34;,itemIndex+1)\t//RLU((检测结果相对发光值) S valueL=$P(valueL,\u0026#34;L\u0026#34;,1) S valueF=$P(items,\u0026#34;,\u0026#34;,itemIndex+2)\t//浓度值或S/CO值 S valueF=$P(valueF,\u0026#34;F\u0026#34;,1) S:valueF[\u0026#34;[S]\u0026#34; valueF=$tr(valueF,\u0026#34;[S]\u0026#34;,\u0026#34;\u0026#34;) //S result=result_channel_\u0026#34;-L\u0026#34;_$C(par10)_valueL_$C(par11) //S result=result_channel_\u0026#34;-F\u0026#34;_$C(par10)_valueF_$C(par11) S result=result_channel_ResultDeli_valueF_ItemDeli } D Save Q } I cmd=\u0026#34;9\u0026#34; {\t//双向 //{9,[S]A2000,[S]41} S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S sampleId=$P(record,\u0026#34;,\u0026#34;,3)\t//样本ID S epis=sampleId S:epis[\u0026#34;[S]\u0026#34; epis=$P(epis,\u0026#34;[S]\u0026#34;,2) ///2016-04-13 WXC 扫条码转换仪器 ///D SetTSMachine^MIF000(mi,epis) ;s Err=##Class(LIS.Common.DHCVisitNumber).ReceiveLabNoByWGM(mi,epis,\u0026#34;\u0026#34;) ;d Trace^MI.MIF000(mi,Err,\u0026#34;核收到仪器返回\u0026#34;) s Err=\u0026#34;\u0026#34; s RetLL=$$SaveLastMachine^MI.MIF000(mi,epis) d Trace^MI.MIF000(mi,RetLL,\u0026#34;保存最后仪器\u0026#34;) K PLIST S error=$$BuildItems(mi,epis) I $L(error) { S ack=\u0026#34;{10,1,\u0026#34;_sampleId_\u0026#34;}\u0026#34; D ACK(mi,ack) d Trace^MI.MIF000(mi,error,\u0026#34;Error\u0026#34;) Q } S tc=\u0026#34;\u0026#34;,items=\u0026#34;\u0026#34; F { S tc=$O(PLIST(tc)) Q:\u0026#39;$L(tc) S itemDiluFactor=$G(PLIST(tc)) S:\u0026#39;$L(itemDiluFactor) itemDiluFactor=1\t//稀释倍数,机器内部稀释,必须在该测试项目的支持范围内 S items=items_\u0026#34;[S]\u0026#34;_tc_\u0026#34;,\u0026#34;_itemDiluFactor_\u0026#34;,\u0026#34; } S items=$E(items,1,$L(items)-1) S dilutionFactor=1\t//稀释因子 S isEmergency=0\t//是否急诊:0=普通,1=急诊 S specimen=\u0026#34;[S]\u0026#34;_$$GetSpecimen(epis)\t//样本类型:字符串,如果仪器不能识别则默认为血清 S itemCount=+$G(PLIST) //{10,0,[S]41,1,0,[S],3,[S]132,1,[S]112,1,[S]113,1} S ack=\u0026#34;{10,0,[S]\u0026#34;_sampleId_\u0026#34;,\u0026#34;_dilutionFactor_\u0026#34;,\u0026#34;_isEmergency_\u0026#34;,\u0026#34;_specimen_\u0026#34;,\u0026#34;_itemCount_\u0026#34;,\u0026#34;_items_\u0026#34;}\u0026#34; D Trace^MI.MIF000(mi,ack,\u0026#34;ack\u0026lt;--M\u0026#34;) D ACK(mi,ack) Q } I cmd=\u0026#34;11\u0026#34; {\t//连接LIS系统开始通信 S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S lisCommVersion=$P(record,\u0026#34;,\u0026#34;,3)\t//LIS通信模块版本号 S lisVersion=\u0026#34;[S]V0.0.1\u0026#34;\t//LIS系统版本号 S ack=\u0026#34;{12,0,\u0026#34;_lisVersion_\u0026#34;}\u0026#34; D ACK(mi,ack) Q } I cmd=\u0026#34;15\u0026#34; {\t//快速获取指定样本架编号测试请求数据 S instrumentId=$P(record,\u0026#34;,\u0026#34;,2)\t//系统标识 S:instrumentId[\u0026#34;[S]\u0026#34; instrumentId=$P(instrumentId,\u0026#34;[S]\u0026#34;,2) S rackId=$P(record,\u0026#34;,\u0026#34;,3)\t//样本架编号 S position=$P(record,\u0026#34;,\u0026#34;,4)\t//样本位置号 S ack=\u0026#34;{16,1,\u0026#34;_rackId_\u0026#34;,\u0026#34;_position_\u0026#34;0,[S]}\u0026#34;\t//不处理此模式 D ACK(mi,ack) Q } Q ErrHandler h 10 d Trace^MI.MIF000(mi,$TR($ZERROR,\u0026#34;^\u0026#34;,\u0026#34;--\u0026#34;)_\u0026#34;.错误代码:\u0026#34;_$ECODE,\u0026#34;Runtime Error\u0026#34;) Q GetSpecimen(Labno) n (Labno) s Labno=$G(Labno) i \u0026#39;$l(Labno) q \u0026#34;\u0026#34; s SpecName=\u0026#34;\u0026#34; s SpecDR=\u0026#34;\u0026#34; \u0026amp;sql(SELECT SpecimenDR into :SpecDR FROM dbo.RP_VisitNumber WHERE VisitNumber=:Labno) i SQLCODE q \u0026#34;\u0026#34; q:SpecDR=\u0026#34;\u0026#34; \u0026#34;\u0026#34; \u0026amp;sql(select IName into :SpecName from dbo.BT_Specimen where RowID=:SpecDR) q SpecName //构建测试项目,返回错误代码 BuildItems(mi,epis) N (mi,epis,PLIST) K PLIST S mi=$G(mi),epis=$G(epis) Q:\u0026#39;$L(mi) \u0026#34;仪器代码为空\u0026#34; Q:\u0026#39;$L(epis) \u0026#34;标本号为空\u0026#34; //Q:\u0026#39;$D(^TMIF(mi)) \u0026#34;仪器代码错误\u0026#34; //Q:\u0026#39;$D(^TEPI(epis)) \u0026#34;在LIS系统未找到样本号:\u0026#34;_epis_\u0026#34;,确定样本号正确或已经在LIS系统接收\u0026#34; S error=\u0026#34;\u0026#34;,PLIST=0 K ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$J,mi,epis) d ScanOneNew^MI.MIF000(mi,epis) K PLIST S tc=\u0026#34;\u0026#34; F { S tc=$O(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$J,mi,epis,tc)) Q:\u0026#39;$L(tc) S tc=$P(tc,\u0026#34;-\u0026#34;,1) Continue:\u0026#39;$L(tc) Continue:$D(PLIST(tc)) S PLIST(tc)=\u0026#34;\u0026#34; S PLIST=$I(PLIST) } Q:+$G(PLIST)\u0026lt;1 \u0026#34;未找到样本号:\u0026#34;_epis_\u0026#34;需要上传的项目,确定样本为登记状态且所开医嘱已经正确维护到仪器\u0026#34; Q \u0026#34;\u0026#34; ACK(mi,data) N (mi,data) S mi=$G(mi),data=$G(data) Q:\u0026#39;$L(mi) \u0026#34;\u0026#34; Q:\u0026#39;$L(data) \u0026#34;\u0026#34; //Q:\u0026#39;$D(^TMIF(mi)) \u0026#34;\u0026#34; W data,*-3 d Trace^MI.MIF000(mi,data,\u0026#34;H--\u0026gt;M\u0026#34;) Q \u0026#34;\u0026#34; Save d Trace^MI.MIF000(mi,epis_\u0026#34;$$\u0026#34;_result,\u0026#34;Result\u0026#34;) I $l(epis),$l(result) { //S QC=$$findQC^MIF000(mi,epis) d Save^MI.MIF000(mi,epis,result,date,time,QC) //file^MIF000(mi,sample,epis,surname,result,date,time,QC,mi1) } S (epis,rec,res,result,date,time,QC,resultType)=\u0026#34;\u0026#34; Q 主动上传双向 通过监听文件双向 不同路径回传患者信息和检测项目信息 示例接口(希森美康 XN1000) 通过配置监听 UPPreDealClass 字段“PreDeal.DealStandSysmexImage,PreDeal“，通过 M 进行编写上传信息，会同时上传两个文件，一个文件传患者信息，一个文件传标本项目。\n{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;Drect\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;1000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;D:\\\\Laboman6.0\\\\2\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;D:\\\\Laboman6.0\\\\1\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;D:\\\\Laboman6.0\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFXN1000\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;.CDF\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealStandSysmexImage,PreDeal\u0026#34;,\u0026#34;UpPara\u0026#34;:\u0026#34;D:\\\\Laboman6.0\\\\1,D:\\\\Laboman6.0\u0026#34;,\u0026#34;IsCombineLines\u0026#34;:\u0026#34;1\u0026#34;}] /// [{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;Drect\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;1000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;C:\\\\Laboman\\\\2\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;C:\\\\Laboman\\\\1\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;C:\\\\Laboman\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFXN1000\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;.CDF\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealStandSysmexImage,PreDeal\u0026#34;,\u0026#34;UpPara\u0026#34;:\u0026#34;C:\\\\Laboman\\\\1,C:\\\\Laboman\u0026#34;,\u0026#34;IsCombineLines\u0026#34;:\u0026#34;1\u0026#34;}] Class MI.MIFXN1000 Extends %RegisteredObject { // D ##class(MI.MIFLISMonitorTest).fileMTHD(\u0026#34;38\u0026#34;,\u0026#34;1,BASO#,1,0.02,,,,,\u0026#34;,\u0026#34;1\u0026#34;) // mi:仪器主键 // record:一个数据行合并提交用#enter#分割多行数据 // epis:流水号，前处理提取出了的画 // fileNameOrColName:读文件的是文件全名，数据库的是数据库查询的列名用~分割 // [{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;Drect\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;3000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;D:\\\\Result\\\\2\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;D:\\\\Result\\\\1\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;D:\\\\Result\\\\\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFXEMSYS\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;.cdf\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoMAll,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealImage,PreDeal\u0026#34;,\u0026#34;UpPara\u0026#34;:\u0026#34;\u0026#34;}] ClassMethod fileMTHD(mi, record As %String(MAXLEN=99999999), epis, fileNameOrColName, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; i \u0026#39;$l(record) q \u0026#34;\u0026#34; //多行数据 s recordbak=record //返回值 s retcode=\u0026#34;\u0026#34; //解析多行合并数据，按#enter#分隔，监听config开启与否合并提交都支持 d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) s (sample,result,date,time,QC,image,retimage,imageR,retimageR,imageres,Ipcode,IpName,conclusion)=\u0026#34;\u0026#34; f i=1:1:$l(record,\u0026#34;#enter#\u0026#34;) d .S resVal=$p(record,\u0026#34;#enter#\u0026#34;,i) .//0,2020-12-10,00:00:00,40,XS500,17944,35,[13][10] .//1,RDW-SD,1,41.60,,,,,[13][10]1,WBC,1,4.15,,,,,[13][10] .//3,,HPLT,C:\\Laboman4.0\\XS500\\gram\\20201210\\0000000040_201210153004_HPLT.gif,1[13][10] .s type=$p(resVal,\u0026#34;,\u0026#34;,1) .i type=0 s epis=$p(resVal,\u0026#34;,\u0026#34;,4) .i type=1 d ..s code=$p(resVal,\u0026#34;,\u0026#34;,2),res=$p(resVal,\u0026#34;,\u0026#34;,4) ..s result=result_code_$c(92)_res_$c(44) .i type=3 d ..s image=$p(resVal,\u0026#34;,\u0026#34;,3) ..s retimage=$p(resVal,\u0026#34;,\u0026#34;,4) ..s imageR=imageR_image_\u0026#34;,\u0026#34; ..s retimageR=retimageR_retimage_\u0026#34;,\u0026#34; .i type=4 d //记录仪器报警信息,Ipcode 信息代码,IpName 信息内容 ..s Ipcode=$p(resVal,\u0026#34;,\u0026#34;,3) ..s IpName=$p(resVal,\u0026#34;,\u0026#34;,4) ..//s conclusion=conclusion_Ipcode_\u0026#34;^\u0026#34;_IpName ..i $l(conclusion) s conclusion=conclusion_\u0026#34;，\u0026#34;_Ipcode_\u0026#34;：\u0026#34;_IpName ..e s conclusion=Ipcode_\u0026#34;：\u0026#34;_IpName .i type=9 d ..s imageR=$e(imageR,1,$l(imageR)-1) ..s retimageR=$e(retimageR,1,$l(retimageR)-1) ..d conversion ..s imageres=\u0026#34;getimage#\u0026#34;_epis_\u0026#34;#\u0026#34;_imageR_\u0026#34;#\u0026#34;_retimageR ..d Trace^MI.MIF000(mi,imageres,\u0026#34;H\u0026lt;--M\u0026#34;) ..d Trace^MI.MIF000(mi,epis_\u0026#34;:\u0026#34;_result,\u0026#34;提示\u0026#34;) ..i $l(epis),$l(conclusion) d ...s epis1=\u0026#34;\u0026#34; ...i $l(epis)\u0026lt;6 s epis1=$$ChangeEpisnew^MI.MIF000(mi,epis,\u0026#34;\u0026#34;) ...i $l(epis)\u0026gt;6 s epis1=epis ...d Trace^MI.MIF000(mi,epis1_\u0026#34;:\u0026#34;_conclusion,\u0026#34;报警信息\u0026#34;) ...i $l(epis1) d ##Class(MI.Common.MIFBase).SaveMajorConclusion(epis1, conclusion, mi) ..i $l(conclusion) s result=result_\u0026#34;BJ\u0026#34;_$c(92)_conclusion_$c(44) ..i $l(epis),$l(result) d ##Class(MI.Common.MIFBase).Save(mi, epis, result, date, time, QC) q imageres conversion i imageR=\u0026#34;HPLT\u0026#34; s imageR=\u0026#34;PLT\u0026#34; i imageR=\u0026#34;HRBC\u0026#34; s imageR=\u0026#34;RBC\u0026#34; i imageR=\u0026#34;HWBC\u0026#34; s imageR=\u0026#34;DIFF\u0026#34; i imageR=\u0026#34;SBASO\u0026#34; s imageR=\u0026#34;Baso\u0026#34; q } // D ##class(MI.MIFLISMonitorTest)SaveImageMTHD(\u0026#34;7\u0026#34;,\u0026#34;9999\u0026#34;, \u0026#34;\u0026#34;,\u0026#34;175\u0026#34;) // mi:仪器 // epis：流水号，如果是监听图片模式该位置放图片名称，自己在保存前提取流水 // ImageClass:图片类别，如果是监听图片模式该位置放图片名称，自己在保存前提取图片类型 // FileName:保存在文件服务的相对路径，默认不动 // FullName:文件全路径，如果是监听图片模式该位置放图片全路径名称，满足有的图片名称无法得到流水和图片类别的情况 ClassMethod SaveImageMTHD(mi, epis, ImageClass, FileName, FullName, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //通过OtherPara配置取图的在这里通过epis和ImageClass的图片名字提取出流水号和图片类别 s mi=$g(mi) s epis=$g(epis) s ImageClass=$g(ImageClass) s FileName=$g(FileName) s FullName=$g(FullName) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; d Trace^MI.MIF000(mi,epis_\u0026#34;:\u0026#34;_ImageClass_\u0026#34;:\u0026#34;_FileName,\u0026#34;H\u0026lt;--M\u0026#34;) s (ReceiveDate, ImageOrder, Caption, DisplayRatio, Height, Width, Sequence)=\u0026#34;\u0026#34; s ret=##Class(MI.Common.MachineResult).SaveImage(ReceiveDate, epis, ImageClass, ImageOrder, FileName, mi, Caption, DisplayRatio, Height, Width, Sequence) q ret } // 返回给监听当前上传文件路径名称，默认不要动 // w ##class(MI.MIFLISMonitorTest).GetFtpMTHD(\u0026#34;7\u0026#34;) // mi:仪器 ClassMethod GetFtpMTHD(mi, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //文件服务模式必须改的地方，老的FTP模式这么改了也没问题，所以建议都这样 s mi=$g(mi) q ##Class(MI.Common.MIFBase).GetMiFtpPath(mi) } /// Creator： 查询患者信息，监听配置上传前处理类后会定时调用这个query查询数据进行上传操作 /// CreatDate： 20140919 /// Description:： /// Table： /// Input： mi：仪器主键 /// Output： 仪器信息 /// Return： 仪器信息 /// Others： Query QryLabInfo(mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Query(ROWSPEC = \u0026#34;labno,labnoInfo,patInfo\u0026#34;) { } /// Query的执行方法 /// d ##class(%ResultSet).RunQuery(\u0026#34;MI.MIFXN1000\u0026#34;,\u0026#34;QryLabInfo\u0026#34;,\u0026#34;11\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) ClassMethod QryLabInfoExecute(ByRef qHandle As %Binary, mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Status { Set repid=$i(^CacheTemp) Set ind=1 s mi=$g(mi),flag=$g(flag) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; s LabnoList=\u0026#34;\u0026#34; s AddDate=\u0026#34;\u0026#34; f s AddDate=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,\u0026#34;C\u0026#34;,AddDate)) q:AddDate=\u0026#34;\u0026#34; d .s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,\u0026#34;C\u0026#34;,AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d ..s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,\u0026#34;C\u0026#34;,AddDate,AddTime,\u0026#34;\u0026#34;)) ..s labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) ..i \u0026#39;$l(labno) q ..//ref ..s labnoInfo=..GetLabnoInfo(mi,labno) ..//cdf ..s patInfo=..GetPatInfo(mi,labno) ..d OutputRow Set qHandle=$lb(0,repid,0) Quit $$$OK OutputRow Set Data=$lb(labno,labnoInfo,patInfo) Set ColFields=\u0026#34;labno,labnoInfo,patInfo\u0026#34; Set ^CacheTemp(repid,ind)=##Class(LIS.Util.Common).TransListNull(Data,ColFields) Set ind=ind+1 quit } ClassMethod QryLabInfoClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set repid=$LIST(qHandle,2) Kill ^CacheTemp(repid) Quit $$$OK } ClassMethod QryLabInfoFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set AtEnd=$LIST(qHandle,1) Set repid=$LIST(qHandle,2) Set ind=$LIST(qHandle,3) Set ind=$o(^CacheTemp(repid,ind)) If ind=\u0026#34;\u0026#34; { Set AtEnd=1 Set Row=\u0026#34;\u0026#34; } Else { Set Row=^CacheTemp(repid,ind) } s qHandle=$lb(AtEnd,repid,ind) Quit $$$OK } /// w ##Class(MI.XN9000).GetLabnoInfo(2,1709040020) ClassMethod GetLabnoInfo(mi, labno) As %String { s mi=$g(mi),labno=$g(labno) //s ^TMPLIS(800,mi, labno)=\u0026#34;\u0026#34; i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; //获取项目通道号 i $e(labno)=\u0026#34;*\u0026#34; q \u0026#34;\u0026#34; d ScanOne^MI.MIF000(mi,labno) s tcx=\u0026#34;\u0026#34; s num=1 s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) q:chl=\u0026#34;\u0026#34; d .s tcx=tcx_chl_\u0026#34;+\u0026#34; s tcx=$e(tcx,1,$l(tcx)-1) k ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno) i $l(tcx) s tcx=labno_\u0026#34;,\u0026#34;_tcx_\u0026#34;|\u0026#34; i $l(tcx) d Trace^MI.MIF000(mi,tcx,\u0026#34;工单\u0026#34;) q tcx } /// w ##Class(MI.MIFLISMonitorTest).GetPatInfo(6,1001367) ClassMethod GetPatInfo(mi, labno) As %String { s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,labno,\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$tr($lg(RPVisitNumberData,3),\u0026#34; \u0026#34;) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),3) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$tr($lg(RPVisitNumberData,28),\u0026#34; \u0026#34;) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; //i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; i $d(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR)) d .s WorkGroupMachineDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,\u0026#34;\u0026#34;)) .s OrderNo=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,WorkGroupMachineDR,\u0026#34;\u0026#34;)) .s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,WorkGroupMachineDR,OrderNo,\u0026#34;\u0026#34;)) .s EpisodeNo=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),8) .s BarCode=EpisodeNo s Patna=$tr(PatName,\u0026#34; \u0026#34;) ;病人姓名 //b ;1 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode q RetString } // 监听做上传操作后调用改方法设置标本上传表状态 ClassMethod SaveSDFMTHD(mi, labno, epis, filename, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi),labno=$g(labno),epis = $g(epis),filename=$g(filename) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q s ret=##Class(MI.MachineUpload).SetSendFlag(mi,labno,\u0026#34;S\u0026#34;,filename) q } /// w ##Class(MI.MIFX1800IA).QueryCDF(-6,\u0026#34;2015-09-10\u0026#34;) ClassMethod QueryCDF(mi, date) As %String { s mi=$g(mi),date=$g(date) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; i $l(date) s date=$tr(date,\u0026#34;-\u0026#34;) e s date=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s retList=\u0026#34;\u0026#34; s cnt=0 s time=\u0026#34;\u0026#34; f s time=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,\u0026#34; S\u0026#34;,date,time)) q:time=\u0026#34;\u0026#34; d .s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,\u0026#34; S\u0026#34;,date,time,\u0026#34;\u0026#34;)) .s labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) .s datetime=date_\u0026#34; \u0026#34;_$zt(time,2) .s filename=\u0026#34;\u0026#34; .s cnt=cnt+1 .i cnt\u0026gt;300 q .s retList=retList_$c(9)_cnt_$c(9)_datetime_$c(9)_labno_$c(9)_labno_$c(9)_filename_$c(2) s retList=$e(retList,1,$l(retList)-1) q retList } } 同一路径回传文件上传一个或多个文件 示例接口(贝克曼流水线) 通过配置监听 UPPreDealClass 字段“PreDeal.DealDemoM,PreDeal”，通过 M 进行编写上传信息，只输出一次 OutPut 就可以生成一个文件，通过输出两次 OutPut 修改第二次 OutPut 内容可以在同一路径回传两个不同的文件。\n{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;Drect\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;2000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;C:\\\\Inetpub\\\\UL\\\\\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFRemisolN\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;.hpr,.ok\u0026#34;,\u0026#34;UpPara\u0026#34;:\u0026#34;C:\\\\Inetpub\\\\DL\\\\\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoMALL,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;}] Class MI.MIFRemisolN Extends %RegisteredObject { /// D ##class(MI.MIFBeckmanRemisol).fileMTHD(\u0026#34;38\u0026#34;,\u0026#34;1,BASO#,1,0.02,,,,,\u0026#34;,\u0026#34;1\u0026#34;) /// mi:仪器主键 /// record:一个数据行合并提交用#enter#分割多行数据 /// epis:流水号，前处理提取出了的画 /// fileNameOrColName:读文件的是文件全名，数据库的是数据库查询的列名用~分割 /// D ##class(MI.MIFRemisolN).fileMTHD(\u0026#34;1\u0026#34;,\u0026#34;H|\\^\u0026amp;|||REMISOL||||||UPLOAD_SIGN=0\\INTERPRETATION_FLAG=1\\INSTRUMENT_FLAG=1|P|1|20231207134318[13][10]Q|1|^ssss||||||||||O[13][10]L|1[13][10]\u0026#34;) /// D ##class(MI.MIFRemisolN).fileMTHD(\u0026#34;24\u0026#34;,\u0026#34;H|\\^\u0026amp;|||Lb1k□V1.5.5||||||UPLOAD_SIGN=1\\INTERPRETATION_FLAG=0\\INSTRUMENT_FLAG=1|P|1|20241011155213[13][10]P|1||0000000072||彭均秀^||19480902|F|||||||||||||||||普外科门诊[13][10]O|1|24101100017^0020^01|||RO|20241011155213|20241011155213||||||||S|||UV[13][10]R|1|^^^GLU^^2286\\2286^1598\\1609^^0|7.05^M|||N||R||||20241011102518|AU5800[13][10]R|2|^^^LIPEM^^^^^0|0|||N||R||||20241011102518|AU5800[13][10]R|3|^^^ICTER^^^^^0|0|||N||R||||20241011102518|AU5800[13][10]R|4|^^^HEMOL^^^^^0|0|||N||R||||20241011102518|AU5800[13][10]L|1[13][10]\u0026#34;) ClassMethod fileMTHD(mi, record As %String(MAXLEN=99999999), epis, fileNameOrColName, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; i \u0026#39;$l(record) q \u0026#34;\u0026#34; s (Code,result,date,time,res,QC)=\u0026#34;\u0026#34; d Trace^MI.MIF000(mi,record,\u0026#34;record\u0026#34;) for i=1:1:$l(record,\u0026#34;[13][10]\u0026#34;) d .s rec=$p(record,\u0026#34;[13][10]\u0026#34;,i) .i \u0026#39;$l(rec) q .d Trace^MI.MIF000(mi,rec,\u0026#34;rec\u0026#34;) .S type=$e(rec,1,1) .i type=\u0026#34;O\u0026#34; d q ..s epis=$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) .i type=\u0026#34;R\u0026#34; d q ..s code=$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,4),\u0026#34; \u0026#34;) ..S res=$p(rec,\u0026#34;|\u0026#34;,4) ..s ResNoes=$p(res,\u0026#34;^\u0026#34;,2) ..s ResNoes=##class(MI.MIFRemisolN).ConvertResNoes(ResNoes) ..s res=$tr($p(res,\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;,\u0026#34;\u0026#34;) ..s resKZJG=##class(MI.MIFRemisolN).ConvertresKZJG(mi,epis,code,res) ..s result=result_code_$c(92)_res_$c(92)_resKZJG_$c(92)_ResNoes_$c(44) .i type=\u0026#34;L\u0026#34; d q ..d Trace^MI.MIF000(mi,epis_\u0026#34;$$\u0026#34;_result,\u0026#34;Result\u0026#34;) ..i $l(epis),$l(result) d Save^MI.MIF000(mi,epis,result,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) q \u0026#34;\u0026#34; } /// 获取扩展结果 ClassMethod ConvertresKZJG(mi, epis, code, res) { s code=$g(code),res=$g(res) s OutPut=\u0026#34;\u0026#34; s Labno=$$GetLabnoByEpis(mi,epis) i $l(Labno),$d(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,Labno)) d .s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,Labno,\u0026#34;\u0026#34;)) .s Age=$lg($g(^dbo.RPVisitNumberD(VisitNumberDR)),18) s Age=$g(Age) i \u0026#39;$l(code),\u0026#39;$l(res) q OutPut i code=\u0026#34;BNP\u0026#34;,0 d\t// BNP N端脑钠肽前体 .i \u0026#39;$l(Age) q .i Age\u0026lt;=50 d ..i res\u0026lt;=450 s OutPut=\u0026#34;正常\u0026#34; ..i res\u0026gt;450,res\u0026lt;=600 s OutPut=\u0026#34;急性心衰\u0026#34; ..i res\u0026gt;600 s OutPut=\u0026#34;慢性心衰\u0026#34; .i ((Age\u0026gt;50)\u0026amp;\u0026amp;(Age\u0026lt;=75)) d ..i res\u0026lt;=900 s OutPut=\u0026#34;正常\u0026#34; ..i res\u0026gt;900 s OutPut=\u0026#34;急性心衰\u0026#34; .i Age\u0026gt;75 d ..i res\u0026lt;=1800 s OutPut=\u0026#34;正常\u0026#34; ..i res\u0026gt;1800 s OutPut=\u0026#34;急性心衰\u0026#34; i code=\u0026#34;25OHD\u0026#34; d\t// 25羟维生素D .i res\u0026lt;=20 s OutPut=\u0026#34;缺乏\u0026#34; .i res\u0026gt;20,res\u0026lt;=30 s OutPut=\u0026#34;不足\u0026#34; .i res\u0026gt;30,res\u0026lt;=100 s OutPut=\u0026#34;充足\u0026#34; .i res\u0026gt;100 s OutPut=\u0026#34;超上限\u0026#34; q OutPut GetLabnoByEpis(mi,Epis) s ret=Epis,mi=$g(mi) s date=$zd($h,8) i \u0026#39;$l(mi) q Epis s WGMachineID=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) i \u0026#39;$l(WGMachineID) q Epis i $d(^dbo.RPVisitNumberReportI(\u0026#34;IndexEpisodeNo\u0026#34;,date,WGMachineID,##Class(LIS.Util.Common).IndexData(Epis))) { s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexEpisodeNo\u0026#34;,date,WGMachineID,##Class(LIS.Util.Common).IndexData(Epis),\u0026#34;\u0026#34;),-1) S VisitNumberDR=$LG($G(^dbo.RPVisitNumberReportD(ReportDR)),2) s ret=$lg(^dbo.RPVisitNumberD(VisitNumberDR),2) } q ret } /// 转换报警信息 ClassMethod ConvertResNoes(ResNoes) { s ResNoes=$g(ResNoes) s OutPut=\u0026#34;\u0026#34; i \u0026#39;$l(ResNoes) q OutPut i $d(^LISPolice(\u0026#34;BKMLSX\u0026#34;,ResNoes)) d .s OutPut=$g(^LISPolice(\u0026#34;BKMLSX\u0026#34;,ResNoes)) i $l(ResNoes),\u0026#39;$l(OutPut) s OutPut=\u0026#34;旗标:\u0026#34;_ResNoes q OutPut } /// D ##class(MI.MIFBeckmanRemisol)SaveImageMTHD(\u0026#34;7\u0026#34;,\u0026#34;9999\u0026#34;, \u0026#34;\u0026#34;,\u0026#34;175\u0026#34;) /// mi:仪器 /// epis：流水号，如果是监听图片模式该位置放图片名称，自己在保存前提取流水 /// ImageClass:图片类别，如果是监听图片模式该位置放图片名称，自己在保存前提取图片类型 /// FileName:保存在文件服务的相对路径，默认不动 /// FullName:文件全路径，如果是监听图片模式该位置放图片全路径名称，满足有的图片名称无法得到流水和图片类别的情况 ClassMethod SaveImageMTHD(mi, epis, ImageClass, FileName, FullName, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //通过OtherPara配置取图的在这里通过epis和ImageClass的图片名字提取出流水号和图片类别 s mi=$g(mi) s epis=$g(epis) s ImageClass=$g(ImageClass) //解析流水号和图片类别 s Name=epis s epis=$p(Name,\u0026#34;_\u0026#34;,1) s ImageClass=$p(Name,\u0026#34;_\u0026#34;,2) s ImageClass=$p(ImageClass,\u0026#34;.\u0026#34;,1) s FileName=$g(FileName) s FullName=$g(FullName) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; d ##Class(MI.Common.MIFBase).Trace(mi,epis_\u0026#34;:\u0026#34;_ImageClass_\u0026#34;:\u0026#34;_FileName,\u0026#34;H\u0026lt;--M\u0026#34;) s (ReceiveDate, ImageOrder, Caption, DisplayRatio, Height, Width, Sequence)=\u0026#34;\u0026#34; //加上当前时间，防止浏览器缓存 s FileName=FileName_\u0026#34;?\u0026#34;_$p($h,\u0026#34;,\u0026#34;,2) s ret=##Class(MI.Common.MachineResult).SaveImage(ReceiveDate, epis, ImageClass, ImageOrder, FileName, mi, Caption, DisplayRatio, Height, Width, Sequence) q ret } /// 返回给监听当前上传文件路径名称，默认不要动 /// w ##class(MI.MIFBeckmanRemisol).GetFtpMTHD(\u0026#34;7\u0026#34;) /// mi:仪器 ClassMethod GetFtpMTHD(mi, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //文件服务模式必须改的地方，老的FTP模式这么改了也没问题，所以建议都这样 s mi=$g(mi) q ##Class(MI.Common.MIFBase).GetMiFtpPath(mi) } /// Creator： 查询患者信息，监听配置上传前处理类后会定时调用这个query查询数据进行上传操作 /// CreatDate： 20140919 /// Description:： /// Table： /// Input： mi：仪器主键 /// Output： 仪器信息 /// Return： 仪器信息 /// Others： Query QryLabInfo(mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Query(ROWSPEC = \u0026#34;labno,labnoInfo,patInfo\u0026#34;) { } /// Query的执行方法 /// d ##class(%ResultSet).RunQuery(\u0026#34;MI.MIFRemisolN\u0026#34;,\u0026#34;QryLabInfo\u0026#34;,\u0026#34;24\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) ClassMethod QryLabInfoExecute(ByRef qHandle As %Binary, mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Status { Set repid=$i(^CacheTemp) Set ind=1 s mi=$g(mi),flag=$g(flag) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; //*--------------------------------\u0026gt;*申请项目 s AddDate=$zd($p($h,\u0026#34;,\u0026#34;,1)-8,8) f s AddDate=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate)) q:AddDate=\u0026#34;\u0026#34; d .s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d ..//20秒以内的先不上传，防止没接收完 ..i (AddDate=$zd($h,8)),(($p($h,\u0026#34;,\u0026#34;,2)-AddTime)\u0026lt;20) q ..s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime,\u0026#34;\u0026#34;)) ..s labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) ..i \u0026#39;$l(labno) q ..s labnoInfo=..GetLabnoInfo(mi,labno) ..s patInfo=\u0026#34;\u0026#34; ..s FileName=$zd($h,8)+$p($h,\u0026#34;,\u0026#34;,2)_MiUploadDR ..//输出hpr文件 ..s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo(FileName_\u0026#34;.hpr\u0026#34;,labnoInfo,labno,\u0026#34;\u0026#34;) ..d Trace^MI.MIF000(mi,FileName_\u0026#34;.hpr\u0026#34;_\u0026#34;$$\u0026#34;_labno_\u0026#34;$$\u0026#34;_labnoInfo,\u0026#34;上传信息\u0026#34;) ..d OutputRow ..//输出OK文件 ..s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo(FileName_\u0026#34;.OK\u0026#34;,patInfo,labno,\u0026#34;\u0026#34;) ..d Trace^MI.MIF000(mi,FileName_\u0026#34;.OK\u0026#34;_\u0026#34;$$\u0026#34;_labno_\u0026#34;$$\u0026#34;_patInfo,\u0026#34;上传信息\u0026#34;) ..d OutputRow /* //*--------------------------------\u0026gt;*复查项目 s AddDate=$zd($p($h,\u0026#34;,\u0026#34;,1)-8,8) f s AddDate=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;U\u0026#34;),AddDate)) q:AddDate=\u0026#34;\u0026#34; d .s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;U\u0026#34;),AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d ..//20秒以内的先不上传，防止没接收完 ..i (AddDate=$zd($h,8)),(($p($h,\u0026#34;,\u0026#34;,2)-AddTime)\u0026lt;20) q ..s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;U\u0026#34;),AddDate,AddTime,\u0026#34;\u0026#34;)) ..s labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) ..i \u0026#39;$l(labno) q ..s labnoInfo=..GetLabnoInfo(mi,labno) ..s patInfo=\u0026#34;\u0026#34; ..s FileName=$zd($h,8)+$p($h,\u0026#34;,\u0026#34;,2)_MiUploadDR ..//输出hpr文件 ..s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo(FileName_\u0026#34;.hpr\u0026#34;,labnoInfo,labno,\u0026#34;\u0026#34;) ..d Trace^MI.MIF000(mi,FileName_\u0026#34;.hpr\u0026#34;_\u0026#34;$$\u0026#34;_labno_\u0026#34;$$\u0026#34;_labnoInfo,\u0026#34;上传信息\u0026#34;) ..d OutputRow ..//输出OK文件 ..s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo(FileName_\u0026#34;.OK\u0026#34;,patInfo,labno,\u0026#34;\u0026#34;) ..d Trace^MI.MIF000(mi,FileName_\u0026#34;.OK\u0026#34;_\u0026#34;$$\u0026#34;_labno_\u0026#34;$$\u0026#34;_patInfo,\u0026#34;上传信息\u0026#34;) ..d OutputRow */ Set qHandle=$lb(0,repid,0) Quit $$$OK OutputRow Set ColFields=\u0026#34;labno,labnoInfo,patInfo\u0026#34; Set ^CacheTemp(repid,ind)=##Class(LIS.Util.Common).TransListNull(Data,ColFields) Set ind=ind+1 quit } ClassMethod QryLabInfoClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set repid=$LIST(qHandle,2) Kill ^CacheTemp(repid) Quit $$$OK } ClassMethod QryLabInfoFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set AtEnd=$LIST(qHandle,1) Set repid=$LIST(qHandle,2) Set ind=$LIST(qHandle,3) Set ind=$o(^CacheTemp(repid,ind)) If ind=\u0026#34;\u0026#34; { Set AtEnd=1 Set Row=\u0026#34;\u0026#34; } Else { Set Row=^CacheTemp(repid,ind) } s qHandle=$lb(AtEnd,repid,ind) Quit $$$OK } /// 得到标本信息 /// w ##class(MI.MIFRemisolN).GetLabnoInfo(24,\u0026#34;24092600054\u0026#34;) ClassMethod GetLabnoInfo(miRowId, labno) As %String { S miRowId=$G(miRowId),labno=$G(labno) K PLIST Q:\u0026#39;$L(miRowId)||\u0026#39;$L(labno) 0 K ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$J,miRowId,labno) S visitNumberDR=$O(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) Q:\u0026#39;$L(visitNumberDR) 1 S visitNumberData=$G(^dbo.RPVisitNumberD(visitNumberDR)) Q:\u0026#39;$L(visitNumberData) 2 D ScanOne^MI.MIF000(miRowId,labno) S chl=\u0026#34;\u0026#34;,chlList=\u0026#34;\u0026#34;,hcg5d=\u0026#34;\u0026#34;,chlCnt=0 F { S chl=$O(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$J,miRowId,labno,chl)) i $l(chl)\u0026#39;=0 { S:$E(chl,1)=\u0026#34;A\u0026#34; chlCnt=chlCnt+1 S:chl=\u0026#34;A179\u0026#34; hcg5d=chl Continue:chl=\u0026#34;A179\u0026#34; S chlList=chlList_\u0026#34;^^^\u0026#34;_chl_\u0026#34;\\\u0026#34; } else { Q:\u0026#39;$L(chl) } } I $L(hcg5d) { I (chlCnt\u0026#39;=2)\u0026amp;\u0026amp;(chlCnt\u0026#39;=3)\u0026amp;\u0026amp;(chlCnt\u0026#39;=4) { S hcg5d=\u0026#34;A178\u0026#34; } S chlList=chlList_\u0026#34;^^^\u0026#34;_hcg5d_\u0026#34;\\\u0026#34; } S chlList=$E(chlList,1,$L(chlList)-1) Q:\u0026#39;$L(chlList) 3 S locationDR=$LG(visitNumberData,22),location=\u0026#34;\u0026#34; S:$L(locationDR) location=$LG($G(^dbo.BTLocationD(locationDR)),3) S doctorDR=$LG(visitNumberData,23),doctor=\u0026#34;\u0026#34;,doctorCode=\u0026#34;\u0026#34; I $L(doctorDR) { S doctor=$LG($G(^dbo.BTDoctorD(doctorDR)),3) S doctorCode=$LG($G(^dbo.BTDoctorD(doctorDR)),2) } S receiveDate=$LG(visitNumberData,66) S receiveTime=$LG(visitNumberData,67) S receiveUserDR=$LG(visitNumberData,68),receiveUser=\u0026#34;\u0026#34; S:$L(receiveUserDR) receiveUser=$LG($G(^dbo.SYSUserD(receiveUserDR)),3) S patientId=$LG(visitNumberData,3) S surName=$LG(visitNumberData,13) S givenName=$LG(visitNumberData,14) S patName=surName_givenName S:surName=givenName patName=surName S speciesDR=$LG(visitNumberData,15),species=\u0026#34;\u0026#34;,speciesCode=\u0026#34;\u0026#34; I $L(speciesDR) { S species=$LG($G(^dbo.BTSpeciesD(speciesDR)),3) S speciesCode=$LG($G(^dbo.BTSpeciesD(speciesDR)),2) } S admTypeDR=$LG(visitNumberData,4),admType=\u0026#34;\u0026#34; S:$L(admTypeDR) admType=$LG($g(^dbo.BTAdmissionTypeD(admTypeDR)),3) S bed=$LG(visitNumberData,27) S age=$LG(visitNumberData,18) S ageUnitDR=$LG(visitNumberData,19),ageUnit=\u0026#34;\u0026#34;,ageUnitCode=\u0026#34;\u0026#34; I $L(ageUnitDR) { S ageUnit=$LG($g(^dbo.BTAgeUnitD(ageUnitDR)),3) S ageUnitCode=$LG($g(^dbo.BTAgeUnitD(ageUnitDR)),2) } S collectDate=$LG(visitNumberData,51) S collectTime=$LG(visitNumberData,52) S collectDateTime=collectDate_##Class(LIS.Core.Util).CvtClientTime(collectTime,\u0026#34;HHMMSS\u0026#34;) S diagnosis=$LG(visitNumberData,28) S birthday=$LG(visitNumberData,16) S:\u0026#34;MF\u0026#34;\u0026#39;[speciesCode speciesCode=\u0026#34;\u0026#34; S:\u0026#34;YMD\u0026#34;\u0026#39;[ageUnitCode ageUnitCode=\u0026#34;\u0026#34; S PLIST=0 S PLIST($I(PLIST))=\u0026#34;H|\\^\u0026amp;|||LIS^1|||||REMISOL||P|1|\u0026#34;_$ZD($H,8)_$TR($ZT($P($H,\u0026#34;,\u0026#34;,2),1),\u0026#34;:\u0026#34;) S patRecord=\u0026#34;P|1||||||||||||||||||||||||||||||||||\u0026#34; S $P(patRecord,\u0026#34;|\u0026#34;,4)=patientId s givenName=\u0026#34;\u0026#34; S $P(patRecord,\u0026#34;|\u0026#34;,6)=surName_\u0026#34;^\u0026#34;_givenName_\u0026#34;^^^\u0026#34; S $P(patRecord,\u0026#34;|\u0026#34;,8)=birthday_\u0026#34;^\u0026#34;_age_\u0026#34;^\u0026#34;_ageUnitCode S $P(patRecord,\u0026#34;|\u0026#34;,9)= speciesCode S $P(patRecord,\u0026#34;|\u0026#34;,14)= doctorCode S $P(patRecord,\u0026#34;|\u0026#34;,22)= diagnosis //诊断 S $P(patRecord,\u0026#34;|\u0026#34;,26)=location S PLIST($I(PLIST))=patRecord S order=\u0026#34;O|1|\u0026#34;_labno_\u0026#34;||\u0026#34;_chlList_\u0026#34;|||||||||||||||||||||\u0026#34; S specType=..GetSpecimen(labno) //S specTypeId=\u0026#34;S\u0026#34; // 样品类型，如血清、血浆、尿液等。0-血清，1-血浆，2-尿液，3-脑脊液，4-胃液，5-胸水，6-腹水，7-其他: I specType[\u0026#34;血清\u0026#34; { S specTypeId=\u0026#34;0\u0026#34; } ELSEIF specType[\u0026#34;血浆\u0026#34; { S specTypeId=\u0026#34;1\u0026#34; } ELSEIF specType[\u0026#34;尿\u0026#34; { S specTypeId=\u0026#34;2\u0026#34; } ELSEIF specType[\u0026#34;脑脊液\u0026#34; { S specTypeId=\u0026#34;3\u0026#34; } ELSEIF specType[\u0026#34;胃液\u0026#34; { S specTypeId=\u0026#34;4\u0026#34; } ELSEIF specType[\u0026#34;胸水\u0026#34; { S specTypeId=\u0026#34;5\u0026#34; } ELSEIF specType[\u0026#34;腹水\u0026#34; { S specTypeId=\u0026#34;6\u0026#34; } ELSE { S specTypeId=\u0026#34;7\u0026#34; } S $P(order,\u0026#34;|\u0026#34;,6)=\u0026#34;R\u0026#34; //priority:R=Routine,S=Stat S $P(order,\u0026#34;|\u0026#34;,8)=collectDateTime S $P(order,\u0026#34;|\u0026#34;,12)=\u0026#34;A\u0026#34; //Action Code: A=Add,C=Clear,Q=Control S $P(order,\u0026#34;|\u0026#34;,16)=specTypeId S PLIST($I(PLIST))=order S PLIST($I(PLIST))=\u0026#34;L|1|\u0026#34; s del=\u0026#34;[13][10]\u0026#34; s ret=\u0026#34;\u0026#34; s seq=\u0026#34;\u0026#34; f s seq=$o(PLIST(seq)) q:seq=\u0026#34;\u0026#34; d .s ret=ret_PLIST(seq)_del Q ret } /// 得到标本类型 ClassMethod GetSpecimen(labno As %String) As %String { s ret=\u0026#34;\u0026#34; s labno=\u0026#34; \u0026#34;_labno i \u0026#39;$d(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,labno)) q ret s RowId=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,labno,\u0026#34;\u0026#34;)) s obj=##class(dbo.RPVisitNumber).%OpenId(RowId) s spDr=obj.SpecimenDR s spDesc=\u0026#34;\u0026#34; i $l(spDr) d .s objSp=##class(dbo.BTSpecimen).%OpenId(spDr) .s spDesc=objSp.IName .s ret=spDesc q ret } /// w ##Class(MI.MIFBeckmanRemisol).GetPatInfo(6,1001367) ClassMethod GetPatInfo(mi, labno) As %String { s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$lg(RPVisitNumberData,3) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),3) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$lg(RPVisitNumberData,28) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; s Patna=PatName ;病人姓名 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode q RetString } // 监听做上传操作后调用改方法设置标本上传表状态 ClassMethod SaveSDFMTHD(mi, labno, epis, filename, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi),labno=$g(labno),epis = $g(epis),filename=$g(filename) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q s ret=##Class(MI.MachineUpload).SetSendFlag(mi,labno,\u0026#34;S\u0026#34;,filename) q } /// 保存图片Base64串到仪器 /// mi:仪器主键(*必填) /// epis:流水号(*必填) /// ImageClass:图片类别(*必填) /// base64Stream:图片的Base64流(*必填) /// fileName:文件名 /// ftpFfolderName:文件服务的文件夹名称 /// w ##Class(MI.MIFBeckmanRemisol).SaveBase64ToMachineTest() ClassMethod SaveBase64ToMachineTest() { s charStream=##class(%GlobalCharacterStream).%New() d charStream.Write(\u0026#34;Qk02fQAAAAAAADYEAAAoAAAAsAAAALAAAAABAAgAAAAAAAB5AAB0EgAAdBIAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAICAgADA3MAA8MqmAKo/KgD/PyoAAF8qAFVfKgCqXyoA/18qAAB/KgBVfyoAqn8qAP9/KgAAnyoAVZ8qAKqfKgD/nyoAAL8qAFW/KgCqvyoA/78qAADfKgBV3yoAqt8qAP/fKgAA/yoAVf8qAKr/KgD//yoAAABVAFUAVQCqAFUA/wBVAAAfVQBVH1UAqh9VAP8fVQAAP1UAVT9VAKo/VQD/P1UAAF9VAFVfVQCqX1UA/19VAAB/VQBVf1UAqn9VAP9/VQAAn1UAVZ9VAKqfVQD/n1UAAL9VAFW/VQCqv1UA/79VAADfVQBV31UAqt9VAP/fVQAA/1UAVf9VAKr/VQD//1UAAAB/AFUAfwCqAH8A/wB/AAAffwBVH38Aqh9/AP8ffwAAP38AVT9/AKo/fwD/P38AAF9/AFVffwCqX38A/19/AAB/fwBVf38Aqn9/AP9/fwAAn38AVZ9/AKqffwD/n38AAL9/AFW/fwCqv38A/79/AADffwBV338Aqt9/AP/ffwAA/38AVf9/AKr/fwD//38AAACqAFUAqgCqAKoA/wCqAAAfqgBVH6oAqh+qAP8fqgAAP6oAVT+qAKo/qgD/P6oAAF+qAFVfqgCqX6oA/1+qAAB/qgBVf6oAqn+qAP9/qgAAn6oAVZ+qAKqfqgD/n6oAAL+qAFW/qgCqv6oA/7+qAADfqgBV36oAqt+qAP/fqgAA/6oAVf+qAKr/qgD//6oAAADUAFUA1ACqANQA/wDUAAAf1ABVH9QAqh/UAP8f1AAAP9QAVT/UAKo/1AD/P9QAAF/UAFVf1ACqX9QA/1/UAAB/1ABVf9QAqn/UAP9/1AAAn9QAVZ/UAKqf1AD/n9QAAL/UAFW/1ACqv9QA/7/UAADf1ABV39QAqt/UAP/f1AAA/9QAVf/UAKr/1AD//9QAVQD/AKoA/wAAH/8AVR//AKof/wD/H/8AAD//AFU//wCqP/8A/z//AABf/wBVX/8Aql//AP9f/wAAf/8AVX//AKp//wD/f/8AAJ//AFWf/wCqn/8A/5//AAC//wBVv/8Aqr//AP+//wAA3/8AVd//AKrf/wD/3/8AVf//AKr//wD/zMwA/8z/AP//MwD//2YA//+ZAP//zAAAfwAAVX8AAKp/AAD/fwAAAJ8AAFWfAACqnwAA/58AAAC/AABVvwAAqr8AAP+/AAAA3wAAVd8AAKrfAAD/3wAAVf8AAKr/AAAAACoAVQAqAKoAKgD/ACoAAB8qAFUfKgCqHyoA/x8qAAA/KgBVPyoA8Pv/AKSgoACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wu0026#34;) d charStream.Write(\ux8fHx8fEAAADxAAAA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPHxAPHx8fEAAPEA8QAA8QDxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QDxAADx8fHx8fHx8fHxAPHx8QAA8fEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8fHxAPHx8fHx8fHx8fEA8QDxAAAAAADxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEA8fHx8QDx8fHx8fHx8fEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEA8QAAAADx8fHx8fHx8QDx8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QAA8fHx8fEA8fHx8fHxAPEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QDxAAAAAPHx8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEAAPHx8fHxAPEA8fEA8fEAAPE\u0026#34;) d charStream.Write(\u0026#34;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAAAAAPEAAPEA8QAA8QDxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QDx8QDx8QAA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8fHx8QAAAPEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAADx8fEA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAADxAAAAAPEAAAAAAPEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QAA8fEA8fHxAAAAAADxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8QAAAAAAAADxAADxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADx8QAA8QAAAAAA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEA8fEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEAAPEA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAPEA8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\u0026#34;) d charStream.Write(\u0026#34;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgICAAACAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgAAAgAAAgIAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAgICAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAC+gACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAgIAAgAAAPoCAAIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD6APr6AvoAAgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAICAgICAAACAPr6AAIAAgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA+voAAgAAAgD6AAAA+gIAAgAAAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAD6AAACAAIAAAIAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgD6AAAAAPr6AgL6AAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAPoC+gAC+gAAAgAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvoAAAD6AgAC+gD6+gD6AgIAAgIAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6+gIAAPr6+gD6+gL6AAD6AAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAACAPoA+gD6+vr6AgL6AAICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPoAAAACAvoCAgD6AvoCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAL6APoCAgAC+vr6+gICAAAAAgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+gACAgAAAgIAAAACAgACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6+gAC+gIC+voC+gIAAAD6AAIAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIAAvr6+gAAAgICAgD6AAACAPoCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPoAAgD6+voCAvr6AvoAAgIAAgACAAAAAAAAAAAAAAAAAAAAAAAAAAA\u0026#34;) d charStream.Write(\u0026#34;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAICAAACAAACAgD6+gIA+voC+gACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+gIAAAICAAIAAAL6AvoAAgIAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgIA+gAAAgL6+vr6+gACAAICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAQABAQAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAIA+gAA+voCAPoAAgIA+gACAAICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAEAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACAvoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAQAAAAABAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6+gICAgIAAPr6+gAAAAAAAAIAAgAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAAACAAAAAAL6AgICAAACAgAAAAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAABAAABAAAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL6AgACAgD6AAIA+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAAAAAAAAAgACAgIAAAIAAAACAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAABAAAAAAD5AQAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAICAAIAAPoAAgL6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQABAAAAAAAAAAAAAQAAAAABAAEAAAABAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAD6AAAAAAAAAAAAAAAAAgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAgAAAAIAAgAAAgAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAQEAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgAAAAIAAAAAAAAAAgIAAAAA+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAA+QAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgACAPogAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\u0026#34;) d charStream.Write(\ugAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9AAAFBQAFAAX9AAAAAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAABgAAAAAGAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAFBf0ABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAYGAAAABgYGAAAAAAAGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFAAUAAAUAAAAFAAAFBQUAAAAAAAAAAAAAAAAAAAYAAAAABgAAAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFAAUAAAUABQAAAAUFAAAAAAAFAAAAAAAAAAAAAAAAAAAAAP4GBgYGBv4AAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFBQD9AAAFBQAAAP0AAAUAAP0AAAUFAAAAAAAAAAAAAAAAAP4GAAAABgb+BgYABgAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAF/QX9BQAFBf0AAAAABQAAAAAAAAAAAAAAAAAABgD+BgAABgYGAP4GBgYAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/QAFBQD9/f0ABQAFBf0AAAAFAAAAAAAAAAAAAAAAAAAABgb+AAD+BgYGBv4GAP4G/gYGAAAGBgYAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQD9AAX9/QAABQAFBQAAAP0ABQAAAAAAAAYABgAGAAb+Bgb+AP4ABgb+/v4GBgAGAAAGAAYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAP0F/QD9Bf39AP39AAAAAAAFAAAAAAAAAAAABgYABgYGAP7+/v4GBgb+Bv4ABgAABgAGBgYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAFAAX9/f39AAX9AAUF/QUAAAAAAAAAAAAABgAAAAAABgYGBv4G/v7+/v7+/v7+/v7+AAYGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUF/QX9AP39BQAFAP39/QUA/QAAAAAAAAAGAAAAAAAGAP4GBv7+/v7+/v7+/v7+/gYGBgb+BgD+AAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBQX9AAUABQUABf0AAP0AAAX9AAAFAAAAAAAGBgYABv7+/v7+AAb+/v7+/v7+/v7+/v4GBv4GAAb+AAAGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAA/QUFAAX9/QX9AP0FBQAA/QAAAAAAAAAAAAYGAAD+AAD+/v7+/v7+/v7+/v7+/v7+Bv4GBgYAAAAGBgAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAX9Bf39AAD9BQAA/QD9/QAABQAFAAYAAAAABgAG/gYG/v7+/v7+/v7+/v7+/v7+/v4GBv7+AAYGBgAAAAYGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF/QAF/\u0026#34;) d charStream.Write(\u0026#34;QUF/QAFBf0AAAAFAAAAAAAAAAAAAAAAAAAAAP7+/gb+/v7+/v7+/v7+/v7+/v7+/v4GAAYGAAAGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/f0A/QD9AAAFBQAABQAAAAAAAAAAAAAAAAAABgAGAP4G/v7+/v7+/v7+/v7+/v7+/v7+/v4G/gAGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAA/QUAAAAFAAD9BQAABQAAAAAAAAAAAAAAAAYABgYGBgb+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/gAABgYGAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP0FAAUABQAA/QX9BQAFBQAAAAAAAAAAAAAAAAAAAAAG/v7+/gb+/v7+/v7+/v7+/v7+/v7+/v7+/gYGBgYGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUAAAD9/QX9BQAAAAAABQAAAAAAAAAAAAYGAAAAAAYA/gD+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v4ABgYAAAYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFAAAAAAAAAAAABgYAAAYA/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v4GAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAUFAAAABQAAAAAAAAAAAAUAAAAAAAAABgAAAAYAAAb+/gYGBv7+/v7+/v7+/v7+/v7+/v7+Bv7+/v4GBgAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAFAAAAAAAAAAAABgYGAAAGBgYGBv7+/v7+/v7+/v7+/v7+/v4G/v7+BgAABgYGAAYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAABgYGBv7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/gYA/gAG/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYG/v7+/v7+/v7+/v7+/v7+/v7+Bgb+AAYGAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgYABgAG/v4G/gb+/v7+/v7+/v7+/v7+BgAGBgAGAAYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYABv4G/v4A/v7+/v4G/v7+/v7+/gb+BgAABgYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYABgAA/v7+/v7+BgYA/v4GBv4GBv4GAAYGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYABgYAAP7+/v4G/v4GBgYGBgYGBgYAAAAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYABgYABgYABgYAAAb+/gAGBgYABgYGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAGBgYAAAYGBgAGAAYABgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAABgAAAAAABgAGBgAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAAAAYAAAAGBgu0026#34;) d charStream.Write(\uu0026#34;) d charStream.Write(\uu0026#34;) d charStream.Write(\u0026#34;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\u0026#34;) s mi=16 s epis=999 s ret=##Class(MI.Common.MIFBase).SaveBase64ToMachine(mi,epis,\u0026#34;DIFF\u0026#34;,charStream,epis_\u0026#34;-DIFF.bmp\u0026#34;,\u0026#34;ZLZ\u0026#34;) i ret\u0026#39;=1 d Trace^MI.MIF000(mi,\u0026#34;错误\u0026#34;_ret,\u0026#34;H\u0026lt;--M\u0026#34;) q ret } /// 转移标本 /// w ##Class(MI.MIFRemisolN).TransMachineGroup(1,9000000071,\u0026#34;DXI800\u0026#34;) /// w ##Class(MI.MIFRemisolN).TransMachineGroup(1,9000000071,\u0026#34;AU5800\u0026#34;) ClassMethod TransMachineGroup(mi, epis, machineName) { s ret=\u0026#34;\u0026#34; i $l(epis)\u0026lt;7 d .s epis=$$GetLabnoByEpis(mi,epis) s date=$zd($h,8) s WGMachineID=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) s VisitnumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,epis,\u0026#34;\u0026#34;)),ReportDR=\u0026#34;\u0026#34; i $d(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitnumberDR,WGMachineID,1)) d .s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitnumberDR,WGMachineID,1,\u0026#34;\u0026#34;),-1) //----------------------转移标本 i machineName=\u0026#34;AU5800\u0026#34; d .s TransMachineGroupDR=61 .s ParamList=TransMachineGroupDR_\u0026#34;^@\u0026#34;_ReportDR .s ret=##Class(LISSP.DHCRPVisitNumberReport).TransMachineGroup(ParamList,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P0\u0026gt;\u0026lt;/P0\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;8280^18^0^2^1\u0026#34;,\u0026#34;\u0026#34;) .;i ret[\u0026#34;流水号已存在\u0026#34; d\t//YHR 20230101 如果流水号冲突是否获取最大流水号保证转移成功 ..s objReport=##class(dbo.RPVisitNumberReport).%OpenId(ReportDR) ..s NewEpis=##Class(LISSP.DHCRPVisitNumberReport).GetMaxEpisodeNo(TransMachineGroupDR,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P0\u0026gt;\u0026#34;_$zd($h,3)_\u0026#34;\u0026lt;/P0\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,$c(0)) ..s objReport.EpisodeNo=NewEpis ..s sc=objReport.%Save() ..s ret=##Class(LISSP.DHCRPVisitNumberReport).TransMachineGroup(ParamList,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P0\u0026gt;\u0026lt;/P0\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;8280^18^0^2^1\u0026#34;,\u0026#34;\u0026#34;) i machineName=\u0026#34;DXI800\u0026#34; d .s TransMachineGroupDR=71 .s ParamList=TransMachineGroupDR_\u0026#34;^@\u0026#34;_ReportDR .s ret=##Class(LISSP.DHCRPVisitNumberReport).TransMachineGroup(ParamList,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P0\u0026gt;\u0026lt;/P0\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;8280^18^0^2^1\u0026#34;,\u0026#34;\u0026#34;) .;i ret[\u0026#34;流水号已存在\u0026#34; d ..s objReport=##class(dbo.RPVisitNumberReport).%OpenId(ReportDR) ..s NewEpis=##Class(LISSP.DHCRPVisitNumberReport).GetMaxEpisodeNo(TransMachineGroupDR,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P0\u0026gt;\u0026#34;_$zd($h,3)_\u0026#34;\u0026lt;/P0\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,$c(0)) ..s objReport.EpisodeNo=NewEpis ..s sc=objReport.%Save() ..s ret=##Class(LISSP.DHCRPVisitNumberReport).TransMachineGroup(ParamList,\u0026#34;\u0026lt;Data\u0026gt;\u0026lt;P10\u0026gt;\u0026lt;/P10\u0026gt;\u0026lt;P6\u0026gt;\u0026lt;/P6\u0026gt;\u0026lt;P3\u0026gt;\u0026lt;/P3\u0026gt;\u0026lt;P7\u0026gt;\u0026lt;/P7\u0026gt;\u0026lt;P12\u0026gt;\u0026lt;/P12\u0026gt;\u0026lt;P9\u0026gt;\u0026lt;/P9\u0026gt;\u0026lt;P4\u0026gt;\u0026lt;/P4\u0026gt;\u0026lt;P1\u0026gt;\u0026lt;/P1\u0026gt;\u0026lt;P0\u0026gt;\u0026lt;/P0\u0026gt;\u0026lt;P2\u0026gt;\u0026lt;/P2\u0026gt;\u0026lt;P14\u0026gt;\u0026lt;/P14\u0026gt;\u0026lt;P11\u0026gt;\u0026lt;/P11\u0026gt;\u0026lt;P13\u0026gt;\u0026lt;/P13\u0026gt;\u0026lt;P8\u0026gt;\u0026lt;/P8\u0026gt;\u0026lt;P5\u0026gt;\u0026lt;/P5\u0026gt;\u0026lt;/Data\u0026gt;\u0026#34;,\u0026#34;8280^18^0^2^1\u0026#34;,\u0026#34;\u0026#34;) q ret GetLabnoByEpis(mi,Epis) s ret=\u0026#34;\u0026#34;,mi=$g(mi) s date=$zd($h,8) i \u0026#39;$l(mi) q Epis s WGMachineID=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) i \u0026#39;$l(WGMachineID) q Epis i $d(^dbo.RPVisitNumberReportI(\u0026#34;IndexEpisodeNo\u0026#34;,date,WGMachineID,##Class(LIS.Util.Common).IndexData(Epis))) { s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexEpisodeNo\u0026#34;,date,WGMachineID,##Class(LIS.Util.Common).IndexData(Epis),\u0026#34;\u0026#34;),-1) S VisitNumberDR=$LG($G(^dbo.RPVisitNumberReportD(ReportDR)),2) s ret=$lg(^dbo.RPVisitNumberD(VisitNumberDR),2) } q ret } } 通过串口网口主动上传 上传和下载为不同的串口或端口 示例代码(西门子流水线) 仪器为两个接口，一个接口上传，一个接口接收数据解析数据。上传数据为在 main 调用 Build2 方法循环调用读取 dbo.RPMachineUpload 表中的数据。\n接收数据 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 MIFNYSIMRec(mi) ; 7/17/14 ; ASTM protocol - 西门子流水线(MCR) s mi=$g(mi) i \u0026#39;$l(mi) q s ^TMPMACHDATA1(mi,11)=mi s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),17) //端口号 S $ECODE=\u0026#34;\u0026#34; //捕获运行时错误,并显示 //控制字符 S stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4) S lf=$c(10),cr=$c(13),nak=$c(21),(result,epis)=\u0026#34;\u0026#34;,etb=$c(23) s isDebug=1,iError=0 s ^TMPMACHDATA1(mi,10)=mi i $$StartUTF8^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q s ^TMPMACH10(mi,50)=$h c Port q Main ;s ^MIFSIMENSTRecive=$zdt($h,3) S $ZT=\u0026#34;RuntimeError\u0026#34; r *R:10 e d q .;d BUILD2 i $c(R)\u0026#39;=enq Q s AllRecord=\u0026#34;\u0026#34; d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) d ACK f r *R:10 q:$c(R)=eot d .i $c(R)\u0026#39;=stx q .s record=$$Read^MI.MIF000(mi,\u0026#34;\u0026#34;,lf) q:\u0026#39;$l(record) .s record=$e(record,2,$l(record)-1) .d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) .i $l(record,etb)\u0026gt;1 s AllRecord=AllRecord_$p($e(record,1,$l(record)-1),etb,1) .i $l(record,etx)\u0026gt;1 s AllRecord=AllRecord_$p($e(record,1,$l(record)-1),etx,1) .d ACK .s type=$tr($p(record,\u0026#34;|\u0026#34;,1),\u0026#34; \u0026#34;) .i type=\u0026#34;M\u0026#34; d q ..s Intype=$tr($p($p(record,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ..s Inlabno=$tr($p($p(record,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,2),\u0026#34; \u0026#34;) ..d Trace^MI.MIF000(mi,Inlabno,\u0026#34;Inlabno\u0026#34;) ..try{s ret=##class(MI.Special.AutomaticReceipt).ZDHS(mi,Inlabno)}catch{}\t//YHR 20230910 生化流水线自动核收 d Trace^MI.MIF000(mi,$s($c(R)=eot:\u0026#34;EOT\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) s k=1 d Trace^MI.MIF000(mi,AllRecord,\u0026#34;AllRecord\u0026#34;) i $c(R)=eot,$l(AllRecord) d .s (mid,sample,epis,surname,rec,res,result,date,time,QC,flag,machiecode)=\u0026#34;\u0026#34; .f i=1:1:$l(AllRecord,cr) d ..s rec=$p(AllRecord,cr,i) ..s type=$tr($p(rec,\u0026#34;|\u0026#34;),\u0026#34; \u0026#34;) ..i type=\u0026#34;H\u0026#34; d q ..i type=\u0026#34;M\u0026#34; d q ...s Intype=$tr($p($p(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ...s Inlabno=$tr($p($p(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,2),\u0026#34; \u0026#34;) ...d Trace^MI.MIF000(mi,Inlabno,\u0026#34;Inlabno\u0026#34;) ...;try{s ret=##class(MI.Special.AutomaticReceipt).ZDHS(mi,Inlabno)}catch{}\t//YHR 20230910 生化流水线自动核收 ..i type=\u0026#34;O\u0026#34; d q ...s epis=$tr($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34; \u0026#34;) ..i type=\u0026#34;R\u0026#34; d q ...s code=$p($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,4),\u0026#34;/\u0026#34;,1) ...s flag=$p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,8) ...s machiecode=$p($p(rec,\u0026#34;|\u0026#34;,14),\u0026#34;_\u0026#34;,1) ...i machiecode=\u0026#34;CentaurXP\u0026#34;,flag\u0026#39;=\u0026#34;DOSE\u0026#34; Q ...//R|1|^^^Glu^Neat^1.0^^^N|7.70|||||||^batch|20191116093550||Advia2400_1【13】【3】C2 ...s MachID=$P($p(rec,\u0026#34;|\u0026#34;,14),$C(13),1) ...s res=$p(rec,\u0026#34;|\u0026#34;,4) ...I res=\u0026#34;No Result\u0026#34; s res=\u0026#34;\u0026#34; ...i \u0026#39;$l(code) q ...i \u0026#39;$l(res) q ...s result=result_code_ResultDeli_res_ItemDeli ...s DateStr=$p(rec,\u0026#34;|\u0026#34;,13) ...s:\u0026#39;$L(DateStr) DateStr=$p(rec,\u0026#34;|\u0026#34;,12) ...i $l(DateStr) d ....s date=$zdh($e(DateStr,1,4)_\u0026#34;-\u0026#34;_$e(DateStr,5,6)_\u0026#34;-\u0026#34;_$e(DateStr,7,8),3) ....s time=($e(DateStr,9,10)*3600)+($e(DateStr,11,12)*60+$e(DateStr,13,14)) ..s k=k+1 ..i type=\u0026#34;L\u0026#34; d Last q q Last ;s resultmi=40 d Trace^MI.MIF000(mi,mi,\u0026#34;仪器rowid\u0026#34;) d Trace^MI.MIF000(mi,date_\u0026#34;^\u0026#34;_time_\u0026#34;^\u0026#34;_epis_\u0026#34;^:\u0026#34;_result,\u0026#34;Save in SIMENS\u0026#34;) i $l(epis),$l(result) d Save^MI.MIF000(mi,epis,result,date,time,QC) s (epis,result,date,time,QC)=\u0026#34;\u0026#34; ///标本核收 ; i $l(epis),\u0026#39;$d(^DHCUploadAllBAK(\u0026#34;B\u0026#34;,epis)) s retVal=$$ReceiveLabno^MI.MIF000(28,epis,\u0026#34;\u0026#34;) q RuntimeError h 10 s iError=iError+1 d Trace^MI.MIF000(mi,\u0026#34;Error Code:\u0026#34;_$ECODE_\u0026#34;,Error:\u0026#34;_$ZERROR,\u0026#34;Runtime Error\u0026#34;) i iError\u0026gt;100 s ret=$$Stop^MI.MIF000(mi) Q ///CreateDate： 20140717 ///Description： 构建医嘱列表 ///Table DHC_LoadSpecimen ///Input：\t///Output：\t///Return：\t///Others：DHCLoadSpecimen(0,\u0026#34;DateTime\u0026#34;,\u0026#34;TDMTS\u0026#34;,\u0026#34;C\u0026#34;,62301,42467,\u0026#34;T623010010\u0026#34;,\u0026#34;T101\u0026#34;,1) /// ^DHCLoadSpecimen({DHC_LoadSpecimen.DLSP_LabNo},{DHC_LoadSpecimen.DLSP_TS},{DHC_LoadSpecimen.DLSP_TSCNT},\u0026#34;TC\u0026#34;,{DLST_TestCode}) /// ^DHCLoadSpecimen({DLSP_LabNo},{DLSP_TS},{DLSP_TSCNT}) /// W $$BUILD2^DEBUG BUILD2 i $d(^DHCENQ(1)) d .d SendENQ .k ^DHCENQ Q //wwh,20140812,不上传标本 K ^TMP($zn,$j) I \u0026#39;$D(^DHCLoadSpecimen(0,\u0026#34;DateTime\u0026#34;,mi,\u0026#34;C\u0026#34;,+$h)) H 10 Q S SIMTT=\u0026#34;\u0026#34; F S SIMTT=$o(^DHCLoadSpecimen(0,\u0026#34;DateTime\u0026#34;,mi,\u0026#34;C\u0026#34;,+$h,SIMTT)) Q:SIMTT=\u0026#34;\u0026#34; D .S SIMEpis=\u0026#34;\u0026#34; F S SIMEpis=$o(^DHCLoadSpecimen(0,\u0026#34;DateTime\u0026#34;,mi,\u0026#34;C\u0026#34;,+$h,SIMTT,SIMEpis)) Q:SIMEpis=\u0026#34;\u0026#34; D ..S SIMTS=\u0026#34;\u0026#34; F S SIMTS=$O(^DHCLoadSpecimen(0,\u0026#34;DateTime\u0026#34;,mi,\u0026#34;C\u0026#34;,+$h,SIMTT,SIMEpis,SIMTS)) Q:SIMTS=\u0026#34;\u0026#34; D ...S epis=SIMEpis ...S SIMAck=$$BUILD() ...;;;I (SIMAck=3)!(SIMAck=6) D ...I SIMAck=0 D ....;;S err=$$UpdSendStatus^DHCLABLoadSpecimen(mi,epis,1,SIMTS) ....S err=$$UpdSendStatus^DHCLABLoadSpecimen(mi,epis,1) ...E D ....S err=$$UpdSendStatus^DHCLABLoadSpecimen(mi,epis,0) Q BUILD() S episx=epis,epis=$P(epis,\u0026#34;-\u0026#34;,1),suffix=\u0026#34;\u0026#34;,RetAck=1 S ^TMPsim(1)=epis I $l(epis),\u0026#39;$D(^TEPI(epis,1)) S suffix=$E(epis,$L(epis)),epis=$E(epis,1,$L(epis)-1) I $L(epis),\u0026#39;$D(^TEPI(epis,1)) Q S ^TMPsim(2)=epis_\u0026#34;,\u0026#34;_mi_\u0026#34;,\u0026#34;_suffix ;;;S err=$$CreateTCList^MIF000(mi,epis,SIMTS) ;创建上传医嘱列表 S err=$$CreateTCList^MIF000(mi,epis) ;创建上传医嘱列表 M ^TMPCHL(7)=^TMP(\u0026#34;MIF-SINGLE\u0026#34;,$j) Q:\u0026#39;$D(^TMP(\u0026#34;MIF-SINGLE\u0026#34;,$j,mi,epis_suffix)) M ^TMPCHL(2)=^TMP(\u0026#34;MIF-SINGLE\u0026#34;,$j) S (surn,givn,sex,dob,date,urno,age,loc)=\u0026#34;\u0026#34; ; check for entered/pre-entered patient details K PLIST I \u0026#39;$$select^LVBEPVIS(epis,\u0026#34;Y\u0026#34;) D .F j=\u0026#34;surn;3\u0026#34;,\u0026#34;givn;4\u0026#34;,\u0026#34;sex;5\u0026#34;,\u0026#34;dob;6\u0026#34;,\u0026#34;date;12\u0026#34;,\u0026#34;urno;20\u0026#34;,\u0026#34;age;26\u0026#34;,\u0026#34;loc;66\u0026#34; S @($P(j,\u0026#34;;\u0026#34;))=$g(PLIST($p(j,\u0026#34;;\u0026#34;,2))) K PLIST S sex=$P(sex,$c(1),1) s:sex=\u0026#34;\u0026#34; sex=\u0026#34;M\u0026#34; S urno=$p(urno,$c(1),1) I givn=surn s givn=\u0026#34;\u0026#34; S diag=$P($G(^TEPI(epis,8)),\u0026#34;\\\u0026#34;,15) ;;; 诊断 S SpecType=$$GetSpecType(epis) ;;; 标本 I $l(epis),$D(^TEPI(epis)) D .D scanone^MIF000(mi,epis) ;^TMP(\u0026#34;MIF-SINGLE\u0026#34;,208912,\u0026#34;AH7471\u0026#34;,\u0026#34;A611071030\u0026#34;,1)= .S tcx=\u0026#34;\u0026#34; .S chl=\u0026#34;\u0026#34; F S chl=$o(^TMP(\u0026#34;MIF-SINGLE\u0026#34;,$j,mi,epis,chl)) Q:chl=\u0026#34;\u0026#34; D ..;s tcs=tcs_\u0026#34;^^^\u0026#34;_chl_\u0026#34;/\\\u0026#34; ..S tcx=tcx_\u0026#34;^^^\u0026#34;_chl_\u0026#34;^0\\\u0026#34; .S tcx=$e(tcx,1,$L(tcx)-1) .I \u0026#39;$L(tcx) S tcx=\u0026#34;^^^^^^0\u0026#34; .S xx=$$extdate2^SSUTIL4($h),date=$p(xx,\u0026#34;/\u0026#34;,3)_$p(xx,\u0026#34;/\u0026#34;,2)_$p(xx,\u0026#34;/\u0026#34;,1) .S xx=$$exttime^SSUTIL4($p($h,\u0026#34;,\u0026#34;,2)),time=$p(xx,\u0026#34;:\u0026#34;,1)_$p(xx,\u0026#34;:\u0026#34;,2)_\u0026#34;00\u0026#34; .S temepis=\u0026#34;\u0026#34; .;1H|\\^\u0026amp;|||BSLIS^V3.00|||||||P|1\u0026lt;CR\u0026gt; .S str=\u0026#34;1H|\\^\u0026amp;|||BSLIS^V3.00|||||host|TSDWN^REPLY|P|1\u0026#34;_cr ;头信息 .;2P|1|0010332409|0010332409||Doe^JohnlSmith||19150826|F|||||||||||||||||5500|||||||||\u0026lt;CR\u0026gt; .S str=str_\u0026#34;2P|1\u0026#34;_cr ;病人信息 .S str=str_\u0026#34;2P|1\u0026#34;_cr .I epis=\u0026#34;N\u0026#34; s epis=\u0026#34;\u0026#34; .;3O|1|112448100||^^^TP^^^0\\^^^ALB^^^0|R||20110826112206||||A|hep|lipemic||Serum||||||||||Q\u0026lt;CR\u0026gt; .S str=str_\u0026#34;3O|1|\u0026#34;_epis_\u0026#34;||\u0026#34;_tcx_\u0026#34;|R||\u0026#34;_date_time_\u0026#34;||||A|hep|lipemic||\u0026#34;_SpecType_\u0026#34;||||||||||\u0026#34; .S str=str_\u0026#34;Q\u0026#34;_cr .;4L|1\u0026lt;CR\u0026gt; .S str=str_\u0026#34;4L|1|\u0026#34;_cr .S RetAck=$$Send(epis,str) .K ^TMIF(\u0026#34;MIF_SINGLE\u0026#34;,$j,mi,epis) S ^TMPsim(mi,$H,epis)=str_\u0026#34;||\u0026#34;_RetAck Q RetAck Send(epis,str) ; send list of orders if exists W enq,*-3 d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) S ret=1 F j=1:1:10 R *R:1 I $c(R)=ack!($c(R)=enq) Q d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;1H\u0026lt;--M\u0026#34;) I $c(R)=enq Q ret I $c(R)\u0026#39;=ack W eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) Q ret I $L(str)\u0026gt;241 D .S str1=$e(str,1,241) .S ret=$$SEND(str1,1) .S str2=\u0026#34;2\u0026#34;_$E(str,242,$L(str)) .S ret=$$SEND(str2,0) E D .S ret=$$SEND(str,0) ;f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q ;d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;2H\u0026lt;--M\u0026#34;) W eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) Q ret SEND(str,flag) ; send string to instrument I flag=1 D .S str=str_etb .S chsum=$$CHSUM(str) E D .S str=str_etx .S chsum=$$CHSUM(str) W stx,str,chsum,cr,lf,*-3 d Trace^MI.MIF000(mi,str_chsum,\u0026#34;H--\u0026gt;M\u0026#34;) F j=1:1:6 R *R:1 I ($c(R)=ack)!($c(R)=eot) Q I $c(R)=ack d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) Q 0 I $c(R)=eot d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) Q 0 I $c(R)=-1 W nak,*-3 d Trace^MI.MIF000(mi,R,\u0026#34;H\u0026lt;--M\u0026#34;) Q 1 CHSUM(x) ; calculate check sum n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y) s z=$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#256\\16+1)_$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#16+1) q z ACK ; send \u0026#39;ack\u0026#39; to instrument w ack,*-3 d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q NEXTTRAY(tray) q tray /// GetSpecType(labno) n (labno) s labno=$g(labno) s spdr=$o(^TEPI(labno,4,\u0026#34;\u0026#34;)) s RetVal=\u0026#34;SE\u0026#34; s spec=\u0026#34;\u0026#34; i $l(spdr),$d(^TTAB(\u0026#34;SPEC\u0026#34;,spdr)) s spec=$p(^TTAB(\u0026#34;SPEC\u0026#34;,spdr),\u0026#34;\\\u0026#34;,1) i spec[\u0026#34;血\u0026#34; s RetVal=\u0026#34;SE\u0026#34; i spec[\u0026#34;尿\u0026#34; s RetVal=\u0026#34;UR\u0026#34; q RetVal SendENQ ; send list of orders if exists W enq,*-3 d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) //r *R:10 e d q //.d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;1H\u0026lt;--M\u0026#34;) F j=1:1:10 R *R:1 I $c(R)=ack!($c(R)=enq) d .d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;1H\u0026lt;--M\u0026#34;) I $c(R)=enq Q I $c(R)\u0026#39;=ack W eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q 发送数据end(mi) ; 7/17/14 ; ASTM protocol - 西门子流水线(MCR) s mi=$g(mi) i \u0026#39;$l(mi) q s ^TMPMACHDATA1(mi,11)=mi s ItemDeli=$li(^dbo.BTMIMachineParameterD(mi),12) //项目分隔符 s ResultDeli=$li(^dbo.BTMIMachineParameterD(mi),13) //结果分隔符 s AntDeli=$li(^dbo.BTMIMachineParameterD(mi),14) //抗生素分隔符 s SenDeli=$li(^dbo.BTMIMachineParameterD(mi),15) //药敏结果分隔符 s Port=\u0026#34;|TCP|\u0026#34;_$li(^dbo.BTMIMachineParameterD(mi),10) //端口号 //控制字符 s isDebug=1,iError=100 S stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4) S lf=$c(10),cr=$c(13),nak=$c(21),(result,epis)=\u0026#34;\u0026#34;,etb=$c(23) s ^TMPMACHDATA1(mi,10)=mi i $$Start^MI.MIF000(mi) q f d Main i $$Stop^MI.MIF000(mi) q s ^TMPMACH10(mi,50)=$h c Port q Main S $ZT=\u0026#34;RuntimeError\u0026#34;,$ECODE=\u0026#34;\u0026#34; //捕获运行时错误,并显示 r *R:10 e d q .D BUILD2 i $c(R)=enq d .s AllRecord=\u0026#34;\u0026#34; .d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) .d ACK .f r *R:10 q:$c(R)=eot d ..i $c(R)\u0026#39;=stx q ..s record=$$Read^MI.MIF000(mi,\u0026#34;\u0026#34;,lf) q:\u0026#39;$l(record) ..s record=$e(record,2,$l(record)-1) ..d Trace^MI.MIF000(mi,record,\u0026#34;H\u0026lt;--M\u0026#34;) ..i $l(record,etb)\u0026gt;1 s AllRecord=AllRecord_$p($e(record,1,$l(record)-1),etb,1) ..i $l(record,etx)\u0026gt;1 s AllRecord=AllRecord_$p($e(record,1,$l(record)-1),etx,1) ..;s AllRecord=AllRecord_$p(record,etb,1) ..;s AllRecord=AllRecord_$p(record,etx,1) ..d ACK .d Trace^MI.MIF000(mi,$s($c(R)=eot:\u0026#34;EOT\u0026#34;,1:R),\u0026#34;H\u0026lt;--M\u0026#34;) .i $c(R)=eot,$l(AllRecord) d ..s (mid,sample,epis,surname,rec,res,result,date,time,QC)=\u0026#34;\u0026#34; ..f i=1:1:$l(AllRecord,cr) d ...s rec=$p(AllRecord,cr,i) ...s type=$tr($p(rec,\u0026#34;|\u0026#34;),\u0026#34; \u0026#34;) ...i type=\u0026#34;H\u0026#34; d q ...i type=\u0026#34;M\u0026#34; d q ....s Intype=$tr($p($p(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ....s Inlabno=$tr($p($p(rec,\u0026#34;|\u0026#34;,4),\u0026#34;^\u0026#34;,2),\u0026#34; \u0026#34;) ....d Trace^MI.MIF000(mi,Inlabno,\u0026#34;Inlabno\u0026#34;) ....try{s ret=##class(MI.Special.AutomaticReceipt).ZDHS(mi,Inlabno)}catch{}\t//YHR 20230910 生化流水线自动核收 ....i Intype=\u0026#34;I\u0026#34; d .....i $l(Inlabno)=0 q .....q:\u0026#39;$d(^TEPI(Inlabno)) .....s temts=\u0026#34;\u0026#34; f s temts=$o(^TEPI(Inlabno,1,temts)) q:temts=\u0026#34;\u0026#34; d ......;q:\u0026#39;$d(^TMIF(mi,0,temts)) ......s temtscnt=\u0026#34;\u0026#34; f s temtscnt=$o(^TEPI(Inlabno,1,temts,temtscnt)) q:temtscnt=\u0026#34;\u0026#34; d .......s:$P(^TEPI(Inlabno,1,temts,temtscnt),\u0026#34;\\\u0026#34;,27)=\u0026#34;\u0026#34; $P(^TEPI(Inlabno,1,temts,temtscnt),\u0026#34;\\\u0026#34;,27)=mi .......s:$P(^TEPI(Inlabno,1,temts,temtscnt),\u0026#34;\\\u0026#34;,36)=\u0026#34;\u0026#34; $P(^TEPI(Inlabno,1,temts,temtscnt),\u0026#34;\\\u0026#34;,36)=$P(^TEPI(Inlabno,1,temts,temtscnt),\u0026#34;\\\u0026#34;,60) ...i type=\u0026#34;O\u0026#34; d q ....s epis=$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,1),\u0026#34; \u0026#34;) ....s qcid=$tr($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,2),\u0026#34; \u0026#34;) ....s qcid=$tr(qcid,\u0026#34;-\u0026#34;) ....s QCStat=$tr($p(rec,\u0026#34;|\u0026#34;,4),\u0026#34; \u0026#34;) ....s SpecStat=$tr($p(rec,\u0026#34;|\u0026#34;,6),\u0026#34; \u0026#34;) ....i SpecStat=\u0026#34;S\u0026#34; s epis=\u0026#34;E\u0026#34;_epis ....i QCStat=\u0026#34;Q\u0026#34; s QC=\u0026#34;\\\u0026#34;_qcid,epis=qcid ....s datex=$p(rec,\u0026#34;|\u0026#34;,23) ....s date=$e(datex,5,6)_\u0026#34;/\u0026#34;_$e(datex,7,8)_\u0026#34;/\u0026#34;_$e(datex,1,4),date=$$intdate^SSUTIL4(date) ....s time1=$e(datex,9,10)_\u0026#34;:\u0026#34;_$e(datex,11,12)_\u0026#34;:\u0026#34;_$e(datex,13,14),time1=$$inttime^SSUTIL4(time1) ...i type=\u0026#34;R\u0026#34; d q ....s code=$p($p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,4),\u0026#34;/\u0026#34;,1) ....s flag=$p($p(rec,\u0026#34;|\u0026#34;,3),\u0026#34;^\u0026#34;,8) ....s mid1=$p(rec,\u0026#34;|\u0026#34;,14) ....i mid1\u0026#39;=\u0026#34;\u0026#34; s mid=mid1 ....s res=$p(rec,\u0026#34;|\u0026#34;,4) ....s ^Test(i)=res_\u0026#34;\\\u0026#34;_flag ....i mid1[\u0026#34;CentaurXP\u0026#34;,$l(code),$l(res) D .....i flag=\u0026#34;DOSE\u0026#34; d ......s result=result_code_$c(par10)_res_$c(par11) //....E D ....i $l(code),$l(res) D .....s result=result_code_$c(par10)_res_$c(par11) ... //i type=\u0026#34;L\u0026#34; d Last q D BUILD2 q Last\t; file result if exist s AllRecord=\u0026#34;\u0026#34; i time1=\u0026#34;\u0026#34; s time1=$p($h,\u0026#34;,\u0026#34;,2) s time=time1 S date=$P($H,\u0026#34;,\u0026#34;,1),time=$P($H,\u0026#34;,\u0026#34;,2) i $l(epis),$l(result) d Save^MI.MIF000(mi,epis,result,date,time,QC) q RuntimeError h 10 s iError=iError+1 d Trace^MI.MIF000(mi,\u0026#34;Error Code:\u0026#34;_$ECODE_\u0026#34;,Error:\u0026#34;_$ZERROR,\u0026#34;Runtime Error\u0026#34;) D:isDebug Log(mi,\u0026#34;Error Code:\u0026#34;_$ECODE_\u0026#34;,Error:\u0026#34;_$ZERROR) i iError\u0026gt;100 s ret=$$Stop^MI.MIF000(mi) Q ///CreateDate： 20140717 ///Description： 构建医嘱列表 ///Table DHC_LoadSpecimen ///Input：\t///Output： ///Return：\t///Others：DHCLoadSpecimen(0,\u0026#34;DateTime\u0026#34;,\u0026#34;TDMTS\u0026#34;,\u0026#34;C\u0026#34;,62301,42467,\u0026#34;T623010010\u0026#34;,\u0026#34;T101\u0026#34;,1) /// ^DHCLoadSpecimen({DHC_LoadSpecimen.DLSP_LabNo},{DHC_LoadSpecimen.DLSP_TS},{DHC_LoadSpecimen.DLSP_TSCNT},\u0026#34;TC\u0026#34;,{DLST_TestCode}) /// ^DHCLoadSpecimen({DLSP_LabNo},{DLSP_TS},{DLSP_TSCNT}) /// W $$BUILD2^DEBUG BUILD2 K ^TMP($zn,$j) s LabnoList=\u0026#34;\u0026#34; S AddDate=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d .s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime,\u0026#34;\u0026#34;)) .s Labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) .;H 1 //每隔2S处理一个标本 .D:isDebug Log(mi,\u0026#34;BUILD2|labno=\u0026#34;_Labno) .S SIMAck=$$BUILD() .I SIMAck=0 D ..s err=##Class(MI.MachineUpload).SetSendFlag(mi,Labno,\u0026#34;S\u0026#34;,\u0026#34;\u0026#34;) .E D ..D:isDebug Log(mi,\u0026#34;BUILD2|Fail:labno=\u0026#34;_Labno) ..//Q:tryTimes\u0026lt;4 //失败3次才更新失败状态 ..s err=##Class(MI.MachineUpload).SetSendFlag(mi,Labno,\u0026#34;F\u0026#34;,\u0026#34;\u0026#34;) s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;U\u0026#34;),AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d .s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;U\u0026#34;),AddDate,AddTime,\u0026#34;\u0026#34;)) .s Labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) .;H 1 //每隔2S处理一个标本 .D:isDebug Log(mi,\u0026#34;BUILD2|labno=\u0026#34;_Labno) .S SIMAck=$$BUILD() .I SIMAck=0 D ..s err=##Class(MI.MachineUpload).SetSendFlag(mi,Labno,\u0026#34;S\u0026#34;,\u0026#34;\u0026#34;) .E D ..D:isDebug Log(mi,\u0026#34;BUILD2|Fail:labno=\u0026#34;_Labno) ..//Q:tryTimes\u0026lt;4 //失败3次才更新失败状态 ..s err=##Class(MI.MachineUpload).SetSendFlag(mi,Labno,\u0026#34;F\u0026#34;,\u0026#34;\u0026#34;) ///老年医院流水线上传所有集中接收标本 //s Labno=\u0026#34;\u0026#34; f s Labno=$o(^DHCUploadAll(Labno)) Q:Labno=\u0026#34;\u0026#34; d //.s WorkGroupMachineDR=$g(^DHCUploadAll(Labno)) //.S SIMAck=$$SendSorting(WorkGroupMachineDR) //.I SIMAck\u0026#39;=0 s ^DHCUploadAllBAK(\u0026#34;F\u0026#34;,Labno)=^DHCUploadAll(Labno) //.e s ^DHCUploadAllBAK(\u0026#34;S\u0026#34;,Labno)=^DHCUploadAll(Labno) //.s ^DHCUploadAllBAK(\u0026#34;B\u0026#34;,Labno)=^DHCUploadAll(Labno) //.k ^DHCUploadAll(Labno) Q JudgeUrgent d Trace^MI.MIF000(mi,urgent,\u0026#34;urgentJu\u0026#34;) i urgent=1 d .s urgent=\u0026#34;S\u0026#34; .d Trace^MI.MIF000(mi,urgent,\u0026#34;urgentJUS\u0026#34;) e d .s urgent=\u0026#34;R\u0026#34; BUILD() S episx=Labno,Labno=$P(Labno,\u0026#34;-\u0026#34;,1),suffix=\u0026#34;\u0026#34;,RetAck=1 S (surn,givn,sex,dob,date,urno,age,loc)=\u0026#34;\u0026#34; s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q s VisitNumberData = $g(^dbo.RPVisitNumberD(VisitNumberDR)) S urno=$p(urno,$c(1),1) I givn=surn s givn=\u0026#34;\u0026#34; s SName=$lg(VisitNumberData,13) s GName=$lg(VisitNumberData,13) S diag=$lg(VisitNumberData,28) ;;; 诊断 S SpecType=$$GetSpecType(VisitNumberDR) ;;; 标本 s debtor=$lg(VisitNumberData,3) ;登记号 s admtype=$lg(VisitNumberData,4) ;就诊类型 s urgent=$lg(VisitNumberData,50) ;是否加急 d Trace^MI.MIF000(mi,urgent,\u0026#34;urgent\u0026#34;) D JudgeAdmType D JudgeUrgent s SpeciesDR = $lg(VisitNumberData,15) //s Species = $s($l(SpeciesDR):$lg(^dbo.BTSpeciesD(SpeciesDR),3),1:\u0026#34;\u0026#34;) s Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$LG($G(^dbo.BTSpeciesD(SpeciesDR)),2) ;性别 ;S Species=SpeciesDR ;性别 s DOB= $lg(VisitNumberData,16) ;出生日期 ;s DOB=\u0026#34;20000202\u0026#34; s LocationDR = $lg(VisitNumberData,22) s Location = $s($l(LocationDR):$lg($g(^dbo.BTLocationD(LocationDR)),3),1:\u0026#34;\u0026#34;) s Loc=Location ;科室 s TSName=\u0026#34;\u0026#34; //多条医嘱信息合并 s TSName = \u0026#34;\u0026#34; s TestSetDR = \u0026#34;\u0026#34; for { s TestSetDR = $o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; i $l(TSName) s TSName=TSName_\u0026#34;+\u0026#34;_$lg($g(^dbo.BTTestSetD(TestSetDR)),3) e s TSName=$lg(^dbo.BTTestSetD(TestSetDR),3) } d ScanOne^MI.MIF000(mi,Labno) ;创建上传化验项目列表 i \u0026#39;$D(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,Labno)) q 1 S tcx=\u0026#34;\u0026#34; S chl=\u0026#34;\u0026#34; F S chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,Labno,chl)) Q:chl=\u0026#34;\u0026#34; D .S tcx=tcx_\u0026#34;^^^\u0026#34;_chl_\u0026#34;^^^0\\\u0026#34; S tcx=$e(tcx,1,$L(tcx)-1) I \u0026#39;$L(tcx) S tcx=\u0026#34;^^^^^^0\u0026#34; S date=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) S time=$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;) S temepis=\u0026#34;\u0026#34; ;H|\\^\u0026amp;|||BSLIS^V3.00|||||||P|1\u0026lt;CR\u0026gt; S str=\u0026#34;H|\\^\u0026amp;|||BSLIS^V3.00|||||host|TSDWN^REPLY|P|1\u0026#34;_cr ;头信息 ;P|1|0010332409|0010332409||Doe^JohnlSmith||19150826|F|||||||||||||||||5500|||||||||\u0026lt;CR\u0026gt; //S str=str_\u0026#34;P|1|\u0026#34;_debtor_\u0026#34;|\u0026#34;_cr ;病人信息 s SName=##class(OTH.DHCINSUPort).GetPinYingCode(SName) S str=str_\u0026#34;P|1|\u0026#34;_debtor_\u0026#34;|||\u0026#34;_SName_\u0026#34;^^^||\u0026#34;_DOB_\u0026#34;|\u0026#34;_Species_\u0026#34;|||||||||||||||||\u0026#34;_Loc_\u0026#34;|||||||||\u0026#34;_cr ;病人信息 I Labno=\u0026#34;N\u0026#34; s Labno=\u0026#34;\u0026#34; ;O|1|112448100||^^^TP^^^0\\^^^ALB^^^0|R||20110826112206||||N|hep|lipemic||Serum||||||||||Q\u0026lt;CR\u0026gt; ;s SpecType=\u0026#34;Serum\u0026#34;\t//YHR 设置空白的为血类型 S str=str_\u0026#34;O|1|\u0026#34;_Labno_\u0026#34;||\u0026#34;_tcx_\u0026#34;|\u0026#34;_urgent_\u0026#34;||\u0026#34;_date_time_\u0026#34;||||A|hep|lipemic||\u0026#34;_SpecType_\u0026#34;|||\u0026#34;_TSName_\u0026#34;|\u0026#34;_admtype_\u0026#34;||||||\u0026#34; S str=str_\u0026#34;Q\u0026#34;_cr ;4L|1\u0026lt;CR\u0026gt; S str=str_\u0026#34;L|1|\u0026#34; S RetAck=$$Send(Labno,str) K ^TMIF(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,Labno) Q RetAck JudgeAdmType i admtype=1 s admtype=2 i admtype=2 s admtype=1 i admtype=8 s admtype=3 SendSorting(WorkGroupMachineDR) S episx=Labno,Labno=$P(Labno,\u0026#34;-\u0026#34;,1),suffix=\u0026#34;\u0026#34;,RetAck=1 S (surn,givn,sex,dob,date,urno,age,loc)=\u0026#34;\u0026#34; s VisitNumberDR=$o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(Labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q s VisitNumberData = $g(^dbo.RPVisitNumberD(VisitNumberDR)) S urno=$p(urno,$c(1),1) I givn=surn s givn=\u0026#34;\u0026#34; s admtype=$lg(VisitNumberData,4) ;就诊类型 D JudgeAdmType s urgent=$lg(VisitNumberData,50) ;是否加急 D JudgeUrgent s SName=$lg(VisitNumberData,13) s GName=$lg(VisitNumberData,13) S diag=$lg(VisitNumberData,28) ;;; 诊断 S SpecType=$$GetSpecType(VisitNumberDR) ;;; 标本 s debtor=$lg(VisitNumberData,3) ;登记号 s SpeciesDR = $lg(VisitNumberData,15) //s Species = $s($l(SpeciesDR):$lg(^dbo.BTSpeciesD(SpeciesDR),3),1:\u0026#34;\u0026#34;) s Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$LG($G(^dbo.BTSpeciesD(SpeciesDR)),2) ;性别 s TSName = \u0026#34;\u0026#34; ;S Species=SpeciesDR ;性别 s DOB= $lg(VisitNumberData,16) ;出生日期 s LocationDR = $lg(VisitNumberData,22) s Location = $s($l(LocationDR):$lg($g(^dbo.BTLocationD(LocationDR)),3),1:\u0026#34;\u0026#34;) s Loc=Location ;科室 s TSName=\u0026#34;\u0026#34; //多条医嘱信息合并 s TestSetDR = \u0026#34;\u0026#34; for { s TestSetDR = $o(^dbo.RPVisitNumberTestSetI(\u0026#34;IndexMaster\u0026#34;,VisitNumberDR,TestSetDR)) q:TestSetDR=\u0026#34;\u0026#34; i $l(TSName) s TSName=TSName_\u0026#34;+\u0026#34;_$lg($g(^dbo.BTTestSetD(TestSetDR)),3) e s TSName=$lg(^dbo.BTTestSetD(TestSetDR),3) } S tcx=\u0026#34;\u0026#34;,chl=\u0026#34;Sorting\u0026#34;_WorkGroupMachineDR S tcx=tcx_\u0026#34;^^^\u0026#34;_chl_\u0026#34;^^^0\\\u0026#34; S date=$tr($zd(+$h,3),\u0026#34;-\u0026#34;) S time=$tr($zt($p($h,\u0026#34;,\u0026#34;,2)),\u0026#34;:\u0026#34;) S temepis=\u0026#34;\u0026#34; ;H|\\^\u0026amp;|||BSLIS^V3.00|||||||P|1\u0026lt;CR\u0026gt; S str=\u0026#34;H|\\^\u0026amp;|||BSLIS^V3.00|||||host|TSDWN^REPLY|P|1\u0026#34;_cr ;头信息 ;P|1|0010332409|0010332409||Doe^JohnlSmith||19150826|F|||||||||||||||||5500|||||||||\u0026lt;CR\u0026gt; //S str=str_\u0026#34;P|1|\u0026#34;_debtor_\u0026#34;|\u0026#34;_cr ;病人信息 S str=str_\u0026#34;P|1|\u0026#34;_debtor_\u0026#34;|||\u0026#34;_SName_\u0026#34;^\u0026#34;_GName_\u0026#34;^^||\u0026#34;_DOB_\u0026#34;|\u0026#34;_Species_\u0026#34;|||||||||||||||||\u0026#34;_Loc_\u0026#34;|||||||||\u0026#34;_cr ;病人信息 I Labno=\u0026#34;N\u0026#34; s Labno=\u0026#34;\u0026#34; ;O|1|112448100||^^^TP^^^0\\^^^ALB^^^0|R||20110826112206||||N|hep|lipemic||Serum||||||||||Q\u0026lt;CR\u0026gt; ;s SpecType=\u0026#34;Serum\u0026#34; S str=str_\u0026#34;O|1|\u0026#34;_Labno_\u0026#34;||\u0026#34;_tcx_\u0026#34;|\u0026#34;_urgent_\u0026#34;||\u0026#34;_date_time_\u0026#34;||||A|hep|lipemic||\u0026#34;_SpecType_\u0026#34;|||\u0026#34;_TSName_\u0026#34;|\u0026#34;_admtype_\u0026#34;||||||\u0026#34; S str=str_\u0026#34;Q\u0026#34;_cr ;4L|1\u0026lt;CR\u0026gt; S str=str_\u0026#34;L|1|\u0026#34; S RetAck=$$Send(Labno,str) Q RetAck Send(epis,str) ; send list of orders if exists W enq,*-3 d Trace^MI.MIF000(mi,\u0026#34;ENQ\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) S ret=1 F j=1:1:10 R *R:1 I $c(R)=ack!($c(R)=enq) Q d Trace^MI.MIF000(mi,$s($c(R)=ack:\u0026#34;ACK\u0026#34;,$c(R)=enq:\u0026#34;ENQ\u0026#34;,$c(R)=nak:\u0026#34;NAK\u0026#34;,1:R),\u0026#34;1H\u0026lt;--M\u0026#34;) I $c(R)=enq Q ret I $c(R)\u0026#39;=ack W eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) Q ret F i=1:1:$L(str,cr) D .S temstr=$P(str,cr,i) .S temstr=i_temstr .I i=3,$L(temstr)\u0026gt;247 D ..S str1=$e(temstr,1,241) ..S ret=$$SEND(str1,1) ..s str2=i+1_$e(temstr,242,482) ..S ret=$$SEND(str2,1) ..s str2=i+1_$e(temstr,483,$l(temstr)) ..S ret=$$SEND(str2,0) ..S i=i+1 ..s temstr=$P(str,cr,4) ..S temstr=i+1_temstr ..S ret=$$SEND(temstr,0) .E D ..S ret=$$SEND(temstr,0) W eot,*-3 d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) Q ret SEND(str,flag) ; send string to instrument i flag=1 d .s str=str_etb .s chsum=$$CHSUM(str) e d .s str=str_cr_etx .s chsum=$$CHSUM(str) W stx,str,chsum,cr,lf,*-3 d Trace^MI.MIF000(mi,stx_str_chsum_cr_lf,\u0026#34;H--\u0026gt;M\u0026#34;) F j=1:1:6 R *R:1 I ($c(R)=ack)!($c(R)=eot) Q I $c(R)=ack d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) Q 0 I $c(R)=eot d Trace^MI.MIF000(mi,\u0026#34;EOT\u0026#34;,\u0026#34;H\u0026lt;--M\u0026#34;) Q 0 I $c(R)=-1 W nak,*-3 d Trace^MI.MIF000(mi,R,\u0026#34;H\u0026lt;--M\u0026#34;) Q 1 CHSUM(x) ; calculate check sum n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y) s z=$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#256\\16+1)_$e(\u0026#34;0123456789ABCDEF\u0026#34;,z#16+1) q z ACK ; send \u0026#39;ack\u0026#39; to instrument w ack,*-3 d Trace^MI.MIF000(mi,\u0026#34;ACK\u0026#34;,\u0026#34;H--\u0026gt;M\u0026#34;) q NEXTTRAY(tray) q tray /// GetSpecType(VisitNumberDR) s VisitNumberDR=$g(VisitNumberDR) ;s RetVal=\u0026#34;SE\u0026#34; s RetVal=\u0026#34;Serum\u0026#34; s SpecimenDR = $lg(^dbo.RPVisitNumberD(VisitNumberDR),56) s SpecimenName = $s($l(SpecimenDR):$lg($g(^dbo.BTSpecimenD(SpecimenDR)),3),1:\u0026#34;\u0026#34;) i SpecimenName[\u0026#34;血\u0026#34; s RetVal=\u0026#34;Serum\u0026#34; i SpecimenName[\u0026#34;尿\u0026#34; s RetVal=\u0026#34;Urine\u0026#34; i SpecimenName[\u0026#34;血浆\u0026#34; s RetVal=\u0026#34;Plasma\u0026#34;\t//YHR 20230929 增加血浆代码 q RetVal Log(mi,info) N (mi,info) S mi=$G(mi),info=$G(info) Q:\u0026#39;$L(mi) 1 Q:\u0026#39;$D(^TMIF(mi)) 1 d Trace^MI.MIF000(mi,info,\u0026#34;DEBUG\u0026#34;) S curDate=$P($H,\u0026#34;,\u0026#34;,1),curTime=$P($H,\u0026#34;,\u0026#34;,2) S ^TMPSIMENS(mi,curDate,curTime)=info Q 0 通过数据库主动上传 ODBC连接数据库回插数据 示例代码(DL96A) 通过数据库连接，在QryLabInfo中拼串sql语句.Insert into liscontroller.lis_application (SPEC_NUM,BTBarcode,ASTBarcode,PATIENT_ID,MSPosition,PatientNo,FULL_NAME,FIRST_NAME,LAST_NAME,Birth,AGE,SEX,Purpose,WARD,Specimen,BedNo,Diagnosis,SpRequest,Medication,SuspectedBact,Doctor,AdviceNo,ApplyDate,SendDate,Collector,SPEC_DATE,CollectPosition,IdResult,Updated,UpdateDate,CARSS_ReadDate,StainType,StructVersion) values\n\u0026hellip;//(\u0026lsquo;9999\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;199732\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026rsquo; \u0026lsquo;,\u0026lsquo;测试\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026rsquo;\u0026rsquo;,\u0026lsquo;85y\u0026rsquo;,\u0026lsquo;f\u0026rsquo;,\u0026lsquo;普通细菌培养+药敏\u0026rsquo;,\u0026lsquo;三病室\u0026rsquo;,\u0026lsquo;痰\u0026rsquo;,\u0026lsquo;3\u0026rsquo;,\u0026rsquo; \u0026lsquo;,\u0026rsquo; \u0026lsquo;,\u0026rsquo; \u0026lsquo;,\u0026rsquo; \u0026lsquo;,\u0026lsquo;刘云\u0026rsquo;,\u0026rsquo; \u0026lsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;2024/6/28 9:17\u0026rsquo;,\u0026lsquo;谢艳红\u0026rsquo;,\u0026lsquo;2024/6/29 11:17\u0026rsquo;,\u0026rsquo; \u0026lsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;0\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;,\u0026lsquo;NULL\u0026rsquo;)\n{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;DataBase\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;3000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;DSN=DL96A\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFDL96A\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;SELECT * FROM lis_result WHERE DATE(UpdateDate) = CURDATE()#ID#\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;}] /// [{\u0026#34;MachID\u0026#34;:\u0026#34;#RowID\u0026#34;,\u0026#34;Type\u0026#34;:\u0026#34;DataBase\u0026#34;,\u0026#34;UpTime\u0026#34;:\u0026#34;3000\u0026#34;,\u0026#34;Address\u0026#34;:\u0026#34;DSN=DL96a\u0026#34;,\u0026#34;UpCDF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;UpREF\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;DealProcess\u0026#34;:\u0026#34;MI.MIFDL96A2\u0026#34;,\u0026#34;Para\u0026#34;:\u0026#34;SELECT * FROM lis_result WHERE DATE(UpdateDate) = CURDATE()#ID#\u0026#34;,\u0026#34;PreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;,\u0026#34;UPPreDealClass\u0026#34;:\u0026#34;PreDeal.DealDemoM,PreDeal\u0026#34;}] Class MI.MIFDL96A Extends %RegisteredObject { // D ##class(MI.MIFDL96E02).fileMTHD(\u0026#34;22\u0026#34;,\u0026#34;4185~33122416~~~□肺炎链球菌(S.pneumoniae)□G+球菌□□[spn]□(优势菌2)~~~~~A;PEN;;＝8;耐药;;B;CLI;;≥8;耐药;;A;SXT;;≥8/152;耐药;;B;CRO;;＝1;敏感;;A;ERY;;≥16;耐药;;B;VA;;≤1;敏感;;B;LEV;;＝2;敏感;;B;TET;;＝32;耐药;;B;MRP;;≤0.25;敏感;;C;CXM;;≥4;耐药;;C;RIF;;≤0.5;敏感;;C;AMC;;≤1.0/0.5;敏感;;C;LNZ;;≤2;敏感;;~~~~~对左氧氟沙星敏感的菌株可预报其对吉米沙星和莫西沙星敏感。[13][10]对四环素敏感的菌株对多西环素和米诺环素也敏感。[13][10]利福平不单独用于抗菌治疗。[13][10]红霉素可预报阿奇霉素、克拉霉素和地红霉素的敏感和耐药性。[13][10]~~~~普通细菌培养+药敏~2020-12-25□8:33:23~2020-12-27□8:33:23~1~\u0026#34;,\u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;\u0026#34;) ClassMethod fileMTHD(mi, record, epis, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q i \u0026#39;$l(record) q s ItemDeli=$c(92) //项目分隔符92 s ResultDeli=$c(44) //结果分隔符44 s AntDeli=\u0026#34;]\u0026#34; //抗生素分隔符] s SenDeli=\u0026#34;[\u0026#34; //药敏结果分隔符[ d Trace^MI.MIF000(mi,record,\u0026#34;record\u0026lt;--M\u0026#34;) s (sample,epis,surname,rec,res,fresult,date,time,QC,xBugs,AntLIST,expertRules)=\u0026#34;\u0026#34; //处理阴性结果 s epis=$tr($p(record,\u0026#34;~\u0026#34;,3),\u0026#34; \u0026#34;) s code=1 //7417~6987~3259~I-01,2E10405500,*□|~I-01,2E10405500,*□|~~□,I-01,2E10405500,大肠埃希菌(Escherichia□Coli),eco,-,0,□|~~I-01,2E10405500,DL-120□E2,eco,AMP,≥32μg/ml,A,R,≤8\u0026amp;16\u0026amp;≥32,Y|I-01,2E10405500,DL-120□E2,eco,GEN,≤1μg/ml,A,S,≤2\u0026amp;4\u0026amp;≥8,Y|I-01,2E10405500,DL-120□E2,eco,SAM,16/8μg/ml,B,I,≤8/4\u0026amp;16/8\u0026amp;≥32/16,Y|I-01,2E10405500,DL-120□E2,eco,TZP,≤4/4μg/ml,B,S,≤16/4\u0026amp;32/4-64/4\u0026amp;≥128/4,Y|I-01,2E10405500,DL-120□E2,eco,CSL,≤8/4μg/ml,O,S,≤16/8\u0026amp;32/16\u0026amp;≥64/32,Y|I-01,2E10405500,DL-120□E2,eco,CCV,≤1/4μg/ml,□,□,□\u0026amp;□\u0026amp;□,Y|I-01,2E10405500,DL-120□E2,eco,CTC,≤1/4μg/ml,□,□,□\u0026amp;□\u0026amp;□,Y|I-01,2E10405500,DL-120□E2,eco,CZO,≤2μg/ml,A,S,≤2\u0026amp;4\u0026amp;≥8,Y|I-01,2E10405500,DL-120□E2,eco,FEP,≤0.12μg/ml,B,S,≤2\u0026amp;4-8\u0026amp;≥16,Y|I-01,2E10405500,DL-120□E2,eco,FOX,≤8μg/ml,B,S,≤8\u0026amp;16\u0026amp;≥32,Y|I-01,2E10405500,DL-120□E2,eco,CXM,≤4μg/ml,B,S,≤8\u0026amp;16\u0026amp;≥32,Y|I-01,2E10405500,DL-120□E2,eco,CXM,≤4μg/ml,B,S,≤4\u0026amp;8-16\u0026amp;≥32,Y|I-01,2E10405500,DL-120□E2,eco,LVX,≤0.12μg/ml,B,S,≤0.5\u0026amp;1\u0026amp;≥2,Y|I-01,2E10405500,DL-120□E2,eco,SXT,≥8/152μg/ml,B,R,≤2/38\u0026amp;□\u0026amp;≥4/76,Y|I-01,2E10405500,DL-120□E2,eco,CTX,≤0.12μg/ml,B,S,≤1\u0026amp;2\u0026amp;≥4,Y|I-01,2E10405500,DL-120□E2,eco,IPM,≤0.25μg/ml,B,S,≤1\u0026amp;2\u0026amp;≥4,Y|I-01,2E10405500,DL-120□E2,eco,CAZ,≤0.5μg/ml,C,S,≤4\u0026amp;8\u0026amp;≥16,Y|I-01,2E10405500,DL-120□E2,eco,CHL,≤8μg/ml,C,S,≤8\u0026amp;16\u0026amp;≥32,Y|I-01,2E10405500,DL-120□E2,eco,MEM,≤0.06μg/ml,B,S,≤1\u0026amp;2\u0026amp;≥4,Y|I-01,2E10405500,DL-120□E2,eco,AMK,≤4μg/ml,B,S,≤4\u0026amp;8\u0026amp;≥16,Y|I-01,2E10405500,DL-120□E2,eco,NIT,≤16μg/ml,U,S,≤32\u0026amp;64\u0026amp;≥128,Y|I-01,2E10405500,DL-120□E2,eco,ETP,≤0.015μg/ml,B,S,≤0.5\u0026amp;1\u0026amp;≥2,Y|I-01,2E10405500,DL-120□E2,eco,MNO,≤1μg/ml,O,S,≤4\u0026amp;8\u0026amp;≥16,Y|I-01,2E10405500,DL-120□E2,eco,TGC,≤0.25μg/ml,□,S,≤1\u0026amp;2\u0026amp;\u0026gt;2,Y|I-01,2E10405500,DL-120□E2,eco,POL,≤1μg/ml,O,I,□\u0026amp;≤2\u0026amp;≥4,Y|I-01,2E10405500,DL-120□E2,eco,AZM,≤8μg/ml,□,R,□\u0026amp;□\u0026amp;□,Y|~I-01,2E10405500,MDR|~I-01,2E10405500*MDR：多重耐药菌株。*头孢西丁的折点基于至少8g□qd的给药方案。*头孢吡肟的敏感折点基于1g□q12h的给药方案。*亚胺培南的折点基于500mg□q6h或1g□q8h的给药方案。*厄他培南的折点基于1g□qd的给药方案。*多黏菌素B应与一种或多种活性抗生素联合使用，建议咨询感染诊治专家。*头孢呋辛（注射）的折点基于1.5g□q8h的给药方案。*氨苄西林的结果可用于预报阿莫西林的敏感性。*环丙沙星折点基于静脉注射400mg□q12h或口服500mg□q12h给药方案。*多黏菌素B应给予负荷剂量和最大推荐剂量。*治疗非复杂泌尿道以外感染的头孢唑林折点是基于2g□q8h的给药方案。*头孢噻肟的折点基于1g□q8h的给药方案。*美罗培南的折点基于1g□q8h的给药方案。*对于肺炎即使黏菌素或多黏菌素B全身给药，亦很可能无效。*此报告采用的折点标准来源为CLSIM100□2023，其中替加环素为EUCAST□2018，头孢哌酮/舒巴坦为CHINET技术要求□2022，哌拉西林/他唑巴坦为CLSIM100□2021。|~~~~~I-01,2E10405500,2024-04-23□09:56:15|~~~1~2024-04-23□10:53:54~□~□,I-01,2E10405500,大肠埃希菌(Escherichia□Coli),eco,G-杆菌,0,□|~I-01,2E10405500,MDR|~~~~ ///□,I-01,2E10405500,大肠埃希菌(Escherichia□Coli),eco,-,0,□| ///7602~0~4786~~~~~,A2,兽类气单胞菌(Aeromonas□bestiarum),□,44.12,□,aer,□,0,□|~~~~~~~~~~~1~2024-06-06□16:29:22~~□,□,4786+A2,兽类气单胞菌(Aeromonas□bestiarum),aer,-,0,□|~~~~~ //s xBugs=$p($p($p(record,\u0026#34;~\u0026#34;,7),\u0026#34;,\u0026#34;,4),\u0026#34;(\u0026#34;,1) s xBugs=$p($p(record,\u0026#34;~\u0026#34;,7),\u0026#34;,\u0026#34;,5) i $l(xBugs)\u0026gt;6 s xBugs=$p($p(record,\u0026#34;~\u0026#34;,9),\u0026#34;,\u0026#34;,4) d Trace^MI.MIF000(mi,xBugs,\u0026#34;xBugs\u0026#34;) s antStr=$p(record,\u0026#34;~\u0026#34;,9) s expertRules=$p($p($p(record,\u0026#34;~\u0026#34;,11),\u0026#34;*\u0026#34;,2,*),\u0026#34;|\u0026#34;,1) //s expertRules=$replace(expertRules,\u0026#34;*\u0026#34;,\u0026#34;$r$n\u0026#34;) d Trace^MI.MIF000(mi,expertRules,\u0026#34;expertRules\u0026#34;) i expertRules[\u0026#34;*\u0026#34; s expertRules=..RExpertRules(expertRules) s ^DL96A(\u0026#34;ZJGZ\u0026#34;,+$h,epis,code)=expertRules f i=1:1:$l(antStr,\u0026#34;|\u0026#34;) d .//I-01,2E10405500,DL-120□E2,eco,AMP,≥32μg/ml,A,R,≤8\u0026amp;16\u0026amp;≥32,Y .//I-2565,2R10131374,DL-120□STREP3,efa,AMP,=0.5μg/mL,A,S,≤8\u0026amp;□\u0026amp;≥16,Y .//efa,AMP,=0.5μg/mL,A,S,≤8\u0026amp;□\u0026amp;≥16,Y|I-2565,2R10131374,DL-120□STREP3, .s antList=$p(antStr,\u0026#34;|\u0026#34;,i) .s AntGroup=$p(antList,\u0026#34;,\u0026#34;,7) //抗生素分组 .s xANT=$tr($p(antList,\u0026#34;,\u0026#34;,5),\u0026#34; \u0026#34;) q:xANT=\u0026#34;\u0026#34; //抗生素 .s xMIC=$tr($p(antList,\u0026#34;,\u0026#34;,6),\u0026#34;μg/ml \u0026#34;) //MIC .s xRES=$tr($p(antList,\u0026#34;,\u0026#34;,8),\u0026#34; \u0026#34;) //耐药 .i xRES=\u0026#34;\u0026#34; s xRES=\u0026#34;/\u0026#34; .s AntLIST=AntLIST_xANT_AntDeli_xRES_AntDeli_xMIC_AntDeli_AntDeli_AntGroup_SenDeli d Trace^MI.MIF000(mi,AntLIST,\u0026#34;AntLIST\u0026lt;--M\u0026#34;) i $l(xBugs),$l(epis),$l(AntLIST) d .s fresult=xBugs_ItemDeli_AntLIST_ItemDeli_code_ResultDeli d Trace^MI.MIF000(mi,fresult,\u0026#34;fresult\u0026lt;--M\u0026#34;) i \u0026#39;$l(fresult) q 0 i \u0026#39;$l(epis) q 0 d Save^MI.MIF000(mi,epis,code_ItemDeli_xBugs_ItemDeli_ItemDeli_ItemDeli_ResultDeli,date,time,QC) d SaveAnt^MI.MIF000(mi,epis,fresult,date,time,QC) //h 3 //s ret=..SaveZJGZ(epis, mi, 1, expertRules) //对于专家规则在同表的，保证药敏结果先存生成报告，再存专家规则 0704 //d Trace^MI.MIF000(mi,ret,\u0026#34;专家规则保存ret\u0026#34;) s (fresult,date,time,QC,AntLIST)=\u0026#34;\u0026#34; q \u0026#34;\u0026#34; } /// w ##class(MI.MIFDL96A2).RExpertRules(\u0026#34;sadsa*da*dasds*sad \u0026#34;) /// 20240802 格式化专家规则 ClassMethod RExpertRules(expertRules As %String) As %String { s expertRules=$g(expertRules) i expertRules[\u0026#34;*\u0026#34; d .s expertRules=\u0026#34;1、\u0026#34;_expertRules .f i=2:1:$l(expertRules,\u0026#34;*\u0026#34;) d ..s expertRules=$p(expertRules,\u0026#34;*\u0026#34;,1)_\u0026#34; \u0026#34;_i_\u0026#34;、\u0026#34;_$p(expertRules,\u0026#34;*\u0026#34;,2,*) q expertRules } /// 保存专家规则 /// 20240704 /// w ##class(MI.MIFDL96A2).SaveZJGZ(\u0026#34;6633\u0026#34;,\u0026#34;40\u0026#34;,1,\u0026#34;多黏菌素B应与一种或多种活性抗生素联合使用，建议咨询感染诊治专家。*头孢噻肟的折点基于1g□q8h的给药方案。*亚胺培南的折点基于500mg□q6h或1g□q8h的给药方案。*美罗培南的折点基于1g□q8h的给药方案。*头孢唑啉的结果可预报非复杂性的泌尿系统感染的大肠埃希菌对口服头孢拉定、头孢地尼、头孢克罗、头孢丙烯、头孢泊肟、头孢呋辛的敏感性。*头孢西丁的折点基于至少8g□qd的给药方案。*仅肠沙门菌伤寒血清型和志贺菌属具有阿奇霉素的临床推荐折点。*氨苄西林的结果可用于预报阿莫西林的敏感性。*环丙沙星折点基于静脉注射400mg□q12h或口服500mg□q12h给药方案。*头孢吡肟的敏感折点基于1g□q12h的给药方案。*头孢呋辛（注射）的折点基于1.5g□q8h的给药方案。*治疗非复杂泌尿道感染的头孢唑林折点是基于1g□q12h的给药方案。*治疗非复杂泌尿道以外感染的头孢唑林折点是基于2g□q8h的给药方案。*多黏菌素B应给予负荷剂量和最大推荐剂量。*厄他培南的折点基于1g□qd的给药方案。*对于肺炎即使黏菌素或多黏菌素B全身给药，亦很可能无效。\u0026#34;) ClassMethod SaveZJGZ(epis, mi, isolate, ExpertRules) { s ^GYN(\u0026#34;Rule\u0026#34;,epis)=$lb(epis, mi, isolate, ExpertRules) //TestCodeDR 细菌一，细菌二，细菌三 570,586,575 s epis=$g(epis),mi=$g(mi),ExpertRules=$g(ExpertRules) s TestCodeDR=\u0026#34;\u0026#34; i isolate=1 s TestCodeDR=261 i \u0026#39;$l(mi) q 0 i \u0026#39;$l(epis) d Trace^MI.MIF000(mi,\u0026#34;流水号不能为空\u0026#34;,\u0026#34;保存检测结论返回\u0026#34;) q 0 //报告可能核收到微生物培养的四个小组 s WGM=\u0026#34;\u0026#34; i $d(^dbo.RPVisitNumberReportI(\u0026#34;IndexMicNo\u0026#34;,15,\u0026#34; \u0026#34;_epis)) s WGM=15 i \u0026#39;$l(WGM) q 0 s sc=0 s transmitDate=\u0026#34;\u0026#34; f s transmitDate=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexMicNo\u0026#34;,WGM,\u0026#34; \u0026#34;_epis,transmitDate)) q:transmitDate=\u0026#34;\u0026#34; d .s ReportDR=\u0026#34;\u0026#34; f s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexMicNo\u0026#34;,WGM,\u0026#34; \u0026#34;_epis,transmitDate,ReportDR)) q:ReportDR=\u0026#34;\u0026#34; d ..//IndexReportItem On (VisitNumberReportDR, TestCodeDR) ..i \u0026#39;$d(^dbo.RPVisitNumberReportResultI(\u0026#34;IndexReportItem\u0026#34;,ReportDR,TestCodeDR)) q ..s ResultDR=$o(^dbo.RPVisitNumberReportResultI(\u0026#34;IndexReportItem\u0026#34;,ReportDR,TestCodeDR,\u0026#34;\u0026#34;)) ..s objRep=##Class(dbo.RPVisitNumberReportResult).%OpenId(ResultDR) ..s EXPRlues=objRep.ExpertRule ..i EXPRlues=ExpertRules q //专家规则不再变化，不存 ..s objRep.ExpertRule=ExpertRules ..s sc=objRep.%Save() ..i (\u0026#39;$SYSTEM.Status.IsOK(sc)) d Trace^MI.MIF000(mi,\u0026#34;保存检测结论失败\u0026#34;,\u0026#34;保存检测结论失败返回\u0026#34;) q ..d Trace^MI.MIF000(mi,ExpertRules,\u0026#34;保存检测结论成功返回\u0026#34;) q sc } // D ##class(MI.MIFDL96E02).SaveExpertRules(\u0026#34;26\u0026#34;, \u0026#34;52772\u0026#34;,\u0026#34;ceshi\u0026#34;, \u0026#34;1\u0026#34;) ClassMethod SaveExpertRules(mi, epis, expertRules, code, Output RowCount As %String) As %String { s mi=$g(mi) s epis=$g(epis) s expertRules=$g(expertRules) s code=$g(code) s (WorkGroupMachineDR,AcceptDate,ReportDr,TestCodeDR,ReportResultDR,CodeDR)=\u0026#34;\u0026#34; s WorkGroupMachineDR=$lg(^dbo.BTMIMachineParameterD(mi),6) //b ;1 s AcceptDate=\u0026#34;\u0026#34; f s AcceptDate=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAcceptDate\u0026#34;,WorkGroupMachineDR,AcceptDate)) q:AcceptDate=\u0026#34;\u0026#34; d .s ReportDr=\u0026#34;\u0026#34; f s ReportDr=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexAcceptDate\u0026#34;,WorkGroupMachineDR,AcceptDate,##Class(LIS.Util.Common).IndexData(epis),ReportDr)) q:ReportDr=\u0026#34;\u0026#34; d ..s TestCodeDR=\u0026#34;\u0026#34; f s TestCodeDR=$o(^dbo.RPVisitNumberReportResultI(\u0026#34;IndexReportItem\u0026#34;,ReportDr,TestCodeDR)) q:TestCodeDR=\u0026#34;\u0026#34; d ...s ReportResultDR=\u0026#34;\u0026#34; f s ReportResultDR=$o(^dbo.RPVisitNumberReportResultI(\u0026#34;IndexReportItem\u0026#34;,ReportDr,TestCodeDR,ReportResultDR)) q:ReportResultDR=\u0026#34;\u0026#34; d ....s CodeDR=$lg(^dbo.RPVisitNumberReportResultD(ReportResultDR),3) ....b ;3 ....i (code+655=CodeDR) d .....//b ;2 .....s obj=##Class(dbo.RPVisitNumberReportResult).%OpenId(ReportResultDR) .....s obj.ExpertRule=expertRules .....s ret=obj.%Save() q \u0026#34;\u0026#34; } /// D ##class(MI.MIFLISMonitorTest)SaveImageMTHD(\u0026#34;7\u0026#34;,\u0026#34;9999\u0026#34;, \u0026#34;\u0026#34;,\u0026#34;175\u0026#34;) /// mi:仪器 /// epis：流水号，如果是监听图片模式该位置放图片名称，自己在保存前提取流水 /// ImageClass:图片类别，如果是监听图片模式该位置放图片名称，自己在保存前提取图片类型 /// FileName:保存在文件服务的相对路径，默认不动 /// FullName:文件全路径，如果是监听图片模式该位置放图片全路径名称，满足有的图片名称无法得到流水和图片类别的情况 ClassMethod SaveImageMTHD(mi, epis, ImageClass, FileName, FullName, SaveImageRetName, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //通过OtherPara配置取图的在这里通过epis和ImageClass的图片名字提取出流水号和图片类别 s mi=$g(mi) s epis=$g(epis) s ImageClass=$g(ImageClass) s FileName=$g(FileName) s FullName=$g(FullName) s SaveImageRetName=$g(SaveImageRetName) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; d ##Class(MI.Common.MIFBase).Trace(mi,epis_\u0026#34;:\u0026#34;_ImageClass_\u0026#34;:\u0026#34;_FileName,\u0026#34;H\u0026lt;--M\u0026#34;) s (ReceiveDate, ImageOrder, Caption, DisplayRatio, Height, Width, Sequence)=\u0026#34;\u0026#34; //加上当前时间，防止浏览器缓存 s FileName=FileName_\u0026#34;?\u0026#34;_$p($h,\u0026#34;,\u0026#34;,2) //OtherPara用^分隔第四位指定SaveImageRetName的话在这里改FileName为新名称。同时让方法返回新图片名字 s NewFileName=\u0026#34;\u0026#34; i SaveImageRetName=\u0026#34;SaveImageRetName\u0026#34; d .//图片新名字 .;s NewFileName=epis_\u0026#34;-\u0026#34;_ImageClass_\u0026#34;-\u0026#34; .//路径新名字 .s NewPathName=\u0026#34;\u0026#34; .s SPLen=$l(FileName,\u0026#34;/\u0026#34;) .f ii=1:1:SPLen d ..i ii\u0026lt;SPLen d ...s NewPathName=NewPathName_$p(FileName,\u0026#34;/\u0026#34;,ii)_\u0026#34;/\u0026#34; ..i ii=SPLen d ...s NewFileName=NewFileName_$p(FileName,\u0026#34;/\u0026#34;,ii) .s NewPathName=NewPathName_NewFileName .s FileName=NewPathName //最后返回NewFileName s ret=##Class(MI.Common.MachineResult).SaveImage(ReceiveDate, epis, ImageClass, ImageOrder, FileName, mi, Caption, DisplayRatio, Height, Width, Sequence) //返回值控制图片名称模式 i SaveImageRetName=\u0026#34;SaveImageRetName\u0026#34; d .s ret=NewFileName q ret } /// 返回给监听当前上传文件路径名称，默认不要动 /// w ##class(MI.MIFLISMonitorTest).GetFtpMTHD(\u0026#34;7\u0026#34;) /// mi:仪器 ClassMethod GetFtpMTHD(mi, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { //文件服务模式必须改的地方，老的FTP模式这么改了也没问题，所以建议都这样 s mi=$g(mi) q ##Class(MI.Common.MIFBase).GetMiFtpPath(mi) } /// Creator： 查询患者信息，监听配置上传前处理类后会定时调用这个query查询数据进行上传操作 /// CreatDate： 20140919 /// Description:： /// Table： /// Input： mi：仪器主键 /// Output： 仪器信息 /// Return： 仪器信息 /// Others： Query QryLabInfo(mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Query(ROWSPEC = \u0026#34;labno,labnoInfo,patInfo\u0026#34;) { } /// Query的执行方法 /// d ##class(%ResultSet).RunQuery(\u0026#34;MI.MIFDL96A\u0026#34;,\u0026#34;QryLabInfo\u0026#34;,\u0026#34;56\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;,\u0026#34;\u0026#34;) ClassMethod QryLabInfoExecute(ByRef qHandle As %Binary, mi As %String, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %Status { Set repid=$i(^CacheTemp) Set ind=1 s mi=$g(mi),flag=$g(flag) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; s LabnoList=\u0026#34;\u0026#34; //控制输出Excel //s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo(\u0026#34;D:\\\\OUT\\\\上传.xls\u0026#34;,\u0026#34;张三[0][1]男[0][1]28岁[0][1]\u0026#34;_$h,\u0026#34;900001\u0026#34;,\u0026#34;1\u0026#34;) //d OutputRow //Set qHandle=$lb(0,repid,0) //Quit $$$OK //控制输出Excel //查最近8天 s AddDate=$zd($p($h,\u0026#34;,\u0026#34;,1)-8,8) f s AddDate=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate)) q:AddDate=\u0026#34;\u0026#34; d .s AddTime=\u0026#34;\u0026#34; f s AddTime=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime)) q:AddTime=\u0026#34;\u0026#34; d ..//20秒以内的先不上传，防止没接收完 ..i (AddDate=$zd($h,8)),(($p($h,\u0026#34;,\u0026#34;,2)-AddTime)\u0026lt;20) q ..s MiUploadDR=$o(^dbo.RPMachineUploadI(\u0026#34;IndexSendStatus\u0026#34;,mi,##Class(LIS.Util.Common).IndexData(\u0026#34;C\u0026#34;),AddDate,AddTime,\u0026#34;\u0026#34;)) ..s labno=$lg(^dbo.RPMachineUploadD(MiUploadDR),3) ..i \u0026#39;$l(labno) q ..//得到通道号 ..s chl=$lg($g(^dbo.RPMachineUploadD(MiUploadDR)),7) ..//测试类型0：文本，1：数据库 ..s TestType=\u0026#34;1\u0026#34; ..i TestType=\u0026#34;0\u0026#34; d ...//文本双向上传开始****************************************************** ...//控制输出文本的内容 ...s txtInfo=labno_\u0026#34;^\u0026#34;_chl ...s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo($zd($h,8)_labno_\u0026#34;.order\u0026#34;,txtInfo,labno,\u0026#34;\u0026#34;) ...d OutputRow ...s labno=labnoOld_\u0026#34;^\u0026#34;_$zd($h,8)_labno_\u0026#34;.ok\u0026#34; ...s Data=##class(MI.Common.MIFBase).DemoMOutFileInfo($zd($h,8)_labno_\u0026#34;.ok\u0026#34;,txtInfo,labno,\u0026#34;\u0026#34;) ...d OutputRow ...//文本双向上传结束****************************************************** ..i TestType=\u0026#34;1\u0026#34; d ...//数据库双向上传开始****************************************************** ...//控制执行sql ...//Insert into liscontroller.lis_application (SPEC_NUM,BTBarcode,ASTBarcode,PATIENT_ID,MSPosition,PatientNo,FULL_NAME,FIRST_NAME,LAST_NAME,Birth,AGE,SEX,Purpose,WARD,Specimen,BedNo,Diagnosis,SpRequest,Medication,SuspectedBact,Doctor,AdviceNo,ApplyDate,SendDate,Collector,SPEC_DATE,CollectPosition,IdResult,Updated,UpdateDate,CARSS_ReadDate,StainType,StructVersion) values ...//(\u0026#39;9999\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;199732\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39; \u0026#39;,\u0026#39;测试\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;85y\u0026#39;,\u0026#39;f\u0026#39;,\u0026#39;普通细菌培养+药敏\u0026#39;,\u0026#39;三病室\u0026#39;,\u0026#39;痰\u0026#39;,\u0026#39;3\u0026#39;,\u0026#39; \u0026#39;,\u0026#39; \u0026#39;,\u0026#39; \u0026#39;,\u0026#39; \u0026#39;,\u0026#39;刘云\u0026#39;,\u0026#39; \u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;2024/6/28 9:17\u0026#39;,\u0026#39;谢艳红\u0026#39;,\u0026#39;2024/6/29 11:17\u0026#39;,\u0026#39; \u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;0\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;) ...s PatInfo=..GetPatInfo(mi, labno) ...d Trace^MI.MIF000(mi,PatInfo,\u0026#34;PatInfo\u0026#34;) ...//2024-07-01 16:47:48,Mejer600-4,2406290091,,,mnwk-泌尿外科,刘乐,唐云,0000628089,周田香,2,住院,33,43,,2406290091,2024-06-29 11:15,,,,,肾积水伴肾输尿管结石,,,,2024-06-29 06:48,, ...s EPIS=$p(PatInfo,\u0026#34;,\u0026#34;,31) //鉴定号 ...s DTTime=$p(PatInfo,\u0026#34;,\u0026#34;,32) //核收时间 ...s Name=$p(PatInfo,\u0026#34;,\u0026#34;,10) //姓名 ...s Sex=$p(PatInfo,\u0026#34;,\u0026#34;,11) //性别 ...i Sex=\u0026#34;1\u0026#34; s Sex=\u0026#34;m\u0026#34; ...i Sex=\u0026#34;2\u0026#34; s Sex=\u0026#34;f\u0026#34; ...s Age=$p(PatInfo,\u0026#34;,\u0026#34;,14) //年龄 ...s MediNo=$p(PatInfo,\u0026#34;,\u0026#34;,29) //病案号 ...s Location=$p(PatInfo,\u0026#34;,\u0026#34;,6) //科室 ...i Location[\u0026#34;-\u0026#34; s Location=$p(Location,\u0026#34;-\u0026#34;,2) //jzwkszwk-脊柱外科 ...s Speciman=$p(PatInfo,\u0026#34;,\u0026#34;,30) //标本类型 ...s BedNo=$p(PatInfo,\u0026#34;,\u0026#34;,13) //床号 ...s Doctor=$p(PatInfo,\u0026#34;,\u0026#34;,7) //医生 ...s CollectUser=$p(PatInfo,\u0026#34;,\u0026#34;,8) //采集者 ...//s DTTime=$tr($zd($h,3),\u0026#34;-\u0026#34;,\u0026#34;/\u0026#34;)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2),1) //2024/6/28 9:17 $p($zt($h,1),\u0026#34;:\u0026#34;,1,*-1) ...s SqlStr=\u0026#34;Insert into liscontroller.lis_application (SPEC_NUM,BTBarcode,ASTBarcode,PATIENT_ID,MSPosition,PatientNo,FULL_NAME,FIRST_NAME,LAST_NAME,Birth,AGE,SEX,Purpose,WARD,Specimen,BedNo,Diagnosis,SpRequest,Medication,SuspectedBact,Doctor,AdviceNo,ApplyDate,SendDate,Collector,SPEC_DATE,CollectPosition,IdResult,Updated,UpdateDate,CARSS_ReadDate,StainType,StructVersion) values \u0026#34; ...s ValueStr=\u0026#34;(\u0026#39;\u0026#34;_EPIS_\u0026#34;\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;\u0026#34;_MediNo_\u0026#34;\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39; \u0026#39;,\u0026#39;\u0026#34;_Name_\u0026#34;\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;\u0026#39;,\u0026#39;\u0026#34;_Age_\u0026#34;\u0026#39;,\u0026#39;\u0026#34;_Sex_\u0026#34;\u0026#39;,\u0026#39;普通细菌培养+药敏\u0026#39;,\u0026#39;\u0026#34;_Location_\u0026#34;\u0026#39;,\u0026#39;\u0026#34;_Speciman_\u0026#34;\u0026#39;,\u0026#39;\u0026#34;_BedNo_\u0026#34;\u0026#39;,\u0026#39; \u0026#39;,\u0026#39; \u0026#39;,\u0026#39; \u0026#39;,\u0026#39; \u0026#39;,\u0026#39;\u0026#34;_Doctor_\u0026#34;\u0026#39;,\u0026#39; \u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;\u0026#34;_DTTime_\u0026#34;\u0026#39;,\u0026#39;\u0026#34;_CollectUser_\u0026#34;\u0026#39;,\u0026#39;\u0026#34;_DTTime_\u0026#34;\u0026#39;,\u0026#39; \u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;0\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;,\u0026#39;NULL\u0026#39;)\u0026#34; ...s SqlStr=SqlStr_ValueStr ...d Trace^MI.MIF000(mi,SqlStr,\u0026#34;SqlStr\u0026#34;) ...s ^DL96(\u0026#34;Send\u0026#34;,+$h,labno)=1 //上传标识置为1 ...//多条命令组装多个SQL语句输出.SQL包含$StoredProcedure就当存储过程执行 ...s Data=##class(MI.Common.MIFBase).DemoMOutDBInfo(\u0026#34;DSN=DL96A\u0026#34;,SqlStr,labno) ...d OutputRow ..//数据库双向上传结束****************************************************** Set qHandle=$lb(0,repid,0) Quit $$$OK OutputRow Set ColFields=\u0026#34;labno,labnoInfo,patInfo\u0026#34; Set ^CacheTemp(repid,ind)=##Class(LIS.Util.Common).TransListNull(Data,ColFields) Set ind=ind+1 quit } ClassMethod QryLabInfoClose(ByRef qHandle As %Binary) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set repid=$LIST(qHandle,2) Kill ^CacheTemp(repid) Quit $$$OK } ClassMethod QryLabInfoFetch(ByRef qHandle As %Binary, ByRef Row As %List, ByRef AtEnd As %Integer = 0) As %Status [ PlaceAfter = QryLabInfoExecute ] { Set AtEnd=$LIST(qHandle,1) Set repid=$LIST(qHandle,2) Set ind=$LIST(qHandle,3) Set ind=$o(^CacheTemp(repid,ind)) If ind=\u0026#34;\u0026#34; { Set AtEnd=1 Set Row=\u0026#34;\u0026#34; } Else { Set Row=^CacheTemp(repid,ind) } s qHandle=$lb(AtEnd,repid,ind) Quit $$$OK } /// w ##Class(MI.MIFLISMonitorTest).GetLabnoInfo(6,1001367) ClassMethod GetLabnoInfo(mi, labno) As %String { s mi=$g(mi),labno=$g(labno) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q \u0026#34;\u0026#34; //获取项目通道号 d ScanOne^MI.MIF000(mi,labno) s tcx=\u0026#34;\u0026#34; s chl=\u0026#34;\u0026#34; f s chl=$o(^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno,chl)) q:chl=\u0026#34;\u0026#34; d .s tcx=tcx_chl_\u0026#34;+\u0026#34; s tcx=$e(tcx,1,$l(tcx)-1) k ^TMP(\u0026#34;MIFTESTCODE\u0026#34;,$j,mi,labno) i $l(tcx) s tcx=labno_\u0026#34;,\u0026#34;_tcx_\u0026#34;|\u0026#34; q tcx } /// w ##Class(MI.MIFDL96A2).GetEPIS(\u0026#34;40\u0026#34;,\u0026#34;2407210719\u0026#34;) ClassMethod GetEPIS(mi, labno) As %String { //IndexReportID On (VisitNumberDR, WorkGroupMachineDR, OrderNo) s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s EPIS=\u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; s WGMDR=$lg($g(^dbo.BTMIMachineParameterD(mi)),6) s OrderNo=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,WGMDR,\u0026#34;\u0026#34;)) s ReportDR=$o(^dbo.RPVisitNumberReportI(\u0026#34;IndexReportID\u0026#34;,VisitNumberDR,WGMDR,OrderNo,\u0026#34;\u0026#34;)) s EPIS=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),6) s AcceptDate=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),9) s AcceptDate=$e(AcceptDate,1,4)_\u0026#34;-\u0026#34;_$e(AcceptDate,5,6)_\u0026#34;-\u0026#34;_$e(AcceptDate,7,8) s AcceptTime=$lg($g(^dbo.RPVisitNumberReportD(ReportDR)),10) S AcceptDT=AcceptDate_\u0026#34; \u0026#34;_$zt(AcceptTime,1) q EPIS_\u0026#34;^\u0026#34;_AcceptDT } /// w ##Class(MI.MIFDL96A2).GetPatInfo(\u0026#34;40\u0026#34;,\u0026#34;L0116440\u0026#34;) ClassMethod GetPatInfo(mi, labno) As %String { s labno = $g(labno),mi=$g(mi) i $l(labno)=0 q \u0026#34;\u0026#34; s VisitNumberDR = $o(^dbo.RPVisitNumberI(\u0026#34;IndexVisitNumber\u0026#34;,##Class(LIS.Util.Common).IndexData(labno),\u0026#34;\u0026#34;)) i \u0026#39;$l(VisitNumberDR) q \u0026#34;\u0026#34; //标本信息 s TransmitDate=$tr($zd($h,3),\u0026#34;-\u0026#34;) s RPVisitNumberData=$g(^dbo.RPVisitNumberD(VisitNumberDR)) // IndexEpisodeNo On (TransmitDate, WorkGroupMachineDR, EpisodeNo) s MedicalRecordNo=\u0026#34;\u0026#34;,SpecimenDR=\u0026#34;\u0026#34;,Specimen=\u0026#34;\u0026#34;,EPIS=\u0026#34;\u0026#34; s MedicalRecordNo=$lg(RPVisitNumberData,6) //病案号 s SpecimenDR=$lg(RPVisitNumberData,56) //标本类型 s EPIS=..GetEPIS(mi, labno) //鉴定号 s AcceptDT=$p(EPIS,\u0026#34;^\u0026#34;,2) s EPIS=$p(EPIS,\u0026#34;^\u0026#34;,1) i $l(SpecimenDR) s Specimen=$lg($g(^dbo.BTSpecimenD(SpecimenDR)),3) s LocationDR=$lg(RPVisitNumberData,22),Location=\u0026#34;\u0026#34; i $l(LocationDR) s Location=$lg($g(^dbo.BTLocationD(LocationDR)),3) i Location[\u0026#34;ICU\u0026#34; s Location=\u0026#34;重症监护室\u0026#34; s DoctorDR=$lg(RPVisitNumberData,23),Doctor=\u0026#34;\u0026#34; i $l(DoctorDR) s Doctor=$lg($g(^dbo.BTDoctorD(DoctorDR)),3) s ReceiveDate=$lg(RPVisitNumberData,66) s ReceiveTime=$lg(RPVisitNumberData,67) s ReceiveUserDR=$lg(RPVisitNumberData,68),ReceiveUser=\u0026#34;\u0026#34; i $l(ReceiveUserDR) s ReceiveUser=$lg($g(^dbo.SYSUserD(ReceiveUserDR)),3) s RegNo=$lg(RPVisitNumberData,3) s SurName=$lg(RPVisitNumberData,13) s GivenName=$lg(RPVisitNumberData,14) i SurName=GivenName s PatName=SurName e s PatName=SurName_GivenName s SpeciesDR=$lg(RPVisitNumberData,15),Species=\u0026#34;\u0026#34; i $l(SpeciesDR) s Species=$lg($g(^dbo.BTSpeciesD(SpeciesDR)),3) s AdmTypeDR=$lg(RPVisitNumberData,4),AdmType=\u0026#34;\u0026#34; i $l(AdmTypeDR) s AdmType=$lg($g(^dbo.BTAdmissionTypeD(AdmTypeDR)),3) s BedNo=$lg(RPVisitNumberData,27) s Age=$lg(RPVisitNumberData,18) s AgeUnitDR=$lg(RPVisitNumberData,19),AgeUnit=\u0026#34;\u0026#34; i AgeUnitDR=1 s AgeUnit=\u0026#34;y\u0026#34; i AgeUnitDR=2 s AgeUnit=\u0026#34;m\u0026#34; i AgeUnitDR=3 s AgeUnit=\u0026#34;d\u0026#34; i AgeUnitDR=4 s AgeUnit=\u0026#34;h\u0026#34; //i $l(AgeUnitDR) s AgeUnit=$lg($g(^dbo.BTAgeUnitD(AgeUnitDR)),3) S Age=Age_AgeUnit s CollectDate=$lg(RPVisitNumberData,51) s CollectTime=$lg(RPVisitNumberData,52) s Diagnose=$tr($lg(RPVisitNumberData,28),\u0026#34;,\u0026#34;,\u0026#34;，\u0026#34;) s Sampleda=$zd($p($h,\u0026#34;,\u0026#34;,1),3)_\u0026#34; \u0026#34;_$zt($p($h,\u0026#34;,\u0026#34;,2)) s Instrument = \u0026#34;XN\u0026#34; i $l(mi) s Instrument=$lg(^dbo.BTMIMachineParameterD(mi),22) s Sampleno=labno //检测号 s Sampletype=\u0026#34;\u0026#34; s Feetype=\u0026#34;\u0026#34; ;费别 s Srcdepno=Location ;送检科室 s Srcdocno=Doctor ;送检医生 s Userno=ReceiveUser ;检验医生(录入者) s Patno=RegNo ;登记号 \u0026#34;\u0026#34; s BarCode=\u0026#34;\u0026#34; s Patna=PatName ;病人姓名 s Sex=1 ;性别 i Species=\u0026#34;男\u0026#34; s Sex=\u0026#34;1\u0026#34; ;1:男 ，2 女 i Species =\u0026#34;女\u0026#34; s Sex=\u0026#34;2\u0026#34; s Pattype=AdmType ;病人类型 s Bedno = BedNo ;床号 s Patage=Age ;年龄 s Ageunit=\u0026#34;\u0026#34; ;年龄单位 s Reqno=labno ;申请号 = 检验号 s Reqda=\u0026#34;\u0026#34; i $l(ReceiveDate) s Reqda=$e(ReceiveDate,1,4)_\u0026#34;-\u0026#34;_$e(ReceiveDate,5,6)_\u0026#34;-\u0026#34;_$e(ReceiveDate,7,8)_\u0026#34; \u0026#34;_$zt(ReceiveTime,2) ;送检日期 = 接收时间 s Reportda=\u0026#34;\u0026#34; ;报告日期 = 初审(保存结果)时间 s Printflag=\u0026#34;\u0026#34; ;打印标志 s Resultflag=\u0026#34;\u0026#34; ;结果标志 s Errflag=\u0026#34;\u0026#34; ;错误标志 s Diagnose = Diagnose ;诊断 s Description=\u0026#34;\u0026#34; ;备注 s Reserve=\u0026#34;\u0026#34; ;保留字段 s Patnamn=\u0026#34;\u0026#34; ;姓名拼音码 i $l(CollectDate) s Getda=$e(CollectDate,1,4)_\u0026#34;-\u0026#34;_$e(CollectDate,5,6)_\u0026#34;-\u0026#34;_$e(CollectDate,7,8)_\u0026#34; \u0026#34;_$zt(CollectTime,2) e s Getda=Reqda ;接收时间/采样日期 s Wardno=\u0026#34;\u0026#34; ;病区 s RetString=\u0026#34;\u0026#34; s RetString=Sampleda_\u0026#34;,\u0026#34;_Instrument_\u0026#34;,\u0026#34;_Sampleno_\u0026#34;,\u0026#34;_Sampletype_\u0026#34;,\u0026#34;_Feetype_\u0026#34;,\u0026#34;_Srcdepno_\u0026#34;,\u0026#34;_Srcdocno_\u0026#34;,\u0026#34;_Userno_\u0026#34;,\u0026#34; s RetString=RetString_Patno_\u0026#34;,\u0026#34;_Patna_\u0026#34;,\u0026#34;_Sex_\u0026#34;,\u0026#34;_Pattype_\u0026#34;,\u0026#34;_Bedno_\u0026#34;,\u0026#34;_Patage_\u0026#34;,\u0026#34;_Ageunit_\u0026#34;,\u0026#34;_Reqno_\u0026#34;,\u0026#34;_Reqda_\u0026#34;,\u0026#34; s RetString=RetString_Reportda_\u0026#34;,\u0026#34;_Printflag_\u0026#34;,\u0026#34;_Resultflag_\u0026#34;,\u0026#34;_Errflag_\u0026#34;,\u0026#34;_Diagnose_\u0026#34;,\u0026#34;_Description_\u0026#34;,\u0026#34;_Reserve_\u0026#34;,\u0026#34; s RetString=RetString_Patnamn_\u0026#34;,\u0026#34;_Getda_\u0026#34;,\u0026#34;_Wardno_\u0026#34;,\u0026#34;_BarCode_\u0026#34;,\u0026#34;_MedicalRecordNo_\u0026#34;,\u0026#34;_Specimen_\u0026#34;,\u0026#34;_EPIS_\u0026#34;,\u0026#34;_AcceptDT q RetString } /// 监听做上传操作后调用改方法设置标本上传表状态 ClassMethod SaveSDFMTHD(mi, labno, epis, filename, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, Sessions, Output RowCount As %String) As %String { s mi=$g(mi),labno=$g(labno),epis = $g(epis),filename=$g(filename) i \u0026#39;$d(^dbo.BTMIMachineParameterD(mi)) q s ret=##Class(MI.MachineUpload).SetSendFlag(mi,labno,\u0026#34;S\u0026#34;,filename) q } } ","date":"0001-01-01T00:00:00Z","permalink":"https://work.717170.xyz/p/","title":""}]